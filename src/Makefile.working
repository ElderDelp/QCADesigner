# Makefile.in generated by automake 1.9.6 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/QCADesigner
pkglibdir = $(libdir)/QCADesigner
pkgincludedir = $(includedir)/QCADesigner
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = batch_sim$(EXEEXT) combo_test$(EXEEXT) \
	graph_dialog$(EXEEXT) QCADesigner$(EXEEXT)
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.inc
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
AR = ar
ARFLAGS = cru
libgtkdocfiles_a_AR = $(AR) $(ARFLAGS)
libgtkdocfiles_a_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am_libgtkdocfiles_a_OBJECTS =  \
	objects/libgtkdocfiles_a-QCADComboBox.$(OBJEXT) \
	objects/libgtkdocfiles_a-QCADRadioButton.$(OBJEXT) \
	objects/libgtkdocfiles_a-QCADRadioToolButton.$(OBJEXT) \
	objects/libgtkdocfiles_a-QCADToggleToolButton.$(OBJEXT) \
	objects/libgtkdocfiles_a-QCADCellRendererText.$(OBJEXT)
libgtkdocfiles_a_OBJECTS = $(am_libgtkdocfiles_a_OBJECTS)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am__objects_1 = QCADesigner-fileio_helpers.$(OBJEXT) \
	QCADesigner-generic_utils.$(OBJEXT) \
	QCADesigner-exp_array.$(OBJEXT) QCADesigner-hsl2rgb.$(OBJEXT) \
	QCADesigner-custom_widgets.$(OBJEXT)
am__objects_2 = QCADesigner-design.$(OBJEXT) \
	objects/QCADesigner-QCADRuler.$(OBJEXT) \
	objects/QCADesigner-QCADCell.$(OBJEXT) \
	objects/QCADesigner-QCADCompoundDO.$(OBJEXT) \
	objects/QCADesigner-QCADObject.$(OBJEXT) \
	objects/QCADesigner-QCADDesignObject.$(OBJEXT) \
	objects/QCADesigner-QCADDOContainer.$(OBJEXT) \
	objects/QCADesigner-QCADLabel.$(OBJEXT) \
	objects/QCADesigner-QCADLayer.$(OBJEXT) \
	objects/QCADesigner-QCADClockingLayer.$(OBJEXT) \
	objects/QCADesigner-QCADStretchyObject.$(OBJEXT) \
	objects/QCADesigner-QCADElectrode.$(OBJEXT) \
	objects/QCADesigner-QCADRectangleElectrode.$(OBJEXT) \
	objects/QCADesigner-QCADSubstrate.$(OBJEXT) \
	objects/QCADesigner-QCADParamSpecObjectList.$(OBJEXT) \
	objects/QCADesigner-object_helpers.$(OBJEXT)
am__objects_3 = QCADesigner-simulation.$(OBJEXT) \
	QCADesigner-bistable_simulation.$(OBJEXT) \
	QCADesigner-coherence_vector.$(OBJEXT) \
	QCADesigner-semi_coherent.$(OBJEXT) \
	QCADesigner-ts_field_clock.$(OBJEXT) \
	QCADesigner-three_state_coherence.$(OBJEXT) \
	QCADesigner-matrixlib_3x3.$(OBJEXT)
am__objects_4 = QCADesigner-fileio.$(OBJEXT)
am__objects_5 = QCADesigner-graph_dialog.$(OBJEXT) \
	QCADesigner-graph_dialog_interface.$(OBJEXT) \
	QCADesigner-graph_dialog_callbacks.$(OBJEXT) \
	QCADesigner-graph_dialog_data.$(OBJEXT) \
	QCADesigner-waveform_interpretation_dialog.$(OBJEXT)
am__objects_6 = objects/QCADesigner-QCADParamSpecTypeList.$(OBJEXT) \
	objects/QCADesigner-QCADPropertyUI.$(OBJEXT) \
	objects/QCADesigner-QCADPropertyUISingle.$(OBJEXT) \
	objects/QCADesigner-QCADPropertyUIDouble.$(OBJEXT) \
	objects/QCADesigner-QCADPropertyUINumeric.$(OBJEXT) \
	objects/QCADesigner-QCADPropertyUIInt.$(OBJEXT) \
	objects/QCADesigner-QCADPropertyUIGroup.$(OBJEXT) \
	objects/QCADesigner-QCADPropertyUIEnum.$(OBJEXT) \
	objects/QCADesigner-QCADPropertyUIText.$(OBJEXT) \
	objects/QCADesigner-QCADPropertyUIObjectList.$(OBJEXT) \
	objects/QCADesigner-QCADPropertyUIBoolean.$(OBJEXT)
am__objects_7 = objects/QCADesigner-QCADUndoEntry.$(OBJEXT) \
	objects/QCADesigner-QCADUndoEntryGroup.$(OBJEXT) \
	objects/QCADesigner-QCADUndoEntryObjectState.$(OBJEXT) \
	QCADesigner-selection_undo.$(OBJEXT)
am__objects_8 = objects/QCADesigner-QCADComboBox.$(OBJEXT) \
	objects/QCADesigner-QCADToggleToolButton.$(OBJEXT) \
	objects/QCADesigner-QCADRadioToolButton.$(OBJEXT) \
	objects/QCADesigner-QCADRadioButton.$(OBJEXT)
am__objects_9 = QCADesigner-bistable_properties_dialog.$(OBJEXT) \
	QCADesigner-semi_coherent_properties_dialog.$(OBJEXT) \
	QCADesigner-ts_fc_properties_dialog.$(OBJEXT) \
	QCADesigner-coherence_vector_properties_dialog.$(OBJEXT) \
	QCADesigner-ts_coherence_vector_properties_dialog.$(OBJEXT)
am__objects_10 = QCADesigner-vector_table_options_dialog.$(OBJEXT) \
	QCADesigner-vector_table_options_dialog_interface.$(OBJEXT) \
	QCADesigner-vector_table_options_dialog_callbacks.$(OBJEXT)
am_QCADesigner_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_3) $(am__objects_4) \
	QCADesigner-preamble.$(OBJEXT) QCADesigner-support.$(OBJEXT) \
	$(am__objects_5) $(am__objects_6) $(am__objects_7) \
	$(am__objects_8) $(am__objects_9) $(am__objects_10) \
	QCADesigner-interface.$(OBJEXT) \
	QCADesigner-callbacks.$(OBJEXT) \
	actions/QCADesigner-array.$(OBJEXT) \
	actions/QCADesigner-rotate.$(OBJEXT) \
	actions/QCADesigner-select.$(OBJEXT) \
	QCADesigner-exp_pixmap.$(OBJEXT) \
	QCADesigner-simulation_data.$(OBJEXT) \
	QCADesigner-graph_dialog_widget_data.$(OBJEXT) \
	objects/QCADesigner-mouse_handlers.$(OBJEXT) \
	objects/QCADesigner-QCADCellRendererText.$(OBJEXT) \
	objects/QCADesigner-QCADCellRendererVT.$(OBJEXT) \
	objects/QCADesigner-QCADCellRendererLayerList.$(OBJEXT) \
	objects/QCADesigner-QCADFlexiCombo.$(OBJEXT) \
	objects/QCADesigner-QCADLayersCombo.$(OBJEXT) \
	objects/QCADesigner-QCADPrintDialog.$(OBJEXT) \
	QCADesigner-print_properties_dialog.$(OBJEXT) \
	QCADesigner-print_properties_dialog_interface.$(OBJEXT) \
	QCADesigner-print_graph_properties_dialog.$(OBJEXT) \
	QCADesigner-print.$(OBJEXT) QCADesigner-print_graph.$(OBJEXT) \
	QCADesigner-print_util.$(OBJEXT) \
	QCADesigner-print_preview.$(OBJEXT) \
	QCADesigner-selection_renderer.$(OBJEXT) \
	QCADesigner-vector_table.$(OBJEXT) \
	QCADesigner-recent_files.$(OBJEXT) QCADesigner-about.$(OBJEXT) \
	QCADesigner-file_selection_window.$(OBJEXT) \
	QCADesigner-bus_layout_dialog.$(OBJEXT) \
	QCADesigner-layer_mapping_dialog.$(OBJEXT) \
	QCADesigner-layer_order_dialog.$(OBJEXT) \
	QCADesigner-scale_dialog.$(OBJEXT) \
	QCADesigner-sim_engine_setup_dialog.$(OBJEXT) \
	QCADesigner-translate_selection_dialog.$(OBJEXT) \
	QCADesigner-main.$(OBJEXT)
QCADesigner_OBJECTS = $(am_QCADesigner_OBJECTS)
am__DEPENDENCIES_1 =
QCADesigner_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__objects_11 = batch_sim-fileio_helpers.$(OBJEXT) \
	batch_sim-generic_utils.$(OBJEXT) \
	batch_sim-exp_array.$(OBJEXT) batch_sim-hsl2rgb.$(OBJEXT) \
	batch_sim-custom_widgets.$(OBJEXT)
am__objects_12 = batch_sim-design.$(OBJEXT) \
	objects/batch_sim-QCADRuler.$(OBJEXT) \
	objects/batch_sim-QCADCell.$(OBJEXT) \
	objects/batch_sim-QCADCompoundDO.$(OBJEXT) \
	objects/batch_sim-QCADObject.$(OBJEXT) \
	objects/batch_sim-QCADDesignObject.$(OBJEXT) \
	objects/batch_sim-QCADDOContainer.$(OBJEXT) \
	objects/batch_sim-QCADLabel.$(OBJEXT) \
	objects/batch_sim-QCADLayer.$(OBJEXT) \
	objects/batch_sim-QCADClockingLayer.$(OBJEXT) \
	objects/batch_sim-QCADStretchyObject.$(OBJEXT) \
	objects/batch_sim-QCADElectrode.$(OBJEXT) \
	objects/batch_sim-QCADRectangleElectrode.$(OBJEXT) \
	objects/batch_sim-QCADSubstrate.$(OBJEXT) \
	objects/batch_sim-QCADParamSpecObjectList.$(OBJEXT) \
	objects/batch_sim-object_helpers.$(OBJEXT)
am__objects_13 = batch_sim-simulation.$(OBJEXT) \
	batch_sim-bistable_simulation.$(OBJEXT) \
	batch_sim-coherence_vector.$(OBJEXT) \
	batch_sim-semi_coherent.$(OBJEXT) \
	batch_sim-ts_field_clock.$(OBJEXT) \
	batch_sim-three_state_coherence.$(OBJEXT) \
	batch_sim-matrixlib_3x3.$(OBJEXT)
am__objects_14 = batch_sim-fileio.$(OBJEXT)
am_batch_sim_OBJECTS = $(am__objects_11) $(am__objects_12) \
	$(am__objects_13) $(am__objects_14) \
	batch_sim-simulation_data.$(OBJEXT) \
	batch_sim-graph_dialog_widget_data.$(OBJEXT) \
	batch_sim-vector_table.$(OBJEXT) batch_sim-preamble.$(OBJEXT) \
	batch_sim-main_batch_sim.$(OBJEXT)
batch_sim_OBJECTS = $(am_batch_sim_OBJECTS)
batch_sim_DEPENDENCIES =
am__objects_15 = combo_test-fileio_helpers.$(OBJEXT) \
	combo_test-generic_utils.$(OBJEXT) \
	combo_test-exp_array.$(OBJEXT) combo_test-hsl2rgb.$(OBJEXT) \
	combo_test-custom_widgets.$(OBJEXT)
am__objects_16 = combo_test-fileio.$(OBJEXT)
am__objects_17 = combo_test-design.$(OBJEXT) \
	objects/combo_test-QCADRuler.$(OBJEXT) \
	objects/combo_test-QCADCell.$(OBJEXT) \
	objects/combo_test-QCADCompoundDO.$(OBJEXT) \
	objects/combo_test-QCADObject.$(OBJEXT) \
	objects/combo_test-QCADDesignObject.$(OBJEXT) \
	objects/combo_test-QCADDOContainer.$(OBJEXT) \
	objects/combo_test-QCADLabel.$(OBJEXT) \
	objects/combo_test-QCADLayer.$(OBJEXT) \
	objects/combo_test-QCADClockingLayer.$(OBJEXT) \
	objects/combo_test-QCADStretchyObject.$(OBJEXT) \
	objects/combo_test-QCADElectrode.$(OBJEXT) \
	objects/combo_test-QCADRectangleElectrode.$(OBJEXT) \
	objects/combo_test-QCADSubstrate.$(OBJEXT) \
	objects/combo_test-QCADParamSpecObjectList.$(OBJEXT) \
	objects/combo_test-object_helpers.$(OBJEXT)
am_combo_test_OBJECTS = objects/combo_test-QCADFlexiCombo.$(OBJEXT) \
	objects/combo_test-QCADLayersCombo.$(OBJEXT) \
	objects/combo_test-QCADCellRendererText.$(OBJEXT) \
	objects/combo_test-QCADCellRendererVT.$(OBJEXT) \
	$(am__objects_15) $(am__objects_16) $(am__objects_17) \
	combo_test-support.$(OBJEXT) combo_test-preamble.$(OBJEXT) \
	combo_test-simulation_data.$(OBJEXT) \
	combo_test-main_combo_test.$(OBJEXT)
combo_test_OBJECTS = $(am_combo_test_OBJECTS)
combo_test_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__objects_18 = graph_dialog-fileio_helpers.$(OBJEXT) \
	graph_dialog-generic_utils.$(OBJEXT) \
	graph_dialog-exp_array.$(OBJEXT) \
	graph_dialog-hsl2rgb.$(OBJEXT) \
	graph_dialog-custom_widgets.$(OBJEXT)
am__objects_19 = graph_dialog-design.$(OBJEXT) \
	objects/graph_dialog-QCADRuler.$(OBJEXT) \
	objects/graph_dialog-QCADCell.$(OBJEXT) \
	objects/graph_dialog-QCADCompoundDO.$(OBJEXT) \
	objects/graph_dialog-QCADObject.$(OBJEXT) \
	objects/graph_dialog-QCADDesignObject.$(OBJEXT) \
	objects/graph_dialog-QCADDOContainer.$(OBJEXT) \
	objects/graph_dialog-QCADLabel.$(OBJEXT) \
	objects/graph_dialog-QCADLayer.$(OBJEXT) \
	objects/graph_dialog-QCADClockingLayer.$(OBJEXT) \
	objects/graph_dialog-QCADStretchyObject.$(OBJEXT) \
	objects/graph_dialog-QCADElectrode.$(OBJEXT) \
	objects/graph_dialog-QCADRectangleElectrode.$(OBJEXT) \
	objects/graph_dialog-QCADSubstrate.$(OBJEXT) \
	objects/graph_dialog-QCADParamSpecObjectList.$(OBJEXT) \
	objects/graph_dialog-object_helpers.$(OBJEXT)
am__objects_20 = graph_dialog-graph_dialog.$(OBJEXT) \
	graph_dialog-graph_dialog_interface.$(OBJEXT) \
	graph_dialog-graph_dialog_callbacks.$(OBJEXT) \
	graph_dialog-graph_dialog_data.$(OBJEXT) \
	graph_dialog-waveform_interpretation_dialog.$(OBJEXT)
am__objects_21 = graph_dialog-fileio.$(OBJEXT)
am_graph_dialog_OBJECTS = graph_dialog-preamble.$(OBJEXT) \
	graph_dialog-support.$(OBJEXT) $(am__objects_18) \
	$(am__objects_19) $(am__objects_20) $(am__objects_21) \
	graph_dialog-simulation_data.$(OBJEXT) \
	graph_dialog-graph_dialog_widget_data.$(OBJEXT) \
	objects/graph_dialog-QCADPrintDialog.$(OBJEXT) \
	graph_dialog-print_graph_properties_dialog.$(OBJEXT) \
	graph_dialog-print_graph.$(OBJEXT) \
	graph_dialog-print_util.$(OBJEXT) \
	graph_dialog-print_preview.$(OBJEXT) \
	graph_dialog-file_selection_window.$(OBJEXT) \
	graph_dialog-bus_layout_dialog.$(OBJEXT) \
	objects/graph_dialog-QCADRadioButton.$(OBJEXT) \
	objects/graph_dialog-QCADRadioToolButton.$(OBJEXT) \
	graph_dialog-main_graph_dialog.$(OBJEXT)
graph_dialog_OBJECTS = $(am_graph_dialog_OBJECTS)
graph_dialog_DEPENDENCIES = $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libgtkdocfiles_a_SOURCES) $(QCADesigner_SOURCES) \
	$(batch_sim_SOURCES) $(combo_test_SOURCES) \
	$(graph_dialog_SOURCES)
DIST_SOURCES = $(libgtkdocfiles_a_SOURCES) $(QCADesigner_SOURCES) \
	$(batch_sim_SOURCES) $(combo_test_SOURCES) \
	$(graph_dialog_SOURCES)

ROOTPATH = ~/CLAPACK
INCDIRS = -I$(ROOTPATH)/SRC -I$(ROOTPATH)
F2CDIR  = $(ROOTPATH)/F2CLIBS
LDLIBS  = $(ROOTPATH)/lapack_LINUX.a \
          $(ROOTPATH)/blas_LINUX.a \
          $(F2CDIR)/libF77.a $(F2CDIR)/libI77.a -lm

ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/faizalk/QCADesigner/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/faizalk/QCADesigner/missing --run tar
AUTOCONF = ${SHELL} /home/faizalk/QCADesigner/missing --run autoconf
AUTOHEADER = ${SHELL} /home/faizalk/QCADesigner/missing --run autoheader
AUTOMAKE = ${SHELL} /home/faizalk/QCADesigner/missing --run automake-1.9
AWK = gawk
CATALOGS =  de.gmo hu.gmo ro.gmo fr.gmo pl.gmo it.gmo
CATOBJEXT = .gmo
CC = gcc -DNO_BLAS_WRAP
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DATADIRNAME = share
DEFS = -DPACKAGE_NAME=\"\" -DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE=\"QCADesigner\" -DVERSION=\"2.0.3\" -DSTDC_HEADERS=1 -DHAVE_LIBRSVG=1 -DGETTEXT_PACKAGE=\"QCADesigner\" -DPACKAGE_SOURCE_DIR=\"/home/faizalk/QCADesigner\" -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_LOCALE_H=1 -DHAVE_LC_MESSAGES=1 -DHAVE_BIND_TEXTDOMAIN_CODESET=1 -DHAVE_GETTEXT=1 -DHAVE_DCGETTEXT=1 -DENABLE_NLS=1 
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
ENABLE_GTK_DOC_FALSE = 
ENABLE_GTK_DOC_TRUE = #
EXEEXT = 
GETTEXT_PACKAGE = QCADesigner
GLIB_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include  
GLIB_LIBS = -L/lib64 -lglib-2.0  
GMOFILES =  de.gmo hu.gmo ro.gmo fr.gmo pl.gmo it.gmo
GMSGFMT = /usr/bin/msgfmt
GOBJECT_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include  
GOBJECT_LIBS = -L/lib64 -lgobject-2.0 -lglib-2.0  
GTHREAD_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include  
GTHREAD_LIBS = -pthread -L/lib64 -lgthread-2.0 -lglib-2.0  
GTK_CFLAGS = -I/usr/include/gtk-2.0 -I/usr/lib64/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng12  
GTK_DOC_USE_LIBTOOL_FALSE = 
GTK_DOC_USE_LIBTOOL_TRUE = #
GTK_LIBS = -L/lib64 -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lm -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0  
HTML_DIR = ${datadir}/gtk-doc/html
ICON_EXT = .svg
INCLUDES = ${INCDIRS}
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = 
LDFLAGS = 
LIBOBJS = 
LIBS = ${LDLIBS}
LTLIBOBJS = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /home/faizalk/QCADesigner/missing --run makeinfo
MKINSTALLDIRS = ./mkinstalldirs
MSGFMT = /usr/bin/msgfmt
OBJEXT = o
PACKAGE = QCADesigner
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
POFILES =  de.po hu.po ro.po fr.po pl.po it.po
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
USE_NLS = yes
VERSION = 2.0.3
XGETTEXT = /usr/bin/xgettext
ac_ct_CC = gcc
ac_ct_RANLIB = ranlib
ac_ct_STRIP = 
ac_pt_PKG_CONFIG = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/faizalk/QCADesigner/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
packagesrcdir = /home/faizalk/QCADesigner
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
AUTOMAKE_OPTIONS = subdir-objects
lib_LIBRARIES = libgtkdocfiles.a
CORE_FILES = \
	fileio_helpers.c                        fileio_helpers.h \
	generic_utils.c                         generic_utils.h \
	exp_array.c                             exp_array.h \
	hsl2rgb.c                               hsl2rgb.h \
	custom_widgets.c                        custom_widgets.h \
                                          intl.h

UNDO_REDO_FILES = \
	objects/QCADUndoEntry.c                 objects/QCADUndoEntry.h \
	objects/QCADUndoEntryGroup.c            objects/QCADUndoEntryGroup.h \
	objects/QCADUndoEntryObjectState.c      objects/QCADUndoEntryObjectState.h \
	selection_undo.c                        selection_undo.h

STDIO_FILEIO_FILES = \
	fileio.c fileio.h

OBJECT_FILES = \
	design.c                                design.h \
\
	objects/QCADRuler.c                     objects/QCADRuler.h \
\
	objects/QCADCell.c                      objects/QCADCell.h \
	objects/QCADCompoundDO.c                objects/QCADCompoundDO.h \
	objects/QCADObject.c                    objects/QCADObject.h \
	objects/QCADDesignObject.c              objects/QCADDesignObject.h \
	objects/QCADDOContainer.c               objects/QCADDOContainer.h \
	objects/QCADLabel.c                     objects/QCADLabel.h \
	objects/QCADLayer.c                     objects/QCADLayer.h \
	objects/QCADClockingLayer.c             objects/QCADClockingLayer.h \
	objects/QCADStretchyObject.c            objects/QCADStretchyObject.h \
	objects/QCADElectrode.c                 objects/QCADElectrode.h \
	objects/QCADRectangleElectrode.c        objects/QCADRectangleElectrode.h \
	objects/QCADSubstrate.c                 objects/QCADSubstrate.h \
	objects/QCADParamSpecObjectList.c       objects/QCADParamSpecObjectList.h \
	objects/object_helpers.c                objects/object_helpers.h

PROPERTY_UI_FILES = \
	objects/QCADParamSpecTypeList.c         objects/QCADParamSpecTypeList.h \
	objects/QCADPropertyUI.c                objects/QCADPropertyUI.h \
	objects/QCADPropertyUISingle.c          objects/QCADPropertyUISingle.h \
	objects/QCADPropertyUIDouble.c          objects/QCADPropertyUIDouble.h \
	objects/QCADPropertyUINumeric.c         objects/QCADPropertyUINumeric.h \
	objects/QCADPropertyUIInt.c             objects/QCADPropertyInt.h \
	objects/QCADPropertyUIGroup.c           objects/QCADPropertyUIGroup.h \
	objects/QCADPropertyUIEnum.c            objects/QCADPropertyUIEnum.h \
	objects/QCADPropertyUIText.c            objects/QCADPropertyUIText.h \
	objects/QCADPropertyUIObjectList.c      objects/QCADPropertyUIObjectList.h \
	objects/QCADPropertyUIBoolean.c         objects/QCADPropertyUIBoolean.h

SIMULATION_FILES = \
	simulation.c                            simulation.h \
	bistable_simulation.c                   bistable_simulation.h \
	coherence_vector.c                      coherence_vector.h \
	semi_coherent.c                   semi_coherent.h \
	ts_field_clock.c                   ts_field_clock.h \
	three_state_coherence.c			            three_state_coherence.h \
	matrixlib_3x3.c													matrixlib_3x3.h

SIMULATION_UI_FILES = \
	bistable_properties_dialog.c            bistable_properties_dialog.h \
	semi_coherent_properties_dialog.c       semi_coherent_properties_dialog.h \
	coherence_vector_properties_dialog.c    coherence_vector_properties_dialog.h \
	ts_fc_properties_dialog.c	ts_fc_properties_dialog.h \
	ts_coherence_vector_properties_dialog.c	ts_coherence_vector_properties_dialog.h

GTK_WORKAROUND_FILES = \
	objects/QCADComboBox.c                  objects/QCADComboBox.h \
	objects/QCADToggleToolButton.c          objects/QCADToggleToolButton.h \
	objects/QCADRadioToolButton.c           objects/QCADRadioToolButton.h \
	objects/QCADRadioButton.c               objects/QCADRadioButton.h

GRAPH_DIALOG_FILES = \
	graph_dialog.c                          graph_dialog.h \
	graph_dialog_interface.c                graph_dialog_interface.h \
	graph_dialog_callbacks.c                graph_dialog_callbacks.h \
	graph_dialog_data.c                     graph_dialog_data.h \
	waveform_interpretation_dialog.c        waveform_interpretation_dialog.h

VECTOR_TABLE_DIALOG_FILES = \
	vector_table_options_dialog.c           vector_table_options_dialog.h \
	vector_table_options_dialog_interface.c vector_table_options_dialog_interface.h \
	vector_table_options_dialog_callbacks.c vector_table_options_dialog_callbacks.h \
	                                        vector_table_options_dialog_callback_helpers.h

# bin_PROGRAMS = batch_sim
# bin_PROGRAMS = QCADesigner batch_sim graph_dialog

#################### QCADesigner ####################
QCADesigner_DEFINES = -DPROPERTY_UIS -DSTDIO_FILEIO -DUNDO_REDO -DGTK_GUI -DDESIGNER

# This variable is only used in Windoze
QCADesigner_LIBS = -lgtk-win32-2.0 \
			-latk-1.0 \
			-lpango-1.0 \
			-lglib-2.0 \
			-lgthread-2.0 \
			-lgdk-win32-2.0 \
			-lgobject-2.0 \
			-lintl \
			-lgdk_pixbuf-2.0

QCADesigner_CFLAGS = \
	$(QCADesigner_DEFINES) \
	-DPACKAGE_DATA_DIR=\""$(datadir)"\" \
	-DPACKAGE_LOCALE_DIR=\""$(prefix)/$(DATADIRNAME)/locale"\" \
	-I/usr/include/gtk-2.0 -I/usr/lib64/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng12   \
	-pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include  

QCADesigner_SOURCES = \
  $(CORE_FILES) \
  $(OBJECT_FILES) \
  $(SIMULATION_FILES) \
  $(STDIO_FILEIO_FILES) \
\
	preamble.c                              preamble.h \
	support.c                               support.h \
\
  $(GRAPH_DIALOG_FILES) \
  $(PROPERTY_UI_FILES) \
  $(UNDO_REDO_FILES) \
  $(GTK_WORKAROUND_FILES) \
  $(SIMULATION_UI_FILES) \
  $(VECTOR_TABLE_DIALOG_FILES) \
\
	interface.c                             interface.h \
	callbacks.c                             callbacks.h \
	                                        actions.h \
                                         	actions/action_handlers.h \
	actions/array.c                         actions/array.h \
	actions/rotate.c                        actions/rotate.h \
	actions/select.c                        actions/select.h \
	                                        callback_helpers.h \
	exp_pixmap.c                            exp_pixmap.h \
	                                        global_consts.h \
\
	simulation_data.c                       simulation_data.h \
	graph_dialog_widget_data.c              graph_dialog_widget_data.h \
\
	objects/mouse_handlers.c                objects/mouse_handlers.h \
	                                    	  objects/mouse_handler_struct.h \
	                                    	  objects/objects_debug.h \
	objects/QCADCellRendererText.c          objects/QCADCellRendererText.h \
	objects/QCADCellRendererVT.c            objects/QCADCellRendererVT.h \
	objects/QCADCellRendererLayerList.c     objects/QCADCellRendererLayerList.h \
	objects/QCADFlexiCombo.c                objects/QCADFlexiCombo.h \
	objects/QCADLayersCombo.c               objects/QCADLayersCombo.h \
\
	objects/QCADPrintDialog.c               objects/QCADPrintDialog.h \
	print_properties_dialog.c               print_properties_dialog.h \
	print_properties_dialog_interface.c     print_properties_dialog_interface.h \
	print_graph_properties_dialog.c         print_graph_properties_dialog.h \
	                                        print_properties_dialog_callbacks.h \
	print.c                                 print.h \
	print_graph.c \
	print_util.c                            print_util.h \
	print_preview.c                         print_preview.h \
\
	                                        qcadstock.h \
	selection_renderer.c                    selection_renderer.h \
	vector_table.c                          vector_table.h \
	recent_files.c                          recent_files.h \
\
	about.c                                 about.h \
	file_selection_window.c                 file_selection_window.h \
	bus_layout_dialog.c                     bus_layout_dialog.h \
	layer_mapping_dialog.c                  layer_mapping_dialog.h \
	layer_order_dialog.c                    layer_order_dialog.h \
	scale_dialog.c                          scale_dialog.h \
	sim_engine_setup_dialog.c               sim_engine_setup_dialog.h \
	translate_selection_dialog.c            translate_selection_dialog.h \
\
	main.c

QCADesigner_LDADD = \
	-lm \
	-L/lib64 -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lm -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0   \
	$(INTLLIBS) \
	-pthread -L/lib64 -lgthread-2.0 -lglib-2.0   


# libqcadesigner_a_SOURCES = $(QCADesigner_SOURCES)
#################### batch_sim ######################

# This variable is only used in Windoze
batch_sim_LIBS = -lglib-2.0 \
			-lgobject-2.0 \
			-lintl

batch_sim_DEFINES = -DSTDIO_FILEIO
batch_sim_CFLAGS = \
	$(batch_sim_DEFINES) \
	-DPACKAGE_DATA_DIR=\""$(datadir)"\" \
	-DPACKAGE_LOCALE_DIR=\""$(prefix)/$(DATADIRNAME)/locale"\" \
	-I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include   \
	-I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include  

batch_sim_SOURCES = \
	$(CORE_FILES) \
	$(OBJECT_FILES) \
	$(SIMULATION_FILES) \
	$(STDIO_FILEIO_FILES) \
\
	simulation_data.c                       simulation_data.h \
	graph_dialog_widget_data.c              graph_dialog_widget_data.h \
\
	vector_table.c                          vector_table.h \
	preamble.c                              preamble.h \
	main_batch_sim.c

batch_sim_LDADD = \
	-lm \
	-L/lib64 -lglib-2.0   \
	-L/lib64 -lgobject-2.0 -lglib-2.0  


#################### graph_dialog ###################
graph_dialog_DEFINES = -DSTDIO_FILEIO -DGTK_GUI

# This variable is only used in Windoze
graph_dialog_LIBS = -lgtk-win32-2.0 \
			-latk-1.0 \
			-lpango-1.0 \
			-lglib-2.0 \
			-lgthread-2.0 \
			-lgdk-win32-2.0 \
			-lgobject-2.0 \
			-lintl \
			-lgdk_pixbuf-2.0

graph_dialog_CFLAGS = \
	$(graph_dialog_DEFINES) \
	-DPACKAGE_DATA_DIR=\""$(datadir)"\" \
	-DPACKAGE_LOCALE_DIR=\""$(prefix)/$(DATADIRNAME)/locale"\" \
	-I/usr/include/gtk-2.0 -I/usr/lib64/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng12   \
	-pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include  

graph_dialog_SOURCES = \
	preamble.c                              preamble.h \
	support.c                               support.h \
\
  $(CORE_FILES) \
  $(OBJECT_FILES) \
  $(GRAPH_DIALOG_FILES) \
  $(STDIO_FILEIO_FILES) \
\
	simulation_data.c                       simulation_data.h \
	graph_dialog_widget_data.c              graph_dialog_widget_data.h \
\
	objects/QCADPrintDialog.c               objects/QCADPrintDialog.h \
	print_graph_properties_dialog.c         print_graph_properties_dialog.h \
	                                        print_properties_dialog_callbacks.h \
	print_graph.c \
	print_util.c                            print_util.h \
	print_preview.c                         print_preview.h \
\
	file_selection_window.c                 file_selection_window.h \
	bus_layout_dialog.c                     bus_layout_dialog.h \
\
	objects/QCADRadioButton.c               objects/QCADRadioButton.h \
	objects/QCADRadioToolButton.c           objects/QCADRadioToolButton.h \
	main_graph_dialog.c

graph_dialog_LDADD = \
	-lm \
	-L/lib64 -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lm -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0   \
	$(INTLLIBS) \
	-pthread -L/lib64 -lgthread-2.0 -lglib-2.0   


#################### combo_test #####################
combo_test_DEFINES = -DSTDIO_FILEIO -DGTK_GUI
combo_test_LIBS = -lgtk-win32-2.0 \
			-latk-1.0 \
			-lpango-1.0 \
			-lglib-2.0 \
			-lgthread-2.0 \
			-lgdk-win32-2.0 \
			-lgobject-2.0 \
			-lintl \
			-lgdk_pixbuf-2.0

combo_test_CFLAGS = \
	$(combo_test_DEFINES) \
 	-DPACKAGE_DATA_DIR=\""$(datadir)"\" \
 	-DPACKAGE_LOCALE_DIR=\""$(prefix)/$(DATADIRNAME)/locale"\" \
 	-I/usr/include/gtk-2.0 -I/usr/lib64/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng12   \
 	-pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include  

combo_test_SOURCES = \
	objects/QCADFlexiCombo.c       objects/QCADFlexiCombo.h \
	objects/QCADLayersCombo.c      objects/QCADLayersCombo.h \
	objects/QCADCellRendererText.c objects/QCADCellRendererText.h \
	objects/QCADCellRendererVT.c   objects/QCADCellRendererVT.h \
	$(CORE_FILES) \
	$(STDIO_FILEIO_FILES) \
	$(OBJECT_FILES) \
	support.c                      support.h \
	preamble.c                     preamble.h \
	simulation_data.c              simulation_data.h \
	main_combo_test.c

combo_test_LDADD = \
 	-lm \
 	-L/lib64 -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lm -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0   \
 	$(INTLLIBS) \
 	-pthread -L/lib64 -lgthread-2.0 -lglib-2.0   


#################### libgtkdocfiles.a #####################
libgtkdocfiles_a_SOURCES = \
	objects/QCADComboBox.c         objects/QCADComboBox.h \
	objects/QCADRadioButton.c      objects/QCADRadioButton.h \
	objects/QCADRadioToolButton.c  objects/QCADRadioToolButton.h \
	objects/QCADToggleToolButton.c objects/QCADToggleToolButton.h \
	objects/QCADCellRendererText.c objects/QCADCellRendererText.h

libgtkdocfiles_a_CFLAGS = \
	-I/usr/include/gtk-2.0 -I/usr/lib64/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng12   \
	-pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include   \
	-DGTK_GUI -DUNDO_REDO -DDESIGNER -DFILEIO_STDIO -DPROPERTY_UIS -DGTK_DOC

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(srcdir)/Makefile.inc $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
objects/$(am__dirstamp):
	@$(mkdir_p) objects
	@: > objects/$(am__dirstamp)
objects/$(DEPDIR)/$(am__dirstamp):
	@$(mkdir_p) objects/$(DEPDIR)
	@: > objects/$(DEPDIR)/$(am__dirstamp)
objects/libgtkdocfiles_a-QCADComboBox.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/libgtkdocfiles_a-QCADRadioButton.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/libgtkdocfiles_a-QCADRadioToolButton.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/libgtkdocfiles_a-QCADToggleToolButton.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/libgtkdocfiles_a-QCADCellRendererText.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
libgtkdocfiles.a: $(libgtkdocfiles_a_OBJECTS) $(libgtkdocfiles_a_DEPENDENCIES) 
	-rm -f libgtkdocfiles.a
	$(libgtkdocfiles_a_AR) libgtkdocfiles.a $(libgtkdocfiles_a_OBJECTS) $(libgtkdocfiles_a_LIBADD)
	$(RANLIB) libgtkdocfiles.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
objects/QCADesigner-QCADRuler.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADCell.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADCompoundDO.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADObject.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADDesignObject.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADDOContainer.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADLabel.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADLayer.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADClockingLayer.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADStretchyObject.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADElectrode.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADRectangleElectrode.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADSubstrate.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADParamSpecObjectList.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-object_helpers.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADParamSpecTypeList.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADPropertyUI.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADPropertyUISingle.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADPropertyUIDouble.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADPropertyUINumeric.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADPropertyUIInt.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADPropertyUIGroup.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADPropertyUIEnum.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADPropertyUIText.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADPropertyUIObjectList.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADPropertyUIBoolean.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADUndoEntry.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADUndoEntryGroup.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADUndoEntryObjectState.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADComboBox.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADToggleToolButton.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADRadioToolButton.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADRadioButton.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
actions/$(am__dirstamp):
	@$(mkdir_p) actions
	@: > actions/$(am__dirstamp)
actions/$(DEPDIR)/$(am__dirstamp):
	@$(mkdir_p) actions/$(DEPDIR)
	@: > actions/$(DEPDIR)/$(am__dirstamp)
actions/QCADesigner-array.$(OBJEXT): actions/$(am__dirstamp) \
	actions/$(DEPDIR)/$(am__dirstamp)
actions/QCADesigner-rotate.$(OBJEXT): actions/$(am__dirstamp) \
	actions/$(DEPDIR)/$(am__dirstamp)
actions/QCADesigner-select.$(OBJEXT): actions/$(am__dirstamp) \
	actions/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-mouse_handlers.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADCellRendererText.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADCellRendererVT.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADCellRendererLayerList.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADFlexiCombo.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADLayersCombo.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/QCADesigner-QCADPrintDialog.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
QCADesigner$(EXEEXT): $(QCADesigner_OBJECTS) $(QCADesigner_DEPENDENCIES) 
	@rm -f QCADesigner$(EXEEXT)
	$(LINK) $(QCADesigner_LDFLAGS) $(QCADesigner_OBJECTS) $(QCADesigner_LDADD) $(LIBS)
objects/batch_sim-QCADRuler.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/batch_sim-QCADCell.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/batch_sim-QCADCompoundDO.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/batch_sim-QCADObject.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/batch_sim-QCADDesignObject.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/batch_sim-QCADDOContainer.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/batch_sim-QCADLabel.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/batch_sim-QCADLayer.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/batch_sim-QCADClockingLayer.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/batch_sim-QCADStretchyObject.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/batch_sim-QCADElectrode.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/batch_sim-QCADRectangleElectrode.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/batch_sim-QCADSubstrate.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/batch_sim-QCADParamSpecObjectList.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/batch_sim-object_helpers.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
batch_sim$(EXEEXT): $(batch_sim_OBJECTS) $(batch_sim_DEPENDENCIES) 
	@rm -f batch_sim$(EXEEXT)
	$(LINK) $(batch_sim_LDFLAGS) $(batch_sim_OBJECTS) $(batch_sim_LDADD) $(LIBS)
objects/combo_test-QCADFlexiCombo.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/combo_test-QCADLayersCombo.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/combo_test-QCADCellRendererText.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/combo_test-QCADCellRendererVT.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/combo_test-QCADRuler.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/combo_test-QCADCell.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/combo_test-QCADCompoundDO.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/combo_test-QCADObject.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/combo_test-QCADDesignObject.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/combo_test-QCADDOContainer.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/combo_test-QCADLabel.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/combo_test-QCADLayer.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/combo_test-QCADClockingLayer.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/combo_test-QCADStretchyObject.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/combo_test-QCADElectrode.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/combo_test-QCADRectangleElectrode.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/combo_test-QCADSubstrate.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/combo_test-QCADParamSpecObjectList.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/combo_test-object_helpers.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
combo_test$(EXEEXT): $(combo_test_OBJECTS) $(combo_test_DEPENDENCIES) 
	@rm -f combo_test$(EXEEXT)
	$(LINK) $(combo_test_LDFLAGS) $(combo_test_OBJECTS) $(combo_test_LDADD) $(LIBS)
objects/graph_dialog-QCADRuler.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/graph_dialog-QCADCell.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/graph_dialog-QCADCompoundDO.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/graph_dialog-QCADObject.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/graph_dialog-QCADDesignObject.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/graph_dialog-QCADDOContainer.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/graph_dialog-QCADLabel.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/graph_dialog-QCADLayer.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/graph_dialog-QCADClockingLayer.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/graph_dialog-QCADStretchyObject.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/graph_dialog-QCADElectrode.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/graph_dialog-QCADRectangleElectrode.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/graph_dialog-QCADSubstrate.$(OBJEXT): objects/$(am__dirstamp) \
	objects/$(DEPDIR)/$(am__dirstamp)
objects/graph_dialog-QCADParamSpecObjectList.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/graph_dialog-object_helpers.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/graph_dialog-QCADPrintDialog.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/graph_dialog-QCADRadioButton.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
objects/graph_dialog-QCADRadioToolButton.$(OBJEXT):  \
	objects/$(am__dirstamp) objects/$(DEPDIR)/$(am__dirstamp)
graph_dialog$(EXEEXT): $(graph_dialog_OBJECTS) $(graph_dialog_DEPENDENCIES) 
	@rm -f graph_dialog$(EXEEXT)
	$(LINK) $(graph_dialog_LDFLAGS) $(graph_dialog_OBJECTS) $(graph_dialog_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f actions/QCADesigner-array.$(OBJEXT)
	-rm -f actions/QCADesigner-rotate.$(OBJEXT)
	-rm -f actions/QCADesigner-select.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADCell.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADCellRendererLayerList.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADCellRendererText.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADCellRendererVT.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADClockingLayer.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADComboBox.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADCompoundDO.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADDOContainer.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADDesignObject.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADElectrode.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADFlexiCombo.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADLabel.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADLayer.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADLayersCombo.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADObject.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADParamSpecObjectList.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADParamSpecTypeList.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADPrintDialog.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADPropertyUI.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADPropertyUIBoolean.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADPropertyUIDouble.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADPropertyUIEnum.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADPropertyUIGroup.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADPropertyUIInt.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADPropertyUINumeric.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADPropertyUIObjectList.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADPropertyUISingle.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADPropertyUIText.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADRadioButton.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADRadioToolButton.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADRectangleElectrode.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADRuler.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADStretchyObject.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADSubstrate.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADToggleToolButton.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADUndoEntry.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADUndoEntryGroup.$(OBJEXT)
	-rm -f objects/QCADesigner-QCADUndoEntryObjectState.$(OBJEXT)
	-rm -f objects/QCADesigner-mouse_handlers.$(OBJEXT)
	-rm -f objects/QCADesigner-object_helpers.$(OBJEXT)
	-rm -f objects/batch_sim-QCADCell.$(OBJEXT)
	-rm -f objects/batch_sim-QCADClockingLayer.$(OBJEXT)
	-rm -f objects/batch_sim-QCADCompoundDO.$(OBJEXT)
	-rm -f objects/batch_sim-QCADDOContainer.$(OBJEXT)
	-rm -f objects/batch_sim-QCADDesignObject.$(OBJEXT)
	-rm -f objects/batch_sim-QCADElectrode.$(OBJEXT)
	-rm -f objects/batch_sim-QCADLabel.$(OBJEXT)
	-rm -f objects/batch_sim-QCADLayer.$(OBJEXT)
	-rm -f objects/batch_sim-QCADObject.$(OBJEXT)
	-rm -f objects/batch_sim-QCADParamSpecObjectList.$(OBJEXT)
	-rm -f objects/batch_sim-QCADRectangleElectrode.$(OBJEXT)
	-rm -f objects/batch_sim-QCADRuler.$(OBJEXT)
	-rm -f objects/batch_sim-QCADStretchyObject.$(OBJEXT)
	-rm -f objects/batch_sim-QCADSubstrate.$(OBJEXT)
	-rm -f objects/batch_sim-object_helpers.$(OBJEXT)
	-rm -f objects/combo_test-QCADCell.$(OBJEXT)
	-rm -f objects/combo_test-QCADCellRendererText.$(OBJEXT)
	-rm -f objects/combo_test-QCADCellRendererVT.$(OBJEXT)
	-rm -f objects/combo_test-QCADClockingLayer.$(OBJEXT)
	-rm -f objects/combo_test-QCADCompoundDO.$(OBJEXT)
	-rm -f objects/combo_test-QCADDOContainer.$(OBJEXT)
	-rm -f objects/combo_test-QCADDesignObject.$(OBJEXT)
	-rm -f objects/combo_test-QCADElectrode.$(OBJEXT)
	-rm -f objects/combo_test-QCADFlexiCombo.$(OBJEXT)
	-rm -f objects/combo_test-QCADLabel.$(OBJEXT)
	-rm -f objects/combo_test-QCADLayer.$(OBJEXT)
	-rm -f objects/combo_test-QCADLayersCombo.$(OBJEXT)
	-rm -f objects/combo_test-QCADObject.$(OBJEXT)
	-rm -f objects/combo_test-QCADParamSpecObjectList.$(OBJEXT)
	-rm -f objects/combo_test-QCADRectangleElectrode.$(OBJEXT)
	-rm -f objects/combo_test-QCADRuler.$(OBJEXT)
	-rm -f objects/combo_test-QCADStretchyObject.$(OBJEXT)
	-rm -f objects/combo_test-QCADSubstrate.$(OBJEXT)
	-rm -f objects/combo_test-object_helpers.$(OBJEXT)
	-rm -f objects/graph_dialog-QCADCell.$(OBJEXT)
	-rm -f objects/graph_dialog-QCADClockingLayer.$(OBJEXT)
	-rm -f objects/graph_dialog-QCADCompoundDO.$(OBJEXT)
	-rm -f objects/graph_dialog-QCADDOContainer.$(OBJEXT)
	-rm -f objects/graph_dialog-QCADDesignObject.$(OBJEXT)
	-rm -f objects/graph_dialog-QCADElectrode.$(OBJEXT)
	-rm -f objects/graph_dialog-QCADLabel.$(OBJEXT)
	-rm -f objects/graph_dialog-QCADLayer.$(OBJEXT)
	-rm -f objects/graph_dialog-QCADObject.$(OBJEXT)
	-rm -f objects/graph_dialog-QCADParamSpecObjectList.$(OBJEXT)
	-rm -f objects/graph_dialog-QCADPrintDialog.$(OBJEXT)
	-rm -f objects/graph_dialog-QCADRadioButton.$(OBJEXT)
	-rm -f objects/graph_dialog-QCADRadioToolButton.$(OBJEXT)
	-rm -f objects/graph_dialog-QCADRectangleElectrode.$(OBJEXT)
	-rm -f objects/graph_dialog-QCADRuler.$(OBJEXT)
	-rm -f objects/graph_dialog-QCADStretchyObject.$(OBJEXT)
	-rm -f objects/graph_dialog-QCADSubstrate.$(OBJEXT)
	-rm -f objects/graph_dialog-object_helpers.$(OBJEXT)
	-rm -f objects/libgtkdocfiles_a-QCADCellRendererText.$(OBJEXT)
	-rm -f objects/libgtkdocfiles_a-QCADComboBox.$(OBJEXT)
	-rm -f objects/libgtkdocfiles_a-QCADRadioButton.$(OBJEXT)
	-rm -f objects/libgtkdocfiles_a-QCADRadioToolButton.$(OBJEXT)
	-rm -f objects/libgtkdocfiles_a-QCADToggleToolButton.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/QCADesigner-about.Po
include ./$(DEPDIR)/QCADesigner-bistable_properties_dialog.Po
include ./$(DEPDIR)/QCADesigner-bistable_simulation.Po
include ./$(DEPDIR)/QCADesigner-bus_layout_dialog.Po
include ./$(DEPDIR)/QCADesigner-callbacks.Po
include ./$(DEPDIR)/QCADesigner-coherence_vector.Po
include ./$(DEPDIR)/QCADesigner-coherence_vector_properties_dialog.Po
include ./$(DEPDIR)/QCADesigner-custom_widgets.Po
include ./$(DEPDIR)/QCADesigner-design.Po
include ./$(DEPDIR)/QCADesigner-exp_array.Po
include ./$(DEPDIR)/QCADesigner-exp_pixmap.Po
include ./$(DEPDIR)/QCADesigner-file_selection_window.Po
include ./$(DEPDIR)/QCADesigner-fileio.Po
include ./$(DEPDIR)/QCADesigner-fileio_helpers.Po
include ./$(DEPDIR)/QCADesigner-generic_utils.Po
include ./$(DEPDIR)/QCADesigner-graph_dialog.Po
include ./$(DEPDIR)/QCADesigner-graph_dialog_callbacks.Po
include ./$(DEPDIR)/QCADesigner-graph_dialog_data.Po
include ./$(DEPDIR)/QCADesigner-graph_dialog_interface.Po
include ./$(DEPDIR)/QCADesigner-graph_dialog_widget_data.Po
include ./$(DEPDIR)/QCADesigner-hsl2rgb.Po
include ./$(DEPDIR)/QCADesigner-interface.Po
include ./$(DEPDIR)/QCADesigner-layer_mapping_dialog.Po
include ./$(DEPDIR)/QCADesigner-layer_order_dialog.Po
include ./$(DEPDIR)/QCADesigner-main.Po
include ./$(DEPDIR)/QCADesigner-matrixlib_3x3.Po
include ./$(DEPDIR)/QCADesigner-preamble.Po
include ./$(DEPDIR)/QCADesigner-print.Po
include ./$(DEPDIR)/QCADesigner-print_graph.Po
include ./$(DEPDIR)/QCADesigner-print_graph_properties_dialog.Po
include ./$(DEPDIR)/QCADesigner-print_preview.Po
include ./$(DEPDIR)/QCADesigner-print_properties_dialog.Po
include ./$(DEPDIR)/QCADesigner-print_properties_dialog_interface.Po
include ./$(DEPDIR)/QCADesigner-print_util.Po
include ./$(DEPDIR)/QCADesigner-recent_files.Po
include ./$(DEPDIR)/QCADesigner-scale_dialog.Po
include ./$(DEPDIR)/QCADesigner-selection_renderer.Po
include ./$(DEPDIR)/QCADesigner-selection_undo.Po
include ./$(DEPDIR)/QCADesigner-semi_coherent.Po
include ./$(DEPDIR)/QCADesigner-semi_coherent_properties_dialog.Po
include ./$(DEPDIR)/QCADesigner-sim_engine_setup_dialog.Po
include ./$(DEPDIR)/QCADesigner-simulation.Po
include ./$(DEPDIR)/QCADesigner-simulation_data.Po
include ./$(DEPDIR)/QCADesigner-support.Po
include ./$(DEPDIR)/QCADesigner-three_state_coherence.Po
include ./$(DEPDIR)/QCADesigner-translate_selection_dialog.Po
include ./$(DEPDIR)/QCADesigner-ts_coherence_vector_properties_dialog.Po
include ./$(DEPDIR)/QCADesigner-ts_field_clock.Po
include ./$(DEPDIR)/QCADesigner-ts_fc_properties_dialog.Po
include ./$(DEPDIR)/QCADesigner-vector_table.Po
include ./$(DEPDIR)/QCADesigner-vector_table_options_dialog.Po
include ./$(DEPDIR)/QCADesigner-vector_table_options_dialog_callbacks.Po
include ./$(DEPDIR)/QCADesigner-vector_table_options_dialog_interface.Po
include ./$(DEPDIR)/QCADesigner-waveform_interpretation_dialog.Po
include ./$(DEPDIR)/batch_sim-bistable_simulation.Po
include ./$(DEPDIR)/batch_sim-coherence_vector.Po
include ./$(DEPDIR)/batch_sim-custom_widgets.Po
include ./$(DEPDIR)/batch_sim-design.Po
include ./$(DEPDIR)/batch_sim-exp_array.Po
include ./$(DEPDIR)/batch_sim-fileio.Po
include ./$(DEPDIR)/batch_sim-fileio_helpers.Po
include ./$(DEPDIR)/batch_sim-generic_utils.Po
include ./$(DEPDIR)/batch_sim-graph_dialog_widget_data.Po
include ./$(DEPDIR)/batch_sim-hsl2rgb.Po
include ./$(DEPDIR)/batch_sim-main_batch_sim.Po
include ./$(DEPDIR)/batch_sim-matrixlib_3x3.Po
include ./$(DEPDIR)/batch_sim-preamble.Po
include ./$(DEPDIR)/batch_sim-semi_coherent.Po
include ./$(DEPDIR)/batch_sim-simulation.Po
include ./$(DEPDIR)/batch_sim-simulation_data.Po
include ./$(DEPDIR)/batch_sim-three_state_coherence.Po
include ./$(DEPDIR)/batch_sim-ts_field_clock.Po
include ./$(DEPDIR)/batch_sim-vector_table.Po
include ./$(DEPDIR)/combo_test-custom_widgets.Po
include ./$(DEPDIR)/combo_test-design.Po
include ./$(DEPDIR)/combo_test-exp_array.Po
include ./$(DEPDIR)/combo_test-fileio.Po
include ./$(DEPDIR)/combo_test-fileio_helpers.Po
include ./$(DEPDIR)/combo_test-generic_utils.Po
include ./$(DEPDIR)/combo_test-hsl2rgb.Po
include ./$(DEPDIR)/combo_test-main_combo_test.Po
include ./$(DEPDIR)/combo_test-preamble.Po
include ./$(DEPDIR)/combo_test-simulation_data.Po
include ./$(DEPDIR)/combo_test-support.Po
include ./$(DEPDIR)/graph_dialog-bus_layout_dialog.Po
include ./$(DEPDIR)/graph_dialog-custom_widgets.Po
include ./$(DEPDIR)/graph_dialog-design.Po
include ./$(DEPDIR)/graph_dialog-exp_array.Po
include ./$(DEPDIR)/graph_dialog-file_selection_window.Po
include ./$(DEPDIR)/graph_dialog-fileio.Po
include ./$(DEPDIR)/graph_dialog-fileio_helpers.Po
include ./$(DEPDIR)/graph_dialog-generic_utils.Po
include ./$(DEPDIR)/graph_dialog-graph_dialog.Po
include ./$(DEPDIR)/graph_dialog-graph_dialog_callbacks.Po
include ./$(DEPDIR)/graph_dialog-graph_dialog_data.Po
include ./$(DEPDIR)/graph_dialog-graph_dialog_interface.Po
include ./$(DEPDIR)/graph_dialog-graph_dialog_widget_data.Po
include ./$(DEPDIR)/graph_dialog-hsl2rgb.Po
include ./$(DEPDIR)/graph_dialog-main_graph_dialog.Po
include ./$(DEPDIR)/graph_dialog-preamble.Po
include ./$(DEPDIR)/graph_dialog-print_graph.Po
include ./$(DEPDIR)/graph_dialog-print_graph_properties_dialog.Po
include ./$(DEPDIR)/graph_dialog-print_preview.Po
include ./$(DEPDIR)/graph_dialog-print_util.Po
include ./$(DEPDIR)/graph_dialog-simulation_data.Po
include ./$(DEPDIR)/graph_dialog-support.Po
include ./$(DEPDIR)/graph_dialog-waveform_interpretation_dialog.Po
include actions/$(DEPDIR)/QCADesigner-array.Po
include actions/$(DEPDIR)/QCADesigner-rotate.Po
include actions/$(DEPDIR)/QCADesigner-select.Po
include objects/$(DEPDIR)/QCADesigner-QCADCell.Po
include objects/$(DEPDIR)/QCADesigner-QCADCellRendererLayerList.Po
include objects/$(DEPDIR)/QCADesigner-QCADCellRendererText.Po
include objects/$(DEPDIR)/QCADesigner-QCADCellRendererVT.Po
include objects/$(DEPDIR)/QCADesigner-QCADClockingLayer.Po
include objects/$(DEPDIR)/QCADesigner-QCADComboBox.Po
include objects/$(DEPDIR)/QCADesigner-QCADCompoundDO.Po
include objects/$(DEPDIR)/QCADesigner-QCADDOContainer.Po
include objects/$(DEPDIR)/QCADesigner-QCADDesignObject.Po
include objects/$(DEPDIR)/QCADesigner-QCADElectrode.Po
include objects/$(DEPDIR)/QCADesigner-QCADFlexiCombo.Po
include objects/$(DEPDIR)/QCADesigner-QCADLabel.Po
include objects/$(DEPDIR)/QCADesigner-QCADLayer.Po
include objects/$(DEPDIR)/QCADesigner-QCADLayersCombo.Po
include objects/$(DEPDIR)/QCADesigner-QCADObject.Po
include objects/$(DEPDIR)/QCADesigner-QCADParamSpecObjectList.Po
include objects/$(DEPDIR)/QCADesigner-QCADParamSpecTypeList.Po
include objects/$(DEPDIR)/QCADesigner-QCADPrintDialog.Po
include objects/$(DEPDIR)/QCADesigner-QCADPropertyUI.Po
include objects/$(DEPDIR)/QCADesigner-QCADPropertyUIBoolean.Po
include objects/$(DEPDIR)/QCADesigner-QCADPropertyUIDouble.Po
include objects/$(DEPDIR)/QCADesigner-QCADPropertyUIEnum.Po
include objects/$(DEPDIR)/QCADesigner-QCADPropertyUIGroup.Po
include objects/$(DEPDIR)/QCADesigner-QCADPropertyUIInt.Po
include objects/$(DEPDIR)/QCADesigner-QCADPropertyUINumeric.Po
include objects/$(DEPDIR)/QCADesigner-QCADPropertyUIObjectList.Po
include objects/$(DEPDIR)/QCADesigner-QCADPropertyUISingle.Po
include objects/$(DEPDIR)/QCADesigner-QCADPropertyUIText.Po
include objects/$(DEPDIR)/QCADesigner-QCADRadioButton.Po
include objects/$(DEPDIR)/QCADesigner-QCADRadioToolButton.Po
include objects/$(DEPDIR)/QCADesigner-QCADRectangleElectrode.Po
include objects/$(DEPDIR)/QCADesigner-QCADRuler.Po
include objects/$(DEPDIR)/QCADesigner-QCADStretchyObject.Po
include objects/$(DEPDIR)/QCADesigner-QCADSubstrate.Po
include objects/$(DEPDIR)/QCADesigner-QCADToggleToolButton.Po
include objects/$(DEPDIR)/QCADesigner-QCADUndoEntry.Po
include objects/$(DEPDIR)/QCADesigner-QCADUndoEntryGroup.Po
include objects/$(DEPDIR)/QCADesigner-QCADUndoEntryObjectState.Po
include objects/$(DEPDIR)/QCADesigner-mouse_handlers.Po
include objects/$(DEPDIR)/QCADesigner-object_helpers.Po
include objects/$(DEPDIR)/batch_sim-QCADCell.Po
include objects/$(DEPDIR)/batch_sim-QCADClockingLayer.Po
include objects/$(DEPDIR)/batch_sim-QCADCompoundDO.Po
include objects/$(DEPDIR)/batch_sim-QCADDOContainer.Po
include objects/$(DEPDIR)/batch_sim-QCADDesignObject.Po
include objects/$(DEPDIR)/batch_sim-QCADElectrode.Po
include objects/$(DEPDIR)/batch_sim-QCADLabel.Po
include objects/$(DEPDIR)/batch_sim-QCADLayer.Po
include objects/$(DEPDIR)/batch_sim-QCADObject.Po
include objects/$(DEPDIR)/batch_sim-QCADParamSpecObjectList.Po
include objects/$(DEPDIR)/batch_sim-QCADRectangleElectrode.Po
include objects/$(DEPDIR)/batch_sim-QCADRuler.Po
include objects/$(DEPDIR)/batch_sim-QCADStretchyObject.Po
include objects/$(DEPDIR)/batch_sim-QCADSubstrate.Po
include objects/$(DEPDIR)/batch_sim-object_helpers.Po
include objects/$(DEPDIR)/combo_test-QCADCell.Po
include objects/$(DEPDIR)/combo_test-QCADCellRendererText.Po
include objects/$(DEPDIR)/combo_test-QCADCellRendererVT.Po
include objects/$(DEPDIR)/combo_test-QCADClockingLayer.Po
include objects/$(DEPDIR)/combo_test-QCADCompoundDO.Po
include objects/$(DEPDIR)/combo_test-QCADDOContainer.Po
include objects/$(DEPDIR)/combo_test-QCADDesignObject.Po
include objects/$(DEPDIR)/combo_test-QCADElectrode.Po
include objects/$(DEPDIR)/combo_test-QCADFlexiCombo.Po
include objects/$(DEPDIR)/combo_test-QCADLabel.Po
include objects/$(DEPDIR)/combo_test-QCADLayer.Po
include objects/$(DEPDIR)/combo_test-QCADLayersCombo.Po
include objects/$(DEPDIR)/combo_test-QCADObject.Po
include objects/$(DEPDIR)/combo_test-QCADParamSpecObjectList.Po
include objects/$(DEPDIR)/combo_test-QCADRectangleElectrode.Po
include objects/$(DEPDIR)/combo_test-QCADRuler.Po
include objects/$(DEPDIR)/combo_test-QCADStretchyObject.Po
include objects/$(DEPDIR)/combo_test-QCADSubstrate.Po
include objects/$(DEPDIR)/combo_test-object_helpers.Po
include objects/$(DEPDIR)/graph_dialog-QCADCell.Po
include objects/$(DEPDIR)/graph_dialog-QCADClockingLayer.Po
include objects/$(DEPDIR)/graph_dialog-QCADCompoundDO.Po
include objects/$(DEPDIR)/graph_dialog-QCADDOContainer.Po
include objects/$(DEPDIR)/graph_dialog-QCADDesignObject.Po
include objects/$(DEPDIR)/graph_dialog-QCADElectrode.Po
include objects/$(DEPDIR)/graph_dialog-QCADLabel.Po
include objects/$(DEPDIR)/graph_dialog-QCADLayer.Po
include objects/$(DEPDIR)/graph_dialog-QCADObject.Po
include objects/$(DEPDIR)/graph_dialog-QCADParamSpecObjectList.Po
include objects/$(DEPDIR)/graph_dialog-QCADPrintDialog.Po
include objects/$(DEPDIR)/graph_dialog-QCADRadioButton.Po
include objects/$(DEPDIR)/graph_dialog-QCADRadioToolButton.Po
include objects/$(DEPDIR)/graph_dialog-QCADRectangleElectrode.Po
include objects/$(DEPDIR)/graph_dialog-QCADRuler.Po
include objects/$(DEPDIR)/graph_dialog-QCADStretchyObject.Po
include objects/$(DEPDIR)/graph_dialog-QCADSubstrate.Po
include objects/$(DEPDIR)/graph_dialog-object_helpers.Po
include objects/$(DEPDIR)/libgtkdocfiles_a-QCADCellRendererText.Po
include objects/$(DEPDIR)/libgtkdocfiles_a-QCADComboBox.Po
include objects/$(DEPDIR)/libgtkdocfiles_a-QCADRadioButton.Po
include objects/$(DEPDIR)/libgtkdocfiles_a-QCADRadioToolButton.Po
include objects/$(DEPDIR)/libgtkdocfiles_a-QCADToggleToolButton.Po

.c.o:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`; \
	if $(COMPILE) -MT $@ -MD -MP -MF "$$depbase.Tpo" -c -o $@ $<; \
	then mv -f "$$depbase.Tpo" "$$depbase.Po"; else rm -f "$$depbase.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c -o $@ $<

.c.obj:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`; \
	if $(COMPILE) -MT $@ -MD -MP -MF "$$depbase.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$$depbase.Tpo" "$$depbase.Po"; else rm -f "$$depbase.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

objects/libgtkdocfiles_a-QCADComboBox.o: objects/QCADComboBox.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtkdocfiles_a_CFLAGS) $(CFLAGS) -MT objects/libgtkdocfiles_a-QCADComboBox.o -MD -MP -MF "objects/$(DEPDIR)/libgtkdocfiles_a-QCADComboBox.Tpo" -c -o objects/libgtkdocfiles_a-QCADComboBox.o `test -f 'objects/QCADComboBox.c' || echo '$(srcdir)/'`objects/QCADComboBox.c; \
	then mv -f "objects/$(DEPDIR)/libgtkdocfiles_a-QCADComboBox.Tpo" "objects/$(DEPDIR)/libgtkdocfiles_a-QCADComboBox.Po"; else rm -f "objects/$(DEPDIR)/libgtkdocfiles_a-QCADComboBox.Tpo"; exit 1; fi
#	source='objects/QCADComboBox.c' object='objects/libgtkdocfiles_a-QCADComboBox.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtkdocfiles_a_CFLAGS) $(CFLAGS) -c -o objects/libgtkdocfiles_a-QCADComboBox.o `test -f 'objects/QCADComboBox.c' || echo '$(srcdir)/'`objects/QCADComboBox.c

objects/libgtkdocfiles_a-QCADComboBox.obj: objects/QCADComboBox.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtkdocfiles_a_CFLAGS) $(CFLAGS) -MT objects/libgtkdocfiles_a-QCADComboBox.obj -MD -MP -MF "objects/$(DEPDIR)/libgtkdocfiles_a-QCADComboBox.Tpo" -c -o objects/libgtkdocfiles_a-QCADComboBox.obj `if test -f 'objects/QCADComboBox.c'; then $(CYGPATH_W) 'objects/QCADComboBox.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADComboBox.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/libgtkdocfiles_a-QCADComboBox.Tpo" "objects/$(DEPDIR)/libgtkdocfiles_a-QCADComboBox.Po"; else rm -f "objects/$(DEPDIR)/libgtkdocfiles_a-QCADComboBox.Tpo"; exit 1; fi
#	source='objects/QCADComboBox.c' object='objects/libgtkdocfiles_a-QCADComboBox.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtkdocfiles_a_CFLAGS) $(CFLAGS) -c -o objects/libgtkdocfiles_a-QCADComboBox.obj `if test -f 'objects/QCADComboBox.c'; then $(CYGPATH_W) 'objects/QCADComboBox.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADComboBox.c'; fi`

objects/libgtkdocfiles_a-QCADRadioButton.o: objects/QCADRadioButton.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtkdocfiles_a_CFLAGS) $(CFLAGS) -MT objects/libgtkdocfiles_a-QCADRadioButton.o -MD -MP -MF "objects/$(DEPDIR)/libgtkdocfiles_a-QCADRadioButton.Tpo" -c -o objects/libgtkdocfiles_a-QCADRadioButton.o `test -f 'objects/QCADRadioButton.c' || echo '$(srcdir)/'`objects/QCADRadioButton.c; \
	then mv -f "objects/$(DEPDIR)/libgtkdocfiles_a-QCADRadioButton.Tpo" "objects/$(DEPDIR)/libgtkdocfiles_a-QCADRadioButton.Po"; else rm -f "objects/$(DEPDIR)/libgtkdocfiles_a-QCADRadioButton.Tpo"; exit 1; fi
#	source='objects/QCADRadioButton.c' object='objects/libgtkdocfiles_a-QCADRadioButton.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtkdocfiles_a_CFLAGS) $(CFLAGS) -c -o objects/libgtkdocfiles_a-QCADRadioButton.o `test -f 'objects/QCADRadioButton.c' || echo '$(srcdir)/'`objects/QCADRadioButton.c

objects/libgtkdocfiles_a-QCADRadioButton.obj: objects/QCADRadioButton.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtkdocfiles_a_CFLAGS) $(CFLAGS) -MT objects/libgtkdocfiles_a-QCADRadioButton.obj -MD -MP -MF "objects/$(DEPDIR)/libgtkdocfiles_a-QCADRadioButton.Tpo" -c -o objects/libgtkdocfiles_a-QCADRadioButton.obj `if test -f 'objects/QCADRadioButton.c'; then $(CYGPATH_W) 'objects/QCADRadioButton.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADRadioButton.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/libgtkdocfiles_a-QCADRadioButton.Tpo" "objects/$(DEPDIR)/libgtkdocfiles_a-QCADRadioButton.Po"; else rm -f "objects/$(DEPDIR)/libgtkdocfiles_a-QCADRadioButton.Tpo"; exit 1; fi
#	source='objects/QCADRadioButton.c' object='objects/libgtkdocfiles_a-QCADRadioButton.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtkdocfiles_a_CFLAGS) $(CFLAGS) -c -o objects/libgtkdocfiles_a-QCADRadioButton.obj `if test -f 'objects/QCADRadioButton.c'; then $(CYGPATH_W) 'objects/QCADRadioButton.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADRadioButton.c'; fi`

objects/libgtkdocfiles_a-QCADRadioToolButton.o: objects/QCADRadioToolButton.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtkdocfiles_a_CFLAGS) $(CFLAGS) -MT objects/libgtkdocfiles_a-QCADRadioToolButton.o -MD -MP -MF "objects/$(DEPDIR)/libgtkdocfiles_a-QCADRadioToolButton.Tpo" -c -o objects/libgtkdocfiles_a-QCADRadioToolButton.o `test -f 'objects/QCADRadioToolButton.c' || echo '$(srcdir)/'`objects/QCADRadioToolButton.c; \
	then mv -f "objects/$(DEPDIR)/libgtkdocfiles_a-QCADRadioToolButton.Tpo" "objects/$(DEPDIR)/libgtkdocfiles_a-QCADRadioToolButton.Po"; else rm -f "objects/$(DEPDIR)/libgtkdocfiles_a-QCADRadioToolButton.Tpo"; exit 1; fi
#	source='objects/QCADRadioToolButton.c' object='objects/libgtkdocfiles_a-QCADRadioToolButton.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtkdocfiles_a_CFLAGS) $(CFLAGS) -c -o objects/libgtkdocfiles_a-QCADRadioToolButton.o `test -f 'objects/QCADRadioToolButton.c' || echo '$(srcdir)/'`objects/QCADRadioToolButton.c

objects/libgtkdocfiles_a-QCADRadioToolButton.obj: objects/QCADRadioToolButton.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtkdocfiles_a_CFLAGS) $(CFLAGS) -MT objects/libgtkdocfiles_a-QCADRadioToolButton.obj -MD -MP -MF "objects/$(DEPDIR)/libgtkdocfiles_a-QCADRadioToolButton.Tpo" -c -o objects/libgtkdocfiles_a-QCADRadioToolButton.obj `if test -f 'objects/QCADRadioToolButton.c'; then $(CYGPATH_W) 'objects/QCADRadioToolButton.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADRadioToolButton.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/libgtkdocfiles_a-QCADRadioToolButton.Tpo" "objects/$(DEPDIR)/libgtkdocfiles_a-QCADRadioToolButton.Po"; else rm -f "objects/$(DEPDIR)/libgtkdocfiles_a-QCADRadioToolButton.Tpo"; exit 1; fi
#	source='objects/QCADRadioToolButton.c' object='objects/libgtkdocfiles_a-QCADRadioToolButton.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtkdocfiles_a_CFLAGS) $(CFLAGS) -c -o objects/libgtkdocfiles_a-QCADRadioToolButton.obj `if test -f 'objects/QCADRadioToolButton.c'; then $(CYGPATH_W) 'objects/QCADRadioToolButton.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADRadioToolButton.c'; fi`

objects/libgtkdocfiles_a-QCADToggleToolButton.o: objects/QCADToggleToolButton.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtkdocfiles_a_CFLAGS) $(CFLAGS) -MT objects/libgtkdocfiles_a-QCADToggleToolButton.o -MD -MP -MF "objects/$(DEPDIR)/libgtkdocfiles_a-QCADToggleToolButton.Tpo" -c -o objects/libgtkdocfiles_a-QCADToggleToolButton.o `test -f 'objects/QCADToggleToolButton.c' || echo '$(srcdir)/'`objects/QCADToggleToolButton.c; \
	then mv -f "objects/$(DEPDIR)/libgtkdocfiles_a-QCADToggleToolButton.Tpo" "objects/$(DEPDIR)/libgtkdocfiles_a-QCADToggleToolButton.Po"; else rm -f "objects/$(DEPDIR)/libgtkdocfiles_a-QCADToggleToolButton.Tpo"; exit 1; fi
#	source='objects/QCADToggleToolButton.c' object='objects/libgtkdocfiles_a-QCADToggleToolButton.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtkdocfiles_a_CFLAGS) $(CFLAGS) -c -o objects/libgtkdocfiles_a-QCADToggleToolButton.o `test -f 'objects/QCADToggleToolButton.c' || echo '$(srcdir)/'`objects/QCADToggleToolButton.c

objects/libgtkdocfiles_a-QCADToggleToolButton.obj: objects/QCADToggleToolButton.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtkdocfiles_a_CFLAGS) $(CFLAGS) -MT objects/libgtkdocfiles_a-QCADToggleToolButton.obj -MD -MP -MF "objects/$(DEPDIR)/libgtkdocfiles_a-QCADToggleToolButton.Tpo" -c -o objects/libgtkdocfiles_a-QCADToggleToolButton.obj `if test -f 'objects/QCADToggleToolButton.c'; then $(CYGPATH_W) 'objects/QCADToggleToolButton.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADToggleToolButton.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/libgtkdocfiles_a-QCADToggleToolButton.Tpo" "objects/$(DEPDIR)/libgtkdocfiles_a-QCADToggleToolButton.Po"; else rm -f "objects/$(DEPDIR)/libgtkdocfiles_a-QCADToggleToolButton.Tpo"; exit 1; fi
#	source='objects/QCADToggleToolButton.c' object='objects/libgtkdocfiles_a-QCADToggleToolButton.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtkdocfiles_a_CFLAGS) $(CFLAGS) -c -o objects/libgtkdocfiles_a-QCADToggleToolButton.obj `if test -f 'objects/QCADToggleToolButton.c'; then $(CYGPATH_W) 'objects/QCADToggleToolButton.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADToggleToolButton.c'; fi`

objects/libgtkdocfiles_a-QCADCellRendererText.o: objects/QCADCellRendererText.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtkdocfiles_a_CFLAGS) $(CFLAGS) -MT objects/libgtkdocfiles_a-QCADCellRendererText.o -MD -MP -MF "objects/$(DEPDIR)/libgtkdocfiles_a-QCADCellRendererText.Tpo" -c -o objects/libgtkdocfiles_a-QCADCellRendererText.o `test -f 'objects/QCADCellRendererText.c' || echo '$(srcdir)/'`objects/QCADCellRendererText.c; \
	then mv -f "objects/$(DEPDIR)/libgtkdocfiles_a-QCADCellRendererText.Tpo" "objects/$(DEPDIR)/libgtkdocfiles_a-QCADCellRendererText.Po"; else rm -f "objects/$(DEPDIR)/libgtkdocfiles_a-QCADCellRendererText.Tpo"; exit 1; fi
#	source='objects/QCADCellRendererText.c' object='objects/libgtkdocfiles_a-QCADCellRendererText.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtkdocfiles_a_CFLAGS) $(CFLAGS) -c -o objects/libgtkdocfiles_a-QCADCellRendererText.o `test -f 'objects/QCADCellRendererText.c' || echo '$(srcdir)/'`objects/QCADCellRendererText.c

objects/libgtkdocfiles_a-QCADCellRendererText.obj: objects/QCADCellRendererText.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtkdocfiles_a_CFLAGS) $(CFLAGS) -MT objects/libgtkdocfiles_a-QCADCellRendererText.obj -MD -MP -MF "objects/$(DEPDIR)/libgtkdocfiles_a-QCADCellRendererText.Tpo" -c -o objects/libgtkdocfiles_a-QCADCellRendererText.obj `if test -f 'objects/QCADCellRendererText.c'; then $(CYGPATH_W) 'objects/QCADCellRendererText.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADCellRendererText.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/libgtkdocfiles_a-QCADCellRendererText.Tpo" "objects/$(DEPDIR)/libgtkdocfiles_a-QCADCellRendererText.Po"; else rm -f "objects/$(DEPDIR)/libgtkdocfiles_a-QCADCellRendererText.Tpo"; exit 1; fi
#	source='objects/QCADCellRendererText.c' object='objects/libgtkdocfiles_a-QCADCellRendererText.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libgtkdocfiles_a_CFLAGS) $(CFLAGS) -c -o objects/libgtkdocfiles_a-QCADCellRendererText.obj `if test -f 'objects/QCADCellRendererText.c'; then $(CYGPATH_W) 'objects/QCADCellRendererText.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADCellRendererText.c'; fi`

QCADesigner-fileio_helpers.o: fileio_helpers.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-fileio_helpers.o -MD -MP -MF "$(DEPDIR)/QCADesigner-fileio_helpers.Tpo" -c -o QCADesigner-fileio_helpers.o `test -f 'fileio_helpers.c' || echo '$(srcdir)/'`fileio_helpers.c; \
	then mv -f "$(DEPDIR)/QCADesigner-fileio_helpers.Tpo" "$(DEPDIR)/QCADesigner-fileio_helpers.Po"; else rm -f "$(DEPDIR)/QCADesigner-fileio_helpers.Tpo"; exit 1; fi
#	source='fileio_helpers.c' object='QCADesigner-fileio_helpers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-fileio_helpers.o `test -f 'fileio_helpers.c' || echo '$(srcdir)/'`fileio_helpers.c

QCADesigner-fileio_helpers.obj: fileio_helpers.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-fileio_helpers.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-fileio_helpers.Tpo" -c -o QCADesigner-fileio_helpers.obj `if test -f 'fileio_helpers.c'; then $(CYGPATH_W) 'fileio_helpers.c'; else $(CYGPATH_W) '$(srcdir)/fileio_helpers.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-fileio_helpers.Tpo" "$(DEPDIR)/QCADesigner-fileio_helpers.Po"; else rm -f "$(DEPDIR)/QCADesigner-fileio_helpers.Tpo"; exit 1; fi
#	source='fileio_helpers.c' object='QCADesigner-fileio_helpers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-fileio_helpers.obj `if test -f 'fileio_helpers.c'; then $(CYGPATH_W) 'fileio_helpers.c'; else $(CYGPATH_W) '$(srcdir)/fileio_helpers.c'; fi`

QCADesigner-generic_utils.o: generic_utils.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-generic_utils.o -MD -MP -MF "$(DEPDIR)/QCADesigner-generic_utils.Tpo" -c -o QCADesigner-generic_utils.o `test -f 'generic_utils.c' || echo '$(srcdir)/'`generic_utils.c; \
	then mv -f "$(DEPDIR)/QCADesigner-generic_utils.Tpo" "$(DEPDIR)/QCADesigner-generic_utils.Po"; else rm -f "$(DEPDIR)/QCADesigner-generic_utils.Tpo"; exit 1; fi
#	source='generic_utils.c' object='QCADesigner-generic_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-generic_utils.o `test -f 'generic_utils.c' || echo '$(srcdir)/'`generic_utils.c

QCADesigner-generic_utils.obj: generic_utils.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-generic_utils.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-generic_utils.Tpo" -c -o QCADesigner-generic_utils.obj `if test -f 'generic_utils.c'; then $(CYGPATH_W) 'generic_utils.c'; else $(CYGPATH_W) '$(srcdir)/generic_utils.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-generic_utils.Tpo" "$(DEPDIR)/QCADesigner-generic_utils.Po"; else rm -f "$(DEPDIR)/QCADesigner-generic_utils.Tpo"; exit 1; fi
#	source='generic_utils.c' object='QCADesigner-generic_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-generic_utils.obj `if test -f 'generic_utils.c'; then $(CYGPATH_W) 'generic_utils.c'; else $(CYGPATH_W) '$(srcdir)/generic_utils.c'; fi`

QCADesigner-exp_array.o: exp_array.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-exp_array.o -MD -MP -MF "$(DEPDIR)/QCADesigner-exp_array.Tpo" -c -o QCADesigner-exp_array.o `test -f 'exp_array.c' || echo '$(srcdir)/'`exp_array.c; \
	then mv -f "$(DEPDIR)/QCADesigner-exp_array.Tpo" "$(DEPDIR)/QCADesigner-exp_array.Po"; else rm -f "$(DEPDIR)/QCADesigner-exp_array.Tpo"; exit 1; fi
#	source='exp_array.c' object='QCADesigner-exp_array.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-exp_array.o `test -f 'exp_array.c' || echo '$(srcdir)/'`exp_array.c

QCADesigner-exp_array.obj: exp_array.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-exp_array.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-exp_array.Tpo" -c -o QCADesigner-exp_array.obj `if test -f 'exp_array.c'; then $(CYGPATH_W) 'exp_array.c'; else $(CYGPATH_W) '$(srcdir)/exp_array.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-exp_array.Tpo" "$(DEPDIR)/QCADesigner-exp_array.Po"; else rm -f "$(DEPDIR)/QCADesigner-exp_array.Tpo"; exit 1; fi
#	source='exp_array.c' object='QCADesigner-exp_array.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-exp_array.obj `if test -f 'exp_array.c'; then $(CYGPATH_W) 'exp_array.c'; else $(CYGPATH_W) '$(srcdir)/exp_array.c'; fi`

QCADesigner-hsl2rgb.o: hsl2rgb.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-hsl2rgb.o -MD -MP -MF "$(DEPDIR)/QCADesigner-hsl2rgb.Tpo" -c -o QCADesigner-hsl2rgb.o `test -f 'hsl2rgb.c' || echo '$(srcdir)/'`hsl2rgb.c; \
	then mv -f "$(DEPDIR)/QCADesigner-hsl2rgb.Tpo" "$(DEPDIR)/QCADesigner-hsl2rgb.Po"; else rm -f "$(DEPDIR)/QCADesigner-hsl2rgb.Tpo"; exit 1; fi
#	source='hsl2rgb.c' object='QCADesigner-hsl2rgb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-hsl2rgb.o `test -f 'hsl2rgb.c' || echo '$(srcdir)/'`hsl2rgb.c

QCADesigner-hsl2rgb.obj: hsl2rgb.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-hsl2rgb.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-hsl2rgb.Tpo" -c -o QCADesigner-hsl2rgb.obj `if test -f 'hsl2rgb.c'; then $(CYGPATH_W) 'hsl2rgb.c'; else $(CYGPATH_W) '$(srcdir)/hsl2rgb.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-hsl2rgb.Tpo" "$(DEPDIR)/QCADesigner-hsl2rgb.Po"; else rm -f "$(DEPDIR)/QCADesigner-hsl2rgb.Tpo"; exit 1; fi
#	source='hsl2rgb.c' object='QCADesigner-hsl2rgb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-hsl2rgb.obj `if test -f 'hsl2rgb.c'; then $(CYGPATH_W) 'hsl2rgb.c'; else $(CYGPATH_W) '$(srcdir)/hsl2rgb.c'; fi`

QCADesigner-custom_widgets.o: custom_widgets.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-custom_widgets.o -MD -MP -MF "$(DEPDIR)/QCADesigner-custom_widgets.Tpo" -c -o QCADesigner-custom_widgets.o `test -f 'custom_widgets.c' || echo '$(srcdir)/'`custom_widgets.c; \
	then mv -f "$(DEPDIR)/QCADesigner-custom_widgets.Tpo" "$(DEPDIR)/QCADesigner-custom_widgets.Po"; else rm -f "$(DEPDIR)/QCADesigner-custom_widgets.Tpo"; exit 1; fi
#	source='custom_widgets.c' object='QCADesigner-custom_widgets.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-custom_widgets.o `test -f 'custom_widgets.c' || echo '$(srcdir)/'`custom_widgets.c

QCADesigner-custom_widgets.obj: custom_widgets.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-custom_widgets.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-custom_widgets.Tpo" -c -o QCADesigner-custom_widgets.obj `if test -f 'custom_widgets.c'; then $(CYGPATH_W) 'custom_widgets.c'; else $(CYGPATH_W) '$(srcdir)/custom_widgets.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-custom_widgets.Tpo" "$(DEPDIR)/QCADesigner-custom_widgets.Po"; else rm -f "$(DEPDIR)/QCADesigner-custom_widgets.Tpo"; exit 1; fi
#	source='custom_widgets.c' object='QCADesigner-custom_widgets.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-custom_widgets.obj `if test -f 'custom_widgets.c'; then $(CYGPATH_W) 'custom_widgets.c'; else $(CYGPATH_W) '$(srcdir)/custom_widgets.c'; fi`

QCADesigner-design.o: design.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-design.o -MD -MP -MF "$(DEPDIR)/QCADesigner-design.Tpo" -c -o QCADesigner-design.o `test -f 'design.c' || echo '$(srcdir)/'`design.c; \
	then mv -f "$(DEPDIR)/QCADesigner-design.Tpo" "$(DEPDIR)/QCADesigner-design.Po"; else rm -f "$(DEPDIR)/QCADesigner-design.Tpo"; exit 1; fi
#	source='design.c' object='QCADesigner-design.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-design.o `test -f 'design.c' || echo '$(srcdir)/'`design.c

QCADesigner-design.obj: design.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-design.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-design.Tpo" -c -o QCADesigner-design.obj `if test -f 'design.c'; then $(CYGPATH_W) 'design.c'; else $(CYGPATH_W) '$(srcdir)/design.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-design.Tpo" "$(DEPDIR)/QCADesigner-design.Po"; else rm -f "$(DEPDIR)/QCADesigner-design.Tpo"; exit 1; fi
#	source='design.c' object='QCADesigner-design.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-design.obj `if test -f 'design.c'; then $(CYGPATH_W) 'design.c'; else $(CYGPATH_W) '$(srcdir)/design.c'; fi`

objects/QCADesigner-QCADRuler.o: objects/QCADRuler.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADRuler.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADRuler.Tpo" -c -o objects/QCADesigner-QCADRuler.o `test -f 'objects/QCADRuler.c' || echo '$(srcdir)/'`objects/QCADRuler.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADRuler.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADRuler.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADRuler.Tpo"; exit 1; fi
#	source='objects/QCADRuler.c' object='objects/QCADesigner-QCADRuler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADRuler.o `test -f 'objects/QCADRuler.c' || echo '$(srcdir)/'`objects/QCADRuler.c

objects/QCADesigner-QCADRuler.obj: objects/QCADRuler.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADRuler.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADRuler.Tpo" -c -o objects/QCADesigner-QCADRuler.obj `if test -f 'objects/QCADRuler.c'; then $(CYGPATH_W) 'objects/QCADRuler.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADRuler.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADRuler.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADRuler.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADRuler.Tpo"; exit 1; fi
#	source='objects/QCADRuler.c' object='objects/QCADesigner-QCADRuler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADRuler.obj `if test -f 'objects/QCADRuler.c'; then $(CYGPATH_W) 'objects/QCADRuler.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADRuler.c'; fi`

objects/QCADesigner-QCADCell.o: objects/QCADCell.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADCell.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADCell.Tpo" -c -o objects/QCADesigner-QCADCell.o `test -f 'objects/QCADCell.c' || echo '$(srcdir)/'`objects/QCADCell.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADCell.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADCell.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADCell.Tpo"; exit 1; fi
#	source='objects/QCADCell.c' object='objects/QCADesigner-QCADCell.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADCell.o `test -f 'objects/QCADCell.c' || echo '$(srcdir)/'`objects/QCADCell.c

objects/QCADesigner-QCADCell.obj: objects/QCADCell.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADCell.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADCell.Tpo" -c -o objects/QCADesigner-QCADCell.obj `if test -f 'objects/QCADCell.c'; then $(CYGPATH_W) 'objects/QCADCell.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADCell.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADCell.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADCell.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADCell.Tpo"; exit 1; fi
#	source='objects/QCADCell.c' object='objects/QCADesigner-QCADCell.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADCell.obj `if test -f 'objects/QCADCell.c'; then $(CYGPATH_W) 'objects/QCADCell.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADCell.c'; fi`

objects/QCADesigner-QCADCompoundDO.o: objects/QCADCompoundDO.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADCompoundDO.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADCompoundDO.Tpo" -c -o objects/QCADesigner-QCADCompoundDO.o `test -f 'objects/QCADCompoundDO.c' || echo '$(srcdir)/'`objects/QCADCompoundDO.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADCompoundDO.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADCompoundDO.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADCompoundDO.Tpo"; exit 1; fi
#	source='objects/QCADCompoundDO.c' object='objects/QCADesigner-QCADCompoundDO.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADCompoundDO.o `test -f 'objects/QCADCompoundDO.c' || echo '$(srcdir)/'`objects/QCADCompoundDO.c

objects/QCADesigner-QCADCompoundDO.obj: objects/QCADCompoundDO.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADCompoundDO.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADCompoundDO.Tpo" -c -o objects/QCADesigner-QCADCompoundDO.obj `if test -f 'objects/QCADCompoundDO.c'; then $(CYGPATH_W) 'objects/QCADCompoundDO.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADCompoundDO.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADCompoundDO.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADCompoundDO.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADCompoundDO.Tpo"; exit 1; fi
#	source='objects/QCADCompoundDO.c' object='objects/QCADesigner-QCADCompoundDO.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADCompoundDO.obj `if test -f 'objects/QCADCompoundDO.c'; then $(CYGPATH_W) 'objects/QCADCompoundDO.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADCompoundDO.c'; fi`

objects/QCADesigner-QCADObject.o: objects/QCADObject.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADObject.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADObject.Tpo" -c -o objects/QCADesigner-QCADObject.o `test -f 'objects/QCADObject.c' || echo '$(srcdir)/'`objects/QCADObject.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADObject.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADObject.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADObject.Tpo"; exit 1; fi
#	source='objects/QCADObject.c' object='objects/QCADesigner-QCADObject.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADObject.o `test -f 'objects/QCADObject.c' || echo '$(srcdir)/'`objects/QCADObject.c

objects/QCADesigner-QCADObject.obj: objects/QCADObject.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADObject.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADObject.Tpo" -c -o objects/QCADesigner-QCADObject.obj `if test -f 'objects/QCADObject.c'; then $(CYGPATH_W) 'objects/QCADObject.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADObject.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADObject.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADObject.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADObject.Tpo"; exit 1; fi
#	source='objects/QCADObject.c' object='objects/QCADesigner-QCADObject.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADObject.obj `if test -f 'objects/QCADObject.c'; then $(CYGPATH_W) 'objects/QCADObject.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADObject.c'; fi`

objects/QCADesigner-QCADDesignObject.o: objects/QCADDesignObject.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADDesignObject.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADDesignObject.Tpo" -c -o objects/QCADesigner-QCADDesignObject.o `test -f 'objects/QCADDesignObject.c' || echo '$(srcdir)/'`objects/QCADDesignObject.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADDesignObject.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADDesignObject.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADDesignObject.Tpo"; exit 1; fi
#	source='objects/QCADDesignObject.c' object='objects/QCADesigner-QCADDesignObject.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADDesignObject.o `test -f 'objects/QCADDesignObject.c' || echo '$(srcdir)/'`objects/QCADDesignObject.c

objects/QCADesigner-QCADDesignObject.obj: objects/QCADDesignObject.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADDesignObject.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADDesignObject.Tpo" -c -o objects/QCADesigner-QCADDesignObject.obj `if test -f 'objects/QCADDesignObject.c'; then $(CYGPATH_W) 'objects/QCADDesignObject.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADDesignObject.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADDesignObject.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADDesignObject.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADDesignObject.Tpo"; exit 1; fi
#	source='objects/QCADDesignObject.c' object='objects/QCADesigner-QCADDesignObject.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADDesignObject.obj `if test -f 'objects/QCADDesignObject.c'; then $(CYGPATH_W) 'objects/QCADDesignObject.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADDesignObject.c'; fi`

objects/QCADesigner-QCADDOContainer.o: objects/QCADDOContainer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADDOContainer.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADDOContainer.Tpo" -c -o objects/QCADesigner-QCADDOContainer.o `test -f 'objects/QCADDOContainer.c' || echo '$(srcdir)/'`objects/QCADDOContainer.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADDOContainer.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADDOContainer.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADDOContainer.Tpo"; exit 1; fi
#	source='objects/QCADDOContainer.c' object='objects/QCADesigner-QCADDOContainer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADDOContainer.o `test -f 'objects/QCADDOContainer.c' || echo '$(srcdir)/'`objects/QCADDOContainer.c

objects/QCADesigner-QCADDOContainer.obj: objects/QCADDOContainer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADDOContainer.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADDOContainer.Tpo" -c -o objects/QCADesigner-QCADDOContainer.obj `if test -f 'objects/QCADDOContainer.c'; then $(CYGPATH_W) 'objects/QCADDOContainer.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADDOContainer.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADDOContainer.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADDOContainer.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADDOContainer.Tpo"; exit 1; fi
#	source='objects/QCADDOContainer.c' object='objects/QCADesigner-QCADDOContainer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADDOContainer.obj `if test -f 'objects/QCADDOContainer.c'; then $(CYGPATH_W) 'objects/QCADDOContainer.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADDOContainer.c'; fi`

objects/QCADesigner-QCADLabel.o: objects/QCADLabel.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADLabel.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADLabel.Tpo" -c -o objects/QCADesigner-QCADLabel.o `test -f 'objects/QCADLabel.c' || echo '$(srcdir)/'`objects/QCADLabel.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADLabel.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADLabel.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADLabel.Tpo"; exit 1; fi
#	source='objects/QCADLabel.c' object='objects/QCADesigner-QCADLabel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADLabel.o `test -f 'objects/QCADLabel.c' || echo '$(srcdir)/'`objects/QCADLabel.c

objects/QCADesigner-QCADLabel.obj: objects/QCADLabel.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADLabel.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADLabel.Tpo" -c -o objects/QCADesigner-QCADLabel.obj `if test -f 'objects/QCADLabel.c'; then $(CYGPATH_W) 'objects/QCADLabel.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADLabel.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADLabel.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADLabel.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADLabel.Tpo"; exit 1; fi
#	source='objects/QCADLabel.c' object='objects/QCADesigner-QCADLabel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADLabel.obj `if test -f 'objects/QCADLabel.c'; then $(CYGPATH_W) 'objects/QCADLabel.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADLabel.c'; fi`

objects/QCADesigner-QCADLayer.o: objects/QCADLayer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADLayer.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADLayer.Tpo" -c -o objects/QCADesigner-QCADLayer.o `test -f 'objects/QCADLayer.c' || echo '$(srcdir)/'`objects/QCADLayer.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADLayer.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADLayer.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADLayer.Tpo"; exit 1; fi
#	source='objects/QCADLayer.c' object='objects/QCADesigner-QCADLayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADLayer.o `test -f 'objects/QCADLayer.c' || echo '$(srcdir)/'`objects/QCADLayer.c

objects/QCADesigner-QCADLayer.obj: objects/QCADLayer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADLayer.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADLayer.Tpo" -c -o objects/QCADesigner-QCADLayer.obj `if test -f 'objects/QCADLayer.c'; then $(CYGPATH_W) 'objects/QCADLayer.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADLayer.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADLayer.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADLayer.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADLayer.Tpo"; exit 1; fi
#	source='objects/QCADLayer.c' object='objects/QCADesigner-QCADLayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADLayer.obj `if test -f 'objects/QCADLayer.c'; then $(CYGPATH_W) 'objects/QCADLayer.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADLayer.c'; fi`

objects/QCADesigner-QCADClockingLayer.o: objects/QCADClockingLayer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADClockingLayer.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADClockingLayer.Tpo" -c -o objects/QCADesigner-QCADClockingLayer.o `test -f 'objects/QCADClockingLayer.c' || echo '$(srcdir)/'`objects/QCADClockingLayer.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADClockingLayer.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADClockingLayer.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADClockingLayer.Tpo"; exit 1; fi
#	source='objects/QCADClockingLayer.c' object='objects/QCADesigner-QCADClockingLayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADClockingLayer.o `test -f 'objects/QCADClockingLayer.c' || echo '$(srcdir)/'`objects/QCADClockingLayer.c

objects/QCADesigner-QCADClockingLayer.obj: objects/QCADClockingLayer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADClockingLayer.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADClockingLayer.Tpo" -c -o objects/QCADesigner-QCADClockingLayer.obj `if test -f 'objects/QCADClockingLayer.c'; then $(CYGPATH_W) 'objects/QCADClockingLayer.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADClockingLayer.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADClockingLayer.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADClockingLayer.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADClockingLayer.Tpo"; exit 1; fi
#	source='objects/QCADClockingLayer.c' object='objects/QCADesigner-QCADClockingLayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADClockingLayer.obj `if test -f 'objects/QCADClockingLayer.c'; then $(CYGPATH_W) 'objects/QCADClockingLayer.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADClockingLayer.c'; fi`

objects/QCADesigner-QCADStretchyObject.o: objects/QCADStretchyObject.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADStretchyObject.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADStretchyObject.Tpo" -c -o objects/QCADesigner-QCADStretchyObject.o `test -f 'objects/QCADStretchyObject.c' || echo '$(srcdir)/'`objects/QCADStretchyObject.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADStretchyObject.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADStretchyObject.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADStretchyObject.Tpo"; exit 1; fi
#	source='objects/QCADStretchyObject.c' object='objects/QCADesigner-QCADStretchyObject.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADStretchyObject.o `test -f 'objects/QCADStretchyObject.c' || echo '$(srcdir)/'`objects/QCADStretchyObject.c

objects/QCADesigner-QCADStretchyObject.obj: objects/QCADStretchyObject.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADStretchyObject.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADStretchyObject.Tpo" -c -o objects/QCADesigner-QCADStretchyObject.obj `if test -f 'objects/QCADStretchyObject.c'; then $(CYGPATH_W) 'objects/QCADStretchyObject.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADStretchyObject.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADStretchyObject.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADStretchyObject.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADStretchyObject.Tpo"; exit 1; fi
#	source='objects/QCADStretchyObject.c' object='objects/QCADesigner-QCADStretchyObject.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADStretchyObject.obj `if test -f 'objects/QCADStretchyObject.c'; then $(CYGPATH_W) 'objects/QCADStretchyObject.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADStretchyObject.c'; fi`

objects/QCADesigner-QCADElectrode.o: objects/QCADElectrode.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADElectrode.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADElectrode.Tpo" -c -o objects/QCADesigner-QCADElectrode.o `test -f 'objects/QCADElectrode.c' || echo '$(srcdir)/'`objects/QCADElectrode.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADElectrode.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADElectrode.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADElectrode.Tpo"; exit 1; fi
#	source='objects/QCADElectrode.c' object='objects/QCADesigner-QCADElectrode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADElectrode.o `test -f 'objects/QCADElectrode.c' || echo '$(srcdir)/'`objects/QCADElectrode.c

objects/QCADesigner-QCADElectrode.obj: objects/QCADElectrode.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADElectrode.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADElectrode.Tpo" -c -o objects/QCADesigner-QCADElectrode.obj `if test -f 'objects/QCADElectrode.c'; then $(CYGPATH_W) 'objects/QCADElectrode.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADElectrode.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADElectrode.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADElectrode.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADElectrode.Tpo"; exit 1; fi
#	source='objects/QCADElectrode.c' object='objects/QCADesigner-QCADElectrode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADElectrode.obj `if test -f 'objects/QCADElectrode.c'; then $(CYGPATH_W) 'objects/QCADElectrode.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADElectrode.c'; fi`

objects/QCADesigner-QCADRectangleElectrode.o: objects/QCADRectangleElectrode.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADRectangleElectrode.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADRectangleElectrode.Tpo" -c -o objects/QCADesigner-QCADRectangleElectrode.o `test -f 'objects/QCADRectangleElectrode.c' || echo '$(srcdir)/'`objects/QCADRectangleElectrode.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADRectangleElectrode.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADRectangleElectrode.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADRectangleElectrode.Tpo"; exit 1; fi
#	source='objects/QCADRectangleElectrode.c' object='objects/QCADesigner-QCADRectangleElectrode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADRectangleElectrode.o `test -f 'objects/QCADRectangleElectrode.c' || echo '$(srcdir)/'`objects/QCADRectangleElectrode.c

objects/QCADesigner-QCADRectangleElectrode.obj: objects/QCADRectangleElectrode.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADRectangleElectrode.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADRectangleElectrode.Tpo" -c -o objects/QCADesigner-QCADRectangleElectrode.obj `if test -f 'objects/QCADRectangleElectrode.c'; then $(CYGPATH_W) 'objects/QCADRectangleElectrode.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADRectangleElectrode.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADRectangleElectrode.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADRectangleElectrode.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADRectangleElectrode.Tpo"; exit 1; fi
#	source='objects/QCADRectangleElectrode.c' object='objects/QCADesigner-QCADRectangleElectrode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADRectangleElectrode.obj `if test -f 'objects/QCADRectangleElectrode.c'; then $(CYGPATH_W) 'objects/QCADRectangleElectrode.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADRectangleElectrode.c'; fi`

objects/QCADesigner-QCADSubstrate.o: objects/QCADSubstrate.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADSubstrate.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADSubstrate.Tpo" -c -o objects/QCADesigner-QCADSubstrate.o `test -f 'objects/QCADSubstrate.c' || echo '$(srcdir)/'`objects/QCADSubstrate.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADSubstrate.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADSubstrate.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADSubstrate.Tpo"; exit 1; fi
#	source='objects/QCADSubstrate.c' object='objects/QCADesigner-QCADSubstrate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADSubstrate.o `test -f 'objects/QCADSubstrate.c' || echo '$(srcdir)/'`objects/QCADSubstrate.c

objects/QCADesigner-QCADSubstrate.obj: objects/QCADSubstrate.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADSubstrate.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADSubstrate.Tpo" -c -o objects/QCADesigner-QCADSubstrate.obj `if test -f 'objects/QCADSubstrate.c'; then $(CYGPATH_W) 'objects/QCADSubstrate.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADSubstrate.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADSubstrate.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADSubstrate.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADSubstrate.Tpo"; exit 1; fi
#	source='objects/QCADSubstrate.c' object='objects/QCADesigner-QCADSubstrate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADSubstrate.obj `if test -f 'objects/QCADSubstrate.c'; then $(CYGPATH_W) 'objects/QCADSubstrate.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADSubstrate.c'; fi`

objects/QCADesigner-QCADParamSpecObjectList.o: objects/QCADParamSpecObjectList.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADParamSpecObjectList.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADParamSpecObjectList.Tpo" -c -o objects/QCADesigner-QCADParamSpecObjectList.o `test -f 'objects/QCADParamSpecObjectList.c' || echo '$(srcdir)/'`objects/QCADParamSpecObjectList.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADParamSpecObjectList.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADParamSpecObjectList.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADParamSpecObjectList.Tpo"; exit 1; fi
#	source='objects/QCADParamSpecObjectList.c' object='objects/QCADesigner-QCADParamSpecObjectList.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADParamSpecObjectList.o `test -f 'objects/QCADParamSpecObjectList.c' || echo '$(srcdir)/'`objects/QCADParamSpecObjectList.c

objects/QCADesigner-QCADParamSpecObjectList.obj: objects/QCADParamSpecObjectList.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADParamSpecObjectList.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADParamSpecObjectList.Tpo" -c -o objects/QCADesigner-QCADParamSpecObjectList.obj `if test -f 'objects/QCADParamSpecObjectList.c'; then $(CYGPATH_W) 'objects/QCADParamSpecObjectList.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADParamSpecObjectList.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADParamSpecObjectList.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADParamSpecObjectList.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADParamSpecObjectList.Tpo"; exit 1; fi
#	source='objects/QCADParamSpecObjectList.c' object='objects/QCADesigner-QCADParamSpecObjectList.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADParamSpecObjectList.obj `if test -f 'objects/QCADParamSpecObjectList.c'; then $(CYGPATH_W) 'objects/QCADParamSpecObjectList.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADParamSpecObjectList.c'; fi`

objects/QCADesigner-object_helpers.o: objects/object_helpers.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-object_helpers.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-object_helpers.Tpo" -c -o objects/QCADesigner-object_helpers.o `test -f 'objects/object_helpers.c' || echo '$(srcdir)/'`objects/object_helpers.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-object_helpers.Tpo" "objects/$(DEPDIR)/QCADesigner-object_helpers.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-object_helpers.Tpo"; exit 1; fi
#	source='objects/object_helpers.c' object='objects/QCADesigner-object_helpers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-object_helpers.o `test -f 'objects/object_helpers.c' || echo '$(srcdir)/'`objects/object_helpers.c

objects/QCADesigner-object_helpers.obj: objects/object_helpers.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-object_helpers.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-object_helpers.Tpo" -c -o objects/QCADesigner-object_helpers.obj `if test -f 'objects/object_helpers.c'; then $(CYGPATH_W) 'objects/object_helpers.c'; else $(CYGPATH_W) '$(srcdir)/objects/object_helpers.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-object_helpers.Tpo" "objects/$(DEPDIR)/QCADesigner-object_helpers.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-object_helpers.Tpo"; exit 1; fi
#	source='objects/object_helpers.c' object='objects/QCADesigner-object_helpers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-object_helpers.obj `if test -f 'objects/object_helpers.c'; then $(CYGPATH_W) 'objects/object_helpers.c'; else $(CYGPATH_W) '$(srcdir)/objects/object_helpers.c'; fi`

QCADesigner-simulation.o: simulation.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-simulation.o -MD -MP -MF "$(DEPDIR)/QCADesigner-simulation.Tpo" -c -o QCADesigner-simulation.o `test -f 'simulation.c' || echo '$(srcdir)/'`simulation.c; \
	then mv -f "$(DEPDIR)/QCADesigner-simulation.Tpo" "$(DEPDIR)/QCADesigner-simulation.Po"; else rm -f "$(DEPDIR)/QCADesigner-simulation.Tpo"; exit 1; fi
#	source='simulation.c' object='QCADesigner-simulation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-simulation.o `test -f 'simulation.c' || echo '$(srcdir)/'`simulation.c

QCADesigner-simulation.obj: simulation.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-simulation.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-simulation.Tpo" -c -o QCADesigner-simulation.obj `if test -f 'simulation.c'; then $(CYGPATH_W) 'simulation.c'; else $(CYGPATH_W) '$(srcdir)/simulation.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-simulation.Tpo" "$(DEPDIR)/QCADesigner-simulation.Po"; else rm -f "$(DEPDIR)/QCADesigner-simulation.Tpo"; exit 1; fi
#	source='simulation.c' object='QCADesigner-simulation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-simulation.obj `if test -f 'simulation.c'; then $(CYGPATH_W) 'simulation.c'; else $(CYGPATH_W) '$(srcdir)/simulation.c'; fi`

QCADesigner-bistable_simulation.o: bistable_simulation.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-bistable_simulation.o -MD -MP -MF "$(DEPDIR)/QCADesigner-bistable_simulation.Tpo" -c -o QCADesigner-bistable_simulation.o `test -f 'bistable_simulation.c' || echo '$(srcdir)/'`bistable_simulation.c; \
	then mv -f "$(DEPDIR)/QCADesigner-bistable_simulation.Tpo" "$(DEPDIR)/QCADesigner-bistable_simulation.Po"; else rm -f "$(DEPDIR)/QCADesigner-bistable_simulation.Tpo"; exit 1; fi
#	source='bistable_simulation.c' object='QCADesigner-bistable_simulation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-bistable_simulation.o `test -f 'bistable_simulation.c' || echo '$(srcdir)/'`bistable_simulation.c

QCADesigner-bistable_simulation.obj: bistable_simulation.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-bistable_simulation.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-bistable_simulation.Tpo" -c -o QCADesigner-bistable_simulation.obj `if test -f 'bistable_simulation.c'; then $(CYGPATH_W) 'bistable_simulation.c'; else $(CYGPATH_W) '$(srcdir)/bistable_simulation.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-bistable_simulation.Tpo" "$(DEPDIR)/QCADesigner-bistable_simulation.Po"; else rm -f "$(DEPDIR)/QCADesigner-bistable_simulation.Tpo"; exit 1; fi
#	source='bistable_simulation.c' object='QCADesigner-bistable_simulation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-bistable_simulation.obj `if test -f 'bistable_simulation.c'; then $(CYGPATH_W) 'bistable_simulation.c'; else $(CYGPATH_W) '$(srcdir)/bistable_simulation.c'; fi`

QCADesigner-coherence_vector.o: coherence_vector.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-coherence_vector.o -MD -MP -MF "$(DEPDIR)/QCADesigner-coherence_vector.Tpo" -c -o QCADesigner-coherence_vector.o `test -f 'coherence_vector.c' || echo '$(srcdir)/'`coherence_vector.c; \
	then mv -f "$(DEPDIR)/QCADesigner-coherence_vector.Tpo" "$(DEPDIR)/QCADesigner-coherence_vector.Po"; else rm -f "$(DEPDIR)/QCADesigner-coherence_vector.Tpo"; exit 1; fi
#	source='coherence_vector.c' object='QCADesigner-coherence_vector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-coherence_vector.o `test -f 'coherence_vector.c' || echo '$(srcdir)/'`coherence_vector.c

QCADesigner-coherence_vector.obj: coherence_vector.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-coherence_vector.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-coherence_vector.Tpo" -c -o QCADesigner-coherence_vector.obj `if test -f 'coherence_vector.c'; then $(CYGPATH_W) 'coherence_vector.c'; else $(CYGPATH_W) '$(srcdir)/coherence_vector.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-coherence_vector.Tpo" "$(DEPDIR)/QCADesigner-coherence_vector.Po"; else rm -f "$(DEPDIR)/QCADesigner-coherence_vector.Tpo"; exit 1; fi
#	source='coherence_vector.c' object='QCADesigner-coherence_vector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-coherence_vector.obj `if test -f 'coherence_vector.c'; then $(CYGPATH_W) 'coherence_vector.c'; else $(CYGPATH_W) '$(srcdir)/coherence_vector.c'; fi`

QCADesigner-semi_coherent.o: semi_coherent.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-semi_coherent.o -MD -MP -MF "$(DEPDIR)/QCADesigner-semi_coherent.Tpo" -c -o QCADesigner-semi_coherent.o `test -f 'semi_coherent.c' || echo '$(srcdir)/'`semi_coherent.c; \
	then mv -f "$(DEPDIR)/QCADesigner-semi_coherent.Tpo" "$(DEPDIR)/QCADesigner-semi_coherent.Po"; else rm -f "$(DEPDIR)/QCADesigner-semi_coherent.Tpo"; exit 1; fi
#	source='semi_coherent.c' object='QCADesigner-semi_coherent.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-semi_coherent.o `test -f 'semi_coherent.c' || echo '$(srcdir)/'`semi_coherent.c

QCADesigner-semi_coherent.obj: semi_coherent.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-semi_coherent.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-semi_coherent.Tpo" -c -o QCADesigner-semi_coherent.obj `if test -f 'semi_coherent.c'; then $(CYGPATH_W) 'semi_coherent.c'; else $(CYGPATH_W) '$(srcdir)/semi_coherent.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-semi_coherent.Tpo" "$(DEPDIR)/QCADesigner-semi_coherent.Po"; else rm -f "$(DEPDIR)/QCADesigner-semi_coherent.Tpo"; exit 1; fi
#	source='semi_coherent.c' object='QCADesigner-semi_coherent.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-semi_coherent.obj `if test -f 'semi_coherent.c'; then $(CYGPATH_W) 'semi_coherent.c'; else $(CYGPATH_W) '$(srcdir)/semi_coherent.c'; fi`

QCADesigner-ts_field_clock.o: ts_field_clock.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-ts_field_clock.o -MD -MP -MF "$(DEPDIR)/QCADesigner-ts_field_clock.Tpo" -c -o QCADesigner-ts_field_clock.o `test -f 'ts_field_clock.c' || echo '$(srcdir)/'`ts_field_clock.c; \
	then mv -f "$(DEPDIR)/QCADesigner-ts_field_clock.Tpo" "$(DEPDIR)/QCADesigner-ts_field_clock.Po"; else rm -f "$(DEPDIR)/QCADesigner-ts_field_clock.Tpo"; exit 1; fi
#	source='ts_field_clock.c' object='QCADesigner-ts_field_clock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-ts_field_clock.o `test -f 'ts_field_clock.c' || echo '$(srcdir)/'`ts_field_clock.c

QCADesigner-ts_field_clock.obj: ts_field_clock.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-ts_field_clock.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-ts_field_clock.Tpo" -c -o QCADesigner-ts_field_clock.obj `if test -f 'ts_field_clock.c'; then $(CYGPATH_W) 'ts_field_clock.c'; else $(CYGPATH_W) '$(srcdir)/ts_field_clock.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-ts_field_clock.Tpo" "$(DEPDIR)/QCADesigner-ts_field_clock.Po"; else rm -f "$(DEPDIR)/QCADesigner-ts_field_clock.Tpo"; exit 1; fi
#	source='ts_field_clock.c' object='QCADesigner-ts_field_clock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-ts_field_clock.obj `if test -f 'ts_field_clock.c'; then $(CYGPATH_W) 'ts_field_clock.c'; else $(CYGPATH_W) '$(srcdir)/ts_field_clock.c'; fi`

QCADesigner-three_state_coherence.o: three_state_coherence.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-three_state_coherence.o -MD -MP -MF "$(DEPDIR)/QCADesigner-three_state_coherence.Tpo" -c -o QCADesigner-three_state_coherence.o `test -f 'three_state_coherence.c' || echo '$(srcdir)/'`three_state_coherence.c; \
	then mv -f "$(DEPDIR)/QCADesigner-three_state_coherence.Tpo" "$(DEPDIR)/QCADesigner-three_state_coherence.Po"; else rm -f "$(DEPDIR)/QCADesigner-three_state_coherence.Tpo"; exit 1; fi
#	source='three_state_coherence.c' object='QCADesigner-three_state_coherence.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-three_state_coherence.o `test -f 'three_state_coherence.c' || echo '$(srcdir)/'`three_state_coherence.c

QCADesigner-three_state_coherence.obj: three_state_coherence.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-three_state_coherence.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-three_state_coherence.Tpo" -c -o QCADesigner-three_state_coherence.obj `if test -f 'three_state_coherence.c'; then $(CYGPATH_W) 'three_state_coherence.c'; else $(CYGPATH_W) '$(srcdir)/three_state_coherence.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-three_state_coherence.Tpo" "$(DEPDIR)/QCADesigner-three_state_coherence.Po"; else rm -f "$(DEPDIR)/QCADesigner-three_state_coherence.Tpo"; exit 1; fi
#	source='three_state_coherence.c' object='QCADesigner-three_state_coherence.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-three_state_coherence.obj `if test -f 'three_state_coherence.c'; then $(CYGPATH_W) 'three_state_coherence.c'; else $(CYGPATH_W) '$(srcdir)/three_state_coherence.c'; fi`

QCADesigner-matrixlib_3x3.o: matrixlib_3x3.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-matrixlib_3x3.o -MD -MP -MF "$(DEPDIR)/QCADesigner-matrixlib_3x3.Tpo" -c -o QCADesigner-matrixlib_3x3.o `test -f 'matrixlib_3x3.c' || echo '$(srcdir)/'`matrixlib_3x3.c; \
	then mv -f "$(DEPDIR)/QCADesigner-matrixlib_3x3.Tpo" "$(DEPDIR)/QCADesigner-matrixlib_3x3.Po"; else rm -f "$(DEPDIR)/QCADesigner-matrixlib_3x3.Tpo"; exit 1; fi
#	source='matrixlib_3x3.c' object='QCADesigner-matrixlib_3x3.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-matrixlib_3x3.o `test -f 'matrixlib_3x3.c' || echo '$(srcdir)/'`matrixlib_3x3.c

QCADesigner-matrixlib_3x3.obj: matrixlib_3x3.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-matrixlib_3x3.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-matrixlib_3x3.Tpo" -c -o QCADesigner-matrixlib_3x3.obj `if test -f 'matrixlib_3x3.c'; then $(CYGPATH_W) 'matrixlib_3x3.c'; else $(CYGPATH_W) '$(srcdir)/matrixlib_3x3.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-matrixlib_3x3.Tpo" "$(DEPDIR)/QCADesigner-matrixlib_3x3.Po"; else rm -f "$(DEPDIR)/QCADesigner-matrixlib_3x3.Tpo"; exit 1; fi
#	source='matrixlib_3x3.c' object='QCADesigner-matrixlib_3x3.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-matrixlib_3x3.obj `if test -f 'matrixlib_3x3.c'; then $(CYGPATH_W) 'matrixlib_3x3.c'; else $(CYGPATH_W) '$(srcdir)/matrixlib_3x3.c'; fi`

QCADesigner-fileio.o: fileio.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-fileio.o -MD -MP -MF "$(DEPDIR)/QCADesigner-fileio.Tpo" -c -o QCADesigner-fileio.o `test -f 'fileio.c' || echo '$(srcdir)/'`fileio.c; \
	then mv -f "$(DEPDIR)/QCADesigner-fileio.Tpo" "$(DEPDIR)/QCADesigner-fileio.Po"; else rm -f "$(DEPDIR)/QCADesigner-fileio.Tpo"; exit 1; fi
#	source='fileio.c' object='QCADesigner-fileio.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-fileio.o `test -f 'fileio.c' || echo '$(srcdir)/'`fileio.c

QCADesigner-fileio.obj: fileio.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-fileio.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-fileio.Tpo" -c -o QCADesigner-fileio.obj `if test -f 'fileio.c'; then $(CYGPATH_W) 'fileio.c'; else $(CYGPATH_W) '$(srcdir)/fileio.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-fileio.Tpo" "$(DEPDIR)/QCADesigner-fileio.Po"; else rm -f "$(DEPDIR)/QCADesigner-fileio.Tpo"; exit 1; fi
#	source='fileio.c' object='QCADesigner-fileio.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-fileio.obj `if test -f 'fileio.c'; then $(CYGPATH_W) 'fileio.c'; else $(CYGPATH_W) '$(srcdir)/fileio.c'; fi`

QCADesigner-preamble.o: preamble.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-preamble.o -MD -MP -MF "$(DEPDIR)/QCADesigner-preamble.Tpo" -c -o QCADesigner-preamble.o `test -f 'preamble.c' || echo '$(srcdir)/'`preamble.c; \
	then mv -f "$(DEPDIR)/QCADesigner-preamble.Tpo" "$(DEPDIR)/QCADesigner-preamble.Po"; else rm -f "$(DEPDIR)/QCADesigner-preamble.Tpo"; exit 1; fi
#	source='preamble.c' object='QCADesigner-preamble.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-preamble.o `test -f 'preamble.c' || echo '$(srcdir)/'`preamble.c

QCADesigner-preamble.obj: preamble.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-preamble.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-preamble.Tpo" -c -o QCADesigner-preamble.obj `if test -f 'preamble.c'; then $(CYGPATH_W) 'preamble.c'; else $(CYGPATH_W) '$(srcdir)/preamble.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-preamble.Tpo" "$(DEPDIR)/QCADesigner-preamble.Po"; else rm -f "$(DEPDIR)/QCADesigner-preamble.Tpo"; exit 1; fi
#	source='preamble.c' object='QCADesigner-preamble.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-preamble.obj `if test -f 'preamble.c'; then $(CYGPATH_W) 'preamble.c'; else $(CYGPATH_W) '$(srcdir)/preamble.c'; fi`

QCADesigner-support.o: support.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-support.o -MD -MP -MF "$(DEPDIR)/QCADesigner-support.Tpo" -c -o QCADesigner-support.o `test -f 'support.c' || echo '$(srcdir)/'`support.c; \
	then mv -f "$(DEPDIR)/QCADesigner-support.Tpo" "$(DEPDIR)/QCADesigner-support.Po"; else rm -f "$(DEPDIR)/QCADesigner-support.Tpo"; exit 1; fi
#	source='support.c' object='QCADesigner-support.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-support.o `test -f 'support.c' || echo '$(srcdir)/'`support.c

QCADesigner-support.obj: support.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-support.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-support.Tpo" -c -o QCADesigner-support.obj `if test -f 'support.c'; then $(CYGPATH_W) 'support.c'; else $(CYGPATH_W) '$(srcdir)/support.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-support.Tpo" "$(DEPDIR)/QCADesigner-support.Po"; else rm -f "$(DEPDIR)/QCADesigner-support.Tpo"; exit 1; fi
#	source='support.c' object='QCADesigner-support.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-support.obj `if test -f 'support.c'; then $(CYGPATH_W) 'support.c'; else $(CYGPATH_W) '$(srcdir)/support.c'; fi`

QCADesigner-graph_dialog.o: graph_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-graph_dialog.o -MD -MP -MF "$(DEPDIR)/QCADesigner-graph_dialog.Tpo" -c -o QCADesigner-graph_dialog.o `test -f 'graph_dialog.c' || echo '$(srcdir)/'`graph_dialog.c; \
	then mv -f "$(DEPDIR)/QCADesigner-graph_dialog.Tpo" "$(DEPDIR)/QCADesigner-graph_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-graph_dialog.Tpo"; exit 1; fi
#	source='graph_dialog.c' object='QCADesigner-graph_dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-graph_dialog.o `test -f 'graph_dialog.c' || echo '$(srcdir)/'`graph_dialog.c

QCADesigner-graph_dialog.obj: graph_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-graph_dialog.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-graph_dialog.Tpo" -c -o QCADesigner-graph_dialog.obj `if test -f 'graph_dialog.c'; then $(CYGPATH_W) 'graph_dialog.c'; else $(CYGPATH_W) '$(srcdir)/graph_dialog.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-graph_dialog.Tpo" "$(DEPDIR)/QCADesigner-graph_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-graph_dialog.Tpo"; exit 1; fi
#	source='graph_dialog.c' object='QCADesigner-graph_dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-graph_dialog.obj `if test -f 'graph_dialog.c'; then $(CYGPATH_W) 'graph_dialog.c'; else $(CYGPATH_W) '$(srcdir)/graph_dialog.c'; fi`

QCADesigner-graph_dialog_interface.o: graph_dialog_interface.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-graph_dialog_interface.o -MD -MP -MF "$(DEPDIR)/QCADesigner-graph_dialog_interface.Tpo" -c -o QCADesigner-graph_dialog_interface.o `test -f 'graph_dialog_interface.c' || echo '$(srcdir)/'`graph_dialog_interface.c; \
	then mv -f "$(DEPDIR)/QCADesigner-graph_dialog_interface.Tpo" "$(DEPDIR)/QCADesigner-graph_dialog_interface.Po"; else rm -f "$(DEPDIR)/QCADesigner-graph_dialog_interface.Tpo"; exit 1; fi
#	source='graph_dialog_interface.c' object='QCADesigner-graph_dialog_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-graph_dialog_interface.o `test -f 'graph_dialog_interface.c' || echo '$(srcdir)/'`graph_dialog_interface.c

QCADesigner-graph_dialog_interface.obj: graph_dialog_interface.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-graph_dialog_interface.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-graph_dialog_interface.Tpo" -c -o QCADesigner-graph_dialog_interface.obj `if test -f 'graph_dialog_interface.c'; then $(CYGPATH_W) 'graph_dialog_interface.c'; else $(CYGPATH_W) '$(srcdir)/graph_dialog_interface.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-graph_dialog_interface.Tpo" "$(DEPDIR)/QCADesigner-graph_dialog_interface.Po"; else rm -f "$(DEPDIR)/QCADesigner-graph_dialog_interface.Tpo"; exit 1; fi
#	source='graph_dialog_interface.c' object='QCADesigner-graph_dialog_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-graph_dialog_interface.obj `if test -f 'graph_dialog_interface.c'; then $(CYGPATH_W) 'graph_dialog_interface.c'; else $(CYGPATH_W) '$(srcdir)/graph_dialog_interface.c'; fi`

QCADesigner-graph_dialog_callbacks.o: graph_dialog_callbacks.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-graph_dialog_callbacks.o -MD -MP -MF "$(DEPDIR)/QCADesigner-graph_dialog_callbacks.Tpo" -c -o QCADesigner-graph_dialog_callbacks.o `test -f 'graph_dialog_callbacks.c' || echo '$(srcdir)/'`graph_dialog_callbacks.c; \
	then mv -f "$(DEPDIR)/QCADesigner-graph_dialog_callbacks.Tpo" "$(DEPDIR)/QCADesigner-graph_dialog_callbacks.Po"; else rm -f "$(DEPDIR)/QCADesigner-graph_dialog_callbacks.Tpo"; exit 1; fi
#	source='graph_dialog_callbacks.c' object='QCADesigner-graph_dialog_callbacks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-graph_dialog_callbacks.o `test -f 'graph_dialog_callbacks.c' || echo '$(srcdir)/'`graph_dialog_callbacks.c

QCADesigner-graph_dialog_callbacks.obj: graph_dialog_callbacks.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-graph_dialog_callbacks.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-graph_dialog_callbacks.Tpo" -c -o QCADesigner-graph_dialog_callbacks.obj `if test -f 'graph_dialog_callbacks.c'; then $(CYGPATH_W) 'graph_dialog_callbacks.c'; else $(CYGPATH_W) '$(srcdir)/graph_dialog_callbacks.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-graph_dialog_callbacks.Tpo" "$(DEPDIR)/QCADesigner-graph_dialog_callbacks.Po"; else rm -f "$(DEPDIR)/QCADesigner-graph_dialog_callbacks.Tpo"; exit 1; fi
#	source='graph_dialog_callbacks.c' object='QCADesigner-graph_dialog_callbacks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-graph_dialog_callbacks.obj `if test -f 'graph_dialog_callbacks.c'; then $(CYGPATH_W) 'graph_dialog_callbacks.c'; else $(CYGPATH_W) '$(srcdir)/graph_dialog_callbacks.c'; fi`

QCADesigner-graph_dialog_data.o: graph_dialog_data.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-graph_dialog_data.o -MD -MP -MF "$(DEPDIR)/QCADesigner-graph_dialog_data.Tpo" -c -o QCADesigner-graph_dialog_data.o `test -f 'graph_dialog_data.c' || echo '$(srcdir)/'`graph_dialog_data.c; \
	then mv -f "$(DEPDIR)/QCADesigner-graph_dialog_data.Tpo" "$(DEPDIR)/QCADesigner-graph_dialog_data.Po"; else rm -f "$(DEPDIR)/QCADesigner-graph_dialog_data.Tpo"; exit 1; fi
#	source='graph_dialog_data.c' object='QCADesigner-graph_dialog_data.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-graph_dialog_data.o `test -f 'graph_dialog_data.c' || echo '$(srcdir)/'`graph_dialog_data.c

QCADesigner-graph_dialog_data.obj: graph_dialog_data.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-graph_dialog_data.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-graph_dialog_data.Tpo" -c -o QCADesigner-graph_dialog_data.obj `if test -f 'graph_dialog_data.c'; then $(CYGPATH_W) 'graph_dialog_data.c'; else $(CYGPATH_W) '$(srcdir)/graph_dialog_data.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-graph_dialog_data.Tpo" "$(DEPDIR)/QCADesigner-graph_dialog_data.Po"; else rm -f "$(DEPDIR)/QCADesigner-graph_dialog_data.Tpo"; exit 1; fi
#	source='graph_dialog_data.c' object='QCADesigner-graph_dialog_data.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-graph_dialog_data.obj `if test -f 'graph_dialog_data.c'; then $(CYGPATH_W) 'graph_dialog_data.c'; else $(CYGPATH_W) '$(srcdir)/graph_dialog_data.c'; fi`

QCADesigner-waveform_interpretation_dialog.o: waveform_interpretation_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-waveform_interpretation_dialog.o -MD -MP -MF "$(DEPDIR)/QCADesigner-waveform_interpretation_dialog.Tpo" -c -o QCADesigner-waveform_interpretation_dialog.o `test -f 'waveform_interpretation_dialog.c' || echo '$(srcdir)/'`waveform_interpretation_dialog.c; \
	then mv -f "$(DEPDIR)/QCADesigner-waveform_interpretation_dialog.Tpo" "$(DEPDIR)/QCADesigner-waveform_interpretation_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-waveform_interpretation_dialog.Tpo"; exit 1; fi
#	source='waveform_interpretation_dialog.c' object='QCADesigner-waveform_interpretation_dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-waveform_interpretation_dialog.o `test -f 'waveform_interpretation_dialog.c' || echo '$(srcdir)/'`waveform_interpretation_dialog.c

QCADesigner-waveform_interpretation_dialog.obj: waveform_interpretation_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-waveform_interpretation_dialog.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-waveform_interpretation_dialog.Tpo" -c -o QCADesigner-waveform_interpretation_dialog.obj `if test -f 'waveform_interpretation_dialog.c'; then $(CYGPATH_W) 'waveform_interpretation_dialog.c'; else $(CYGPATH_W) '$(srcdir)/waveform_interpretation_dialog.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-waveform_interpretation_dialog.Tpo" "$(DEPDIR)/QCADesigner-waveform_interpretation_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-waveform_interpretation_dialog.Tpo"; exit 1; fi
#	source='waveform_interpretation_dialog.c' object='QCADesigner-waveform_interpretation_dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-waveform_interpretation_dialog.obj `if test -f 'waveform_interpretation_dialog.c'; then $(CYGPATH_W) 'waveform_interpretation_dialog.c'; else $(CYGPATH_W) '$(srcdir)/waveform_interpretation_dialog.c'; fi`

objects/QCADesigner-QCADParamSpecTypeList.o: objects/QCADParamSpecTypeList.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADParamSpecTypeList.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADParamSpecTypeList.Tpo" -c -o objects/QCADesigner-QCADParamSpecTypeList.o `test -f 'objects/QCADParamSpecTypeList.c' || echo '$(srcdir)/'`objects/QCADParamSpecTypeList.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADParamSpecTypeList.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADParamSpecTypeList.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADParamSpecTypeList.Tpo"; exit 1; fi
#	source='objects/QCADParamSpecTypeList.c' object='objects/QCADesigner-QCADParamSpecTypeList.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADParamSpecTypeList.o `test -f 'objects/QCADParamSpecTypeList.c' || echo '$(srcdir)/'`objects/QCADParamSpecTypeList.c

objects/QCADesigner-QCADParamSpecTypeList.obj: objects/QCADParamSpecTypeList.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADParamSpecTypeList.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADParamSpecTypeList.Tpo" -c -o objects/QCADesigner-QCADParamSpecTypeList.obj `if test -f 'objects/QCADParamSpecTypeList.c'; then $(CYGPATH_W) 'objects/QCADParamSpecTypeList.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADParamSpecTypeList.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADParamSpecTypeList.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADParamSpecTypeList.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADParamSpecTypeList.Tpo"; exit 1; fi
#	source='objects/QCADParamSpecTypeList.c' object='objects/QCADesigner-QCADParamSpecTypeList.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADParamSpecTypeList.obj `if test -f 'objects/QCADParamSpecTypeList.c'; then $(CYGPATH_W) 'objects/QCADParamSpecTypeList.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADParamSpecTypeList.c'; fi`

objects/QCADesigner-QCADPropertyUI.o: objects/QCADPropertyUI.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADPropertyUI.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADPropertyUI.Tpo" -c -o objects/QCADesigner-QCADPropertyUI.o `test -f 'objects/QCADPropertyUI.c' || echo '$(srcdir)/'`objects/QCADPropertyUI.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUI.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADPropertyUI.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUI.Tpo"; exit 1; fi
#	source='objects/QCADPropertyUI.c' object='objects/QCADesigner-QCADPropertyUI.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADPropertyUI.o `test -f 'objects/QCADPropertyUI.c' || echo '$(srcdir)/'`objects/QCADPropertyUI.c

objects/QCADesigner-QCADPropertyUI.obj: objects/QCADPropertyUI.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADPropertyUI.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADPropertyUI.Tpo" -c -o objects/QCADesigner-QCADPropertyUI.obj `if test -f 'objects/QCADPropertyUI.c'; then $(CYGPATH_W) 'objects/QCADPropertyUI.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADPropertyUI.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUI.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADPropertyUI.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUI.Tpo"; exit 1; fi
#	source='objects/QCADPropertyUI.c' object='objects/QCADesigner-QCADPropertyUI.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADPropertyUI.obj `if test -f 'objects/QCADPropertyUI.c'; then $(CYGPATH_W) 'objects/QCADPropertyUI.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADPropertyUI.c'; fi`

objects/QCADesigner-QCADPropertyUISingle.o: objects/QCADPropertyUISingle.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADPropertyUISingle.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADPropertyUISingle.Tpo" -c -o objects/QCADesigner-QCADPropertyUISingle.o `test -f 'objects/QCADPropertyUISingle.c' || echo '$(srcdir)/'`objects/QCADPropertyUISingle.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUISingle.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADPropertyUISingle.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUISingle.Tpo"; exit 1; fi
#	source='objects/QCADPropertyUISingle.c' object='objects/QCADesigner-QCADPropertyUISingle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADPropertyUISingle.o `test -f 'objects/QCADPropertyUISingle.c' || echo '$(srcdir)/'`objects/QCADPropertyUISingle.c

objects/QCADesigner-QCADPropertyUISingle.obj: objects/QCADPropertyUISingle.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADPropertyUISingle.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADPropertyUISingle.Tpo" -c -o objects/QCADesigner-QCADPropertyUISingle.obj `if test -f 'objects/QCADPropertyUISingle.c'; then $(CYGPATH_W) 'objects/QCADPropertyUISingle.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADPropertyUISingle.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUISingle.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADPropertyUISingle.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUISingle.Tpo"; exit 1; fi
#	source='objects/QCADPropertyUISingle.c' object='objects/QCADesigner-QCADPropertyUISingle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADPropertyUISingle.obj `if test -f 'objects/QCADPropertyUISingle.c'; then $(CYGPATH_W) 'objects/QCADPropertyUISingle.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADPropertyUISingle.c'; fi`

objects/QCADesigner-QCADPropertyUIDouble.o: objects/QCADPropertyUIDouble.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADPropertyUIDouble.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIDouble.Tpo" -c -o objects/QCADesigner-QCADPropertyUIDouble.o `test -f 'objects/QCADPropertyUIDouble.c' || echo '$(srcdir)/'`objects/QCADPropertyUIDouble.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIDouble.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIDouble.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIDouble.Tpo"; exit 1; fi
#	source='objects/QCADPropertyUIDouble.c' object='objects/QCADesigner-QCADPropertyUIDouble.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADPropertyUIDouble.o `test -f 'objects/QCADPropertyUIDouble.c' || echo '$(srcdir)/'`objects/QCADPropertyUIDouble.c

objects/QCADesigner-QCADPropertyUIDouble.obj: objects/QCADPropertyUIDouble.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADPropertyUIDouble.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIDouble.Tpo" -c -o objects/QCADesigner-QCADPropertyUIDouble.obj `if test -f 'objects/QCADPropertyUIDouble.c'; then $(CYGPATH_W) 'objects/QCADPropertyUIDouble.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADPropertyUIDouble.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIDouble.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIDouble.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIDouble.Tpo"; exit 1; fi
#	source='objects/QCADPropertyUIDouble.c' object='objects/QCADesigner-QCADPropertyUIDouble.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADPropertyUIDouble.obj `if test -f 'objects/QCADPropertyUIDouble.c'; then $(CYGPATH_W) 'objects/QCADPropertyUIDouble.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADPropertyUIDouble.c'; fi`

objects/QCADesigner-QCADPropertyUINumeric.o: objects/QCADPropertyUINumeric.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADPropertyUINumeric.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADPropertyUINumeric.Tpo" -c -o objects/QCADesigner-QCADPropertyUINumeric.o `test -f 'objects/QCADPropertyUINumeric.c' || echo '$(srcdir)/'`objects/QCADPropertyUINumeric.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUINumeric.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADPropertyUINumeric.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUINumeric.Tpo"; exit 1; fi
#	source='objects/QCADPropertyUINumeric.c' object='objects/QCADesigner-QCADPropertyUINumeric.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADPropertyUINumeric.o `test -f 'objects/QCADPropertyUINumeric.c' || echo '$(srcdir)/'`objects/QCADPropertyUINumeric.c

objects/QCADesigner-QCADPropertyUINumeric.obj: objects/QCADPropertyUINumeric.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADPropertyUINumeric.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADPropertyUINumeric.Tpo" -c -o objects/QCADesigner-QCADPropertyUINumeric.obj `if test -f 'objects/QCADPropertyUINumeric.c'; then $(CYGPATH_W) 'objects/QCADPropertyUINumeric.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADPropertyUINumeric.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUINumeric.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADPropertyUINumeric.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUINumeric.Tpo"; exit 1; fi
#	source='objects/QCADPropertyUINumeric.c' object='objects/QCADesigner-QCADPropertyUINumeric.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADPropertyUINumeric.obj `if test -f 'objects/QCADPropertyUINumeric.c'; then $(CYGPATH_W) 'objects/QCADPropertyUINumeric.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADPropertyUINumeric.c'; fi`

objects/QCADesigner-QCADPropertyUIInt.o: objects/QCADPropertyUIInt.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADPropertyUIInt.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIInt.Tpo" -c -o objects/QCADesigner-QCADPropertyUIInt.o `test -f 'objects/QCADPropertyUIInt.c' || echo '$(srcdir)/'`objects/QCADPropertyUIInt.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIInt.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIInt.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIInt.Tpo"; exit 1; fi
#	source='objects/QCADPropertyUIInt.c' object='objects/QCADesigner-QCADPropertyUIInt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADPropertyUIInt.o `test -f 'objects/QCADPropertyUIInt.c' || echo '$(srcdir)/'`objects/QCADPropertyUIInt.c

objects/QCADesigner-QCADPropertyUIInt.obj: objects/QCADPropertyUIInt.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADPropertyUIInt.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIInt.Tpo" -c -o objects/QCADesigner-QCADPropertyUIInt.obj `if test -f 'objects/QCADPropertyUIInt.c'; then $(CYGPATH_W) 'objects/QCADPropertyUIInt.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADPropertyUIInt.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIInt.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIInt.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIInt.Tpo"; exit 1; fi
#	source='objects/QCADPropertyUIInt.c' object='objects/QCADesigner-QCADPropertyUIInt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADPropertyUIInt.obj `if test -f 'objects/QCADPropertyUIInt.c'; then $(CYGPATH_W) 'objects/QCADPropertyUIInt.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADPropertyUIInt.c'; fi`

objects/QCADesigner-QCADPropertyUIGroup.o: objects/QCADPropertyUIGroup.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADPropertyUIGroup.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIGroup.Tpo" -c -o objects/QCADesigner-QCADPropertyUIGroup.o `test -f 'objects/QCADPropertyUIGroup.c' || echo '$(srcdir)/'`objects/QCADPropertyUIGroup.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIGroup.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIGroup.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIGroup.Tpo"; exit 1; fi
#	source='objects/QCADPropertyUIGroup.c' object='objects/QCADesigner-QCADPropertyUIGroup.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADPropertyUIGroup.o `test -f 'objects/QCADPropertyUIGroup.c' || echo '$(srcdir)/'`objects/QCADPropertyUIGroup.c

objects/QCADesigner-QCADPropertyUIGroup.obj: objects/QCADPropertyUIGroup.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADPropertyUIGroup.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIGroup.Tpo" -c -o objects/QCADesigner-QCADPropertyUIGroup.obj `if test -f 'objects/QCADPropertyUIGroup.c'; then $(CYGPATH_W) 'objects/QCADPropertyUIGroup.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADPropertyUIGroup.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIGroup.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIGroup.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIGroup.Tpo"; exit 1; fi
#	source='objects/QCADPropertyUIGroup.c' object='objects/QCADesigner-QCADPropertyUIGroup.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADPropertyUIGroup.obj `if test -f 'objects/QCADPropertyUIGroup.c'; then $(CYGPATH_W) 'objects/QCADPropertyUIGroup.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADPropertyUIGroup.c'; fi`

objects/QCADesigner-QCADPropertyUIEnum.o: objects/QCADPropertyUIEnum.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADPropertyUIEnum.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIEnum.Tpo" -c -o objects/QCADesigner-QCADPropertyUIEnum.o `test -f 'objects/QCADPropertyUIEnum.c' || echo '$(srcdir)/'`objects/QCADPropertyUIEnum.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIEnum.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIEnum.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIEnum.Tpo"; exit 1; fi
#	source='objects/QCADPropertyUIEnum.c' object='objects/QCADesigner-QCADPropertyUIEnum.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADPropertyUIEnum.o `test -f 'objects/QCADPropertyUIEnum.c' || echo '$(srcdir)/'`objects/QCADPropertyUIEnum.c

objects/QCADesigner-QCADPropertyUIEnum.obj: objects/QCADPropertyUIEnum.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADPropertyUIEnum.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIEnum.Tpo" -c -o objects/QCADesigner-QCADPropertyUIEnum.obj `if test -f 'objects/QCADPropertyUIEnum.c'; then $(CYGPATH_W) 'objects/QCADPropertyUIEnum.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADPropertyUIEnum.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIEnum.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIEnum.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIEnum.Tpo"; exit 1; fi
#	source='objects/QCADPropertyUIEnum.c' object='objects/QCADesigner-QCADPropertyUIEnum.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADPropertyUIEnum.obj `if test -f 'objects/QCADPropertyUIEnum.c'; then $(CYGPATH_W) 'objects/QCADPropertyUIEnum.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADPropertyUIEnum.c'; fi`

objects/QCADesigner-QCADPropertyUIText.o: objects/QCADPropertyUIText.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADPropertyUIText.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIText.Tpo" -c -o objects/QCADesigner-QCADPropertyUIText.o `test -f 'objects/QCADPropertyUIText.c' || echo '$(srcdir)/'`objects/QCADPropertyUIText.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIText.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIText.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIText.Tpo"; exit 1; fi
#	source='objects/QCADPropertyUIText.c' object='objects/QCADesigner-QCADPropertyUIText.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADPropertyUIText.o `test -f 'objects/QCADPropertyUIText.c' || echo '$(srcdir)/'`objects/QCADPropertyUIText.c

objects/QCADesigner-QCADPropertyUIText.obj: objects/QCADPropertyUIText.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADPropertyUIText.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIText.Tpo" -c -o objects/QCADesigner-QCADPropertyUIText.obj `if test -f 'objects/QCADPropertyUIText.c'; then $(CYGPATH_W) 'objects/QCADPropertyUIText.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADPropertyUIText.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIText.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIText.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIText.Tpo"; exit 1; fi
#	source='objects/QCADPropertyUIText.c' object='objects/QCADesigner-QCADPropertyUIText.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADPropertyUIText.obj `if test -f 'objects/QCADPropertyUIText.c'; then $(CYGPATH_W) 'objects/QCADPropertyUIText.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADPropertyUIText.c'; fi`

objects/QCADesigner-QCADPropertyUIObjectList.o: objects/QCADPropertyUIObjectList.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADPropertyUIObjectList.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIObjectList.Tpo" -c -o objects/QCADesigner-QCADPropertyUIObjectList.o `test -f 'objects/QCADPropertyUIObjectList.c' || echo '$(srcdir)/'`objects/QCADPropertyUIObjectList.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIObjectList.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIObjectList.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIObjectList.Tpo"; exit 1; fi
#	source='objects/QCADPropertyUIObjectList.c' object='objects/QCADesigner-QCADPropertyUIObjectList.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADPropertyUIObjectList.o `test -f 'objects/QCADPropertyUIObjectList.c' || echo '$(srcdir)/'`objects/QCADPropertyUIObjectList.c

objects/QCADesigner-QCADPropertyUIObjectList.obj: objects/QCADPropertyUIObjectList.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADPropertyUIObjectList.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIObjectList.Tpo" -c -o objects/QCADesigner-QCADPropertyUIObjectList.obj `if test -f 'objects/QCADPropertyUIObjectList.c'; then $(CYGPATH_W) 'objects/QCADPropertyUIObjectList.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADPropertyUIObjectList.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIObjectList.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIObjectList.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIObjectList.Tpo"; exit 1; fi
#	source='objects/QCADPropertyUIObjectList.c' object='objects/QCADesigner-QCADPropertyUIObjectList.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADPropertyUIObjectList.obj `if test -f 'objects/QCADPropertyUIObjectList.c'; then $(CYGPATH_W) 'objects/QCADPropertyUIObjectList.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADPropertyUIObjectList.c'; fi`

objects/QCADesigner-QCADPropertyUIBoolean.o: objects/QCADPropertyUIBoolean.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADPropertyUIBoolean.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIBoolean.Tpo" -c -o objects/QCADesigner-QCADPropertyUIBoolean.o `test -f 'objects/QCADPropertyUIBoolean.c' || echo '$(srcdir)/'`objects/QCADPropertyUIBoolean.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIBoolean.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIBoolean.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIBoolean.Tpo"; exit 1; fi
#	source='objects/QCADPropertyUIBoolean.c' object='objects/QCADesigner-QCADPropertyUIBoolean.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADPropertyUIBoolean.o `test -f 'objects/QCADPropertyUIBoolean.c' || echo '$(srcdir)/'`objects/QCADPropertyUIBoolean.c

objects/QCADesigner-QCADPropertyUIBoolean.obj: objects/QCADPropertyUIBoolean.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADPropertyUIBoolean.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIBoolean.Tpo" -c -o objects/QCADesigner-QCADPropertyUIBoolean.obj `if test -f 'objects/QCADPropertyUIBoolean.c'; then $(CYGPATH_W) 'objects/QCADPropertyUIBoolean.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADPropertyUIBoolean.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIBoolean.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIBoolean.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADPropertyUIBoolean.Tpo"; exit 1; fi
#	source='objects/QCADPropertyUIBoolean.c' object='objects/QCADesigner-QCADPropertyUIBoolean.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADPropertyUIBoolean.obj `if test -f 'objects/QCADPropertyUIBoolean.c'; then $(CYGPATH_W) 'objects/QCADPropertyUIBoolean.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADPropertyUIBoolean.c'; fi`

objects/QCADesigner-QCADUndoEntry.o: objects/QCADUndoEntry.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADUndoEntry.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADUndoEntry.Tpo" -c -o objects/QCADesigner-QCADUndoEntry.o `test -f 'objects/QCADUndoEntry.c' || echo '$(srcdir)/'`objects/QCADUndoEntry.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADUndoEntry.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADUndoEntry.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADUndoEntry.Tpo"; exit 1; fi
#	source='objects/QCADUndoEntry.c' object='objects/QCADesigner-QCADUndoEntry.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADUndoEntry.o `test -f 'objects/QCADUndoEntry.c' || echo '$(srcdir)/'`objects/QCADUndoEntry.c

objects/QCADesigner-QCADUndoEntry.obj: objects/QCADUndoEntry.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADUndoEntry.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADUndoEntry.Tpo" -c -o objects/QCADesigner-QCADUndoEntry.obj `if test -f 'objects/QCADUndoEntry.c'; then $(CYGPATH_W) 'objects/QCADUndoEntry.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADUndoEntry.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADUndoEntry.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADUndoEntry.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADUndoEntry.Tpo"; exit 1; fi
#	source='objects/QCADUndoEntry.c' object='objects/QCADesigner-QCADUndoEntry.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADUndoEntry.obj `if test -f 'objects/QCADUndoEntry.c'; then $(CYGPATH_W) 'objects/QCADUndoEntry.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADUndoEntry.c'; fi`

objects/QCADesigner-QCADUndoEntryGroup.o: objects/QCADUndoEntryGroup.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADUndoEntryGroup.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADUndoEntryGroup.Tpo" -c -o objects/QCADesigner-QCADUndoEntryGroup.o `test -f 'objects/QCADUndoEntryGroup.c' || echo '$(srcdir)/'`objects/QCADUndoEntryGroup.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADUndoEntryGroup.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADUndoEntryGroup.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADUndoEntryGroup.Tpo"; exit 1; fi
#	source='objects/QCADUndoEntryGroup.c' object='objects/QCADesigner-QCADUndoEntryGroup.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADUndoEntryGroup.o `test -f 'objects/QCADUndoEntryGroup.c' || echo '$(srcdir)/'`objects/QCADUndoEntryGroup.c

objects/QCADesigner-QCADUndoEntryGroup.obj: objects/QCADUndoEntryGroup.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADUndoEntryGroup.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADUndoEntryGroup.Tpo" -c -o objects/QCADesigner-QCADUndoEntryGroup.obj `if test -f 'objects/QCADUndoEntryGroup.c'; then $(CYGPATH_W) 'objects/QCADUndoEntryGroup.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADUndoEntryGroup.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADUndoEntryGroup.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADUndoEntryGroup.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADUndoEntryGroup.Tpo"; exit 1; fi
#	source='objects/QCADUndoEntryGroup.c' object='objects/QCADesigner-QCADUndoEntryGroup.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADUndoEntryGroup.obj `if test -f 'objects/QCADUndoEntryGroup.c'; then $(CYGPATH_W) 'objects/QCADUndoEntryGroup.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADUndoEntryGroup.c'; fi`

objects/QCADesigner-QCADUndoEntryObjectState.o: objects/QCADUndoEntryObjectState.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADUndoEntryObjectState.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADUndoEntryObjectState.Tpo" -c -o objects/QCADesigner-QCADUndoEntryObjectState.o `test -f 'objects/QCADUndoEntryObjectState.c' || echo '$(srcdir)/'`objects/QCADUndoEntryObjectState.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADUndoEntryObjectState.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADUndoEntryObjectState.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADUndoEntryObjectState.Tpo"; exit 1; fi
#	source='objects/QCADUndoEntryObjectState.c' object='objects/QCADesigner-QCADUndoEntryObjectState.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADUndoEntryObjectState.o `test -f 'objects/QCADUndoEntryObjectState.c' || echo '$(srcdir)/'`objects/QCADUndoEntryObjectState.c

objects/QCADesigner-QCADUndoEntryObjectState.obj: objects/QCADUndoEntryObjectState.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADUndoEntryObjectState.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADUndoEntryObjectState.Tpo" -c -o objects/QCADesigner-QCADUndoEntryObjectState.obj `if test -f 'objects/QCADUndoEntryObjectState.c'; then $(CYGPATH_W) 'objects/QCADUndoEntryObjectState.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADUndoEntryObjectState.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADUndoEntryObjectState.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADUndoEntryObjectState.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADUndoEntryObjectState.Tpo"; exit 1; fi
#	source='objects/QCADUndoEntryObjectState.c' object='objects/QCADesigner-QCADUndoEntryObjectState.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADUndoEntryObjectState.obj `if test -f 'objects/QCADUndoEntryObjectState.c'; then $(CYGPATH_W) 'objects/QCADUndoEntryObjectState.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADUndoEntryObjectState.c'; fi`

QCADesigner-selection_undo.o: selection_undo.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-selection_undo.o -MD -MP -MF "$(DEPDIR)/QCADesigner-selection_undo.Tpo" -c -o QCADesigner-selection_undo.o `test -f 'selection_undo.c' || echo '$(srcdir)/'`selection_undo.c; \
	then mv -f "$(DEPDIR)/QCADesigner-selection_undo.Tpo" "$(DEPDIR)/QCADesigner-selection_undo.Po"; else rm -f "$(DEPDIR)/QCADesigner-selection_undo.Tpo"; exit 1; fi
#	source='selection_undo.c' object='QCADesigner-selection_undo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-selection_undo.o `test -f 'selection_undo.c' || echo '$(srcdir)/'`selection_undo.c

QCADesigner-selection_undo.obj: selection_undo.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-selection_undo.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-selection_undo.Tpo" -c -o QCADesigner-selection_undo.obj `if test -f 'selection_undo.c'; then $(CYGPATH_W) 'selection_undo.c'; else $(CYGPATH_W) '$(srcdir)/selection_undo.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-selection_undo.Tpo" "$(DEPDIR)/QCADesigner-selection_undo.Po"; else rm -f "$(DEPDIR)/QCADesigner-selection_undo.Tpo"; exit 1; fi
#	source='selection_undo.c' object='QCADesigner-selection_undo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-selection_undo.obj `if test -f 'selection_undo.c'; then $(CYGPATH_W) 'selection_undo.c'; else $(CYGPATH_W) '$(srcdir)/selection_undo.c'; fi`

objects/QCADesigner-QCADComboBox.o: objects/QCADComboBox.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADComboBox.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADComboBox.Tpo" -c -o objects/QCADesigner-QCADComboBox.o `test -f 'objects/QCADComboBox.c' || echo '$(srcdir)/'`objects/QCADComboBox.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADComboBox.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADComboBox.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADComboBox.Tpo"; exit 1; fi
#	source='objects/QCADComboBox.c' object='objects/QCADesigner-QCADComboBox.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADComboBox.o `test -f 'objects/QCADComboBox.c' || echo '$(srcdir)/'`objects/QCADComboBox.c

objects/QCADesigner-QCADComboBox.obj: objects/QCADComboBox.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADComboBox.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADComboBox.Tpo" -c -o objects/QCADesigner-QCADComboBox.obj `if test -f 'objects/QCADComboBox.c'; then $(CYGPATH_W) 'objects/QCADComboBox.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADComboBox.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADComboBox.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADComboBox.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADComboBox.Tpo"; exit 1; fi
#	source='objects/QCADComboBox.c' object='objects/QCADesigner-QCADComboBox.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADComboBox.obj `if test -f 'objects/QCADComboBox.c'; then $(CYGPATH_W) 'objects/QCADComboBox.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADComboBox.c'; fi`

objects/QCADesigner-QCADToggleToolButton.o: objects/QCADToggleToolButton.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADToggleToolButton.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADToggleToolButton.Tpo" -c -o objects/QCADesigner-QCADToggleToolButton.o `test -f 'objects/QCADToggleToolButton.c' || echo '$(srcdir)/'`objects/QCADToggleToolButton.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADToggleToolButton.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADToggleToolButton.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADToggleToolButton.Tpo"; exit 1; fi
#	source='objects/QCADToggleToolButton.c' object='objects/QCADesigner-QCADToggleToolButton.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADToggleToolButton.o `test -f 'objects/QCADToggleToolButton.c' || echo '$(srcdir)/'`objects/QCADToggleToolButton.c

objects/QCADesigner-QCADToggleToolButton.obj: objects/QCADToggleToolButton.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADToggleToolButton.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADToggleToolButton.Tpo" -c -o objects/QCADesigner-QCADToggleToolButton.obj `if test -f 'objects/QCADToggleToolButton.c'; then $(CYGPATH_W) 'objects/QCADToggleToolButton.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADToggleToolButton.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADToggleToolButton.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADToggleToolButton.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADToggleToolButton.Tpo"; exit 1; fi
#	source='objects/QCADToggleToolButton.c' object='objects/QCADesigner-QCADToggleToolButton.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADToggleToolButton.obj `if test -f 'objects/QCADToggleToolButton.c'; then $(CYGPATH_W) 'objects/QCADToggleToolButton.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADToggleToolButton.c'; fi`

objects/QCADesigner-QCADRadioToolButton.o: objects/QCADRadioToolButton.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADRadioToolButton.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADRadioToolButton.Tpo" -c -o objects/QCADesigner-QCADRadioToolButton.o `test -f 'objects/QCADRadioToolButton.c' || echo '$(srcdir)/'`objects/QCADRadioToolButton.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADRadioToolButton.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADRadioToolButton.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADRadioToolButton.Tpo"; exit 1; fi
#	source='objects/QCADRadioToolButton.c' object='objects/QCADesigner-QCADRadioToolButton.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADRadioToolButton.o `test -f 'objects/QCADRadioToolButton.c' || echo '$(srcdir)/'`objects/QCADRadioToolButton.c

objects/QCADesigner-QCADRadioToolButton.obj: objects/QCADRadioToolButton.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADRadioToolButton.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADRadioToolButton.Tpo" -c -o objects/QCADesigner-QCADRadioToolButton.obj `if test -f 'objects/QCADRadioToolButton.c'; then $(CYGPATH_W) 'objects/QCADRadioToolButton.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADRadioToolButton.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADRadioToolButton.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADRadioToolButton.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADRadioToolButton.Tpo"; exit 1; fi
#	source='objects/QCADRadioToolButton.c' object='objects/QCADesigner-QCADRadioToolButton.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADRadioToolButton.obj `if test -f 'objects/QCADRadioToolButton.c'; then $(CYGPATH_W) 'objects/QCADRadioToolButton.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADRadioToolButton.c'; fi`

objects/QCADesigner-QCADRadioButton.o: objects/QCADRadioButton.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADRadioButton.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADRadioButton.Tpo" -c -o objects/QCADesigner-QCADRadioButton.o `test -f 'objects/QCADRadioButton.c' || echo '$(srcdir)/'`objects/QCADRadioButton.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADRadioButton.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADRadioButton.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADRadioButton.Tpo"; exit 1; fi
#	source='objects/QCADRadioButton.c' object='objects/QCADesigner-QCADRadioButton.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADRadioButton.o `test -f 'objects/QCADRadioButton.c' || echo '$(srcdir)/'`objects/QCADRadioButton.c

objects/QCADesigner-QCADRadioButton.obj: objects/QCADRadioButton.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADRadioButton.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADRadioButton.Tpo" -c -o objects/QCADesigner-QCADRadioButton.obj `if test -f 'objects/QCADRadioButton.c'; then $(CYGPATH_W) 'objects/QCADRadioButton.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADRadioButton.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADRadioButton.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADRadioButton.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADRadioButton.Tpo"; exit 1; fi
#	source='objects/QCADRadioButton.c' object='objects/QCADesigner-QCADRadioButton.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADRadioButton.obj `if test -f 'objects/QCADRadioButton.c'; then $(CYGPATH_W) 'objects/QCADRadioButton.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADRadioButton.c'; fi`

QCADesigner-bistable_properties_dialog.o: bistable_properties_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-bistable_properties_dialog.o -MD -MP -MF "$(DEPDIR)/QCADesigner-bistable_properties_dialog.Tpo" -c -o QCADesigner-bistable_properties_dialog.o `test -f 'bistable_properties_dialog.c' || echo '$(srcdir)/'`bistable_properties_dialog.c; \
	then mv -f "$(DEPDIR)/QCADesigner-bistable_properties_dialog.Tpo" "$(DEPDIR)/QCADesigner-bistable_properties_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-bistable_properties_dialog.Tpo"; exit 1; fi
#	source='bistable_properties_dialog.c' object='QCADesigner-bistable_properties_dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-bistable_properties_dialog.o `test -f 'bistable_properties_dialog.c' || echo '$(srcdir)/'`bistable_properties_dialog.c

QCADesigner-bistable_properties_dialog.obj: bistable_properties_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-bistable_properties_dialog.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-bistable_properties_dialog.Tpo" -c -o QCADesigner-bistable_properties_dialog.obj `if test -f 'bistable_properties_dialog.c'; then $(CYGPATH_W) 'bistable_properties_dialog.c'; else $(CYGPATH_W) '$(srcdir)/bistable_properties_dialog.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-bistable_properties_dialog.Tpo" "$(DEPDIR)/QCADesigner-bistable_properties_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-bistable_properties_dialog.Tpo"; exit 1; fi
#	source='bistable_properties_dialog.c' object='QCADesigner-bistable_properties_dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-bistable_properties_dialog.obj `if test -f 'bistable_properties_dialog.c'; then $(CYGPATH_W) 'bistable_properties_dialog.c'; else $(CYGPATH_W) '$(srcdir)/bistable_properties_dialog.c'; fi`

QCADesigner-semi_coherent_properties_dialog.o: semi_coherent_properties_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-semi_coherent_properties_dialog.o -MD -MP -MF "$(DEPDIR)/QCADesigner-semi_coherent_properties_dialog.Tpo" -c -o QCADesigner-semi_coherent_properties_dialog.o `test -f 'semi_coherent_properties_dialog.c' || echo '$(srcdir)/'`semi_coherent_properties_dialog.c; \
	then mv -f "$(DEPDIR)/QCADesigner-semi_coherent_properties_dialog.Tpo" "$(DEPDIR)/QCADesigner-semi_coherent_properties_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-semi_coherent_properties_dialog.Tpo"; exit 1; fi
#	source='semi_coherent_properties_dialog.c' object='QCADesigner-semi_coherent_properties_dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-semi_coherent_properties_dialog.o `test -f 'semi_coherent_properties_dialog.c' || echo '$(srcdir)/'`semi_coherent_properties_dialog.c

QCADesigner-semi_coherent_properties_dialog.obj: semi_coherent_properties_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-semi_coherent_properties_dialog.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-semi_coherent_properties_dialog.Tpo" -c -o QCADesigner-semi_coherent_properties_dialog.obj `if test -f 'semi_coherent_properties_dialog.c'; then $(CYGPATH_W) 'semi_coherent_properties_dialog.c'; else $(CYGPATH_W) '$(srcdir)/semi_coherent_properties_dialog.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-semi_coherent_properties_dialog.Tpo" "$(DEPDIR)/QCADesigner-semi_coherent_properties_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-semi_coherent_properties_dialog.Tpo"; exit 1; fi
#	source='semi_coherent_properties_dialog.c' object='QCADesigner-semi_coherent_properties_dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-semi_coherent_properties_dialog.obj `if test -f 'semi_coherent_properties_dialog.c'; then $(CYGPATH_W) 'semi_coherent_properties_dialog.c'; else $(CYGPATH_W) '$(srcdir)/semi_coherent_properties_dialog.c'; fi`

QCADesigner-ts_fc_properties_dialog.o: ts_fc_properties_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-ts_fc_properties_dialog.o -MD -MP -MF "$(DEPDIR)/QCADesigner-ts_fc_properties_dialog.Tpo" -c -o QCADesigner-ts_fc_properties_dialog.o `test -f 'ts_fc_properties_dialog.c' || echo '$(srcdir)/'`ts_fc_properties_dialog.c; \
	then mv -f "$(DEPDIR)/QCADesigner-ts_fc_properties_dialog.Tpo" "$(DEPDIR)/QCADesigner-ts_fc_properties_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-ts_fc_properties_dialog.Tpo"; exit 1; fi
#	source='ts_fc_properties_dialog.c' object='QCADesigner-ts_fc_properties_dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-ts_fc_properties_dialog.o `test -f 'ts_fc_properties_dialog.c' || echo '$(srcdir)/'`ts_fc_properties_dialog.c

QCADesigner-ts_fc_properties_dialog.obj: ts_fc_properties_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-ts_fc_properties_dialog.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-ts_fc_properties_dialog.Tpo" -c -o QCADesigner-ts_fc_properties_dialog.obj `if test -f 'ts_fc_properties_dialog.c'; then $(CYGPATH_W) 'ts_fc_properties_dialog.c'; else $(CYGPATH_W) '$(srcdir)/ts_fc_properties_dialog.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-ts_fc_properties_dialog.Tpo" "$(DEPDIR)/QCADesigner-ts_fc_properties_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-ts_fc_properties_dialog.Tpo"; exit 1; fi
#	source='ts_fc_properties_dialog.c' object='QCADesigner-ts_fc_properties_dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-ts_fc_properties_dialog.obj `if test -f 'ts_fc_properties_dialog.c'; then $(CYGPATH_W) 'ts_fc_properties_dialog.c'; else $(CYGPATH_W) '$(srcdir)/ts_fc_properties_dialog.c'; fi`


QCADesigner-coherence_vector_properties_dialog.o: coherence_vector_properties_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-coherence_vector_properties_dialog.o -MD -MP -MF "$(DEPDIR)/QCADesigner-coherence_vector_properties_dialog.Tpo" -c -o QCADesigner-coherence_vector_properties_dialog.o `test -f 'coherence_vector_properties_dialog.c' || echo '$(srcdir)/'`coherence_vector_properties_dialog.c; \
	then mv -f "$(DEPDIR)/QCADesigner-coherence_vector_properties_dialog.Tpo" "$(DEPDIR)/QCADesigner-coherence_vector_properties_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-coherence_vector_properties_dialog.Tpo"; exit 1; fi
#	source='coherence_vector_properties_dialog.c' object='QCADesigner-coherence_vector_properties_dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-coherence_vector_properties_dialog.o `test -f 'coherence_vector_properties_dialog.c' || echo '$(srcdir)/'`coherence_vector_properties_dialog.c

QCADesigner-coherence_vector_properties_dialog.obj: coherence_vector_properties_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-coherence_vector_properties_dialog.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-coherence_vector_properties_dialog.Tpo" -c -o QCADesigner-coherence_vector_properties_dialog.obj `if test -f 'coherence_vector_properties_dialog.c'; then $(CYGPATH_W) 'coherence_vector_properties_dialog.c'; else $(CYGPATH_W) '$(srcdir)/coherence_vector_properties_dialog.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-coherence_vector_properties_dialog.Tpo" "$(DEPDIR)/QCADesigner-coherence_vector_properties_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-coherence_vector_properties_dialog.Tpo"; exit 1; fi
#	source='coherence_vector_properties_dialog.c' object='QCADesigner-coherence_vector_properties_dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-coherence_vector_properties_dialog.obj `if test -f 'coherence_vector_properties_dialog.c'; then $(CYGPATH_W) 'coherence_vector_properties_dialog.c'; else $(CYGPATH_W) '$(srcdir)/coherence_vector_properties_dialog.c'; fi`

QCADesigner-ts_coherence_vector_properties_dialog.o: ts_coherence_vector_properties_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-ts_coherence_vector_properties_dialog.o -MD -MP -MF "$(DEPDIR)/QCADesigner-ts_coherence_vector_properties_dialog.Tpo" -c -o QCADesigner-ts_coherence_vector_properties_dialog.o `test -f 'ts_coherence_vector_properties_dialog.c' || echo '$(srcdir)/'`ts_coherence_vector_properties_dialog.c; \
	then mv -f "$(DEPDIR)/QCADesigner-ts_coherence_vector_properties_dialog.Tpo" "$(DEPDIR)/QCADesigner-ts_coherence_vector_properties_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-ts_coherence_vector_properties_dialog.Tpo"; exit 1; fi
#	source='ts_coherence_vector_properties_dialog.c' object='QCADesigner-ts_coherence_vector_properties_dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-ts_coherence_vector_properties_dialog.o `test -f 'ts_coherence_vector_properties_dialog.c' || echo '$(srcdir)/'`ts_coherence_vector_properties_dialog.c

QCADesigner-ts_coherence_vector_properties_dialog.obj: ts_coherence_vector_properties_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-ts_coherence_vector_properties_dialog.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-ts_coherence_vector_properties_dialog.Tpo" -c -o QCADesigner-ts_coherence_vector_properties_dialog.obj `if test -f 'ts_coherence_vector_properties_dialog.c'; then $(CYGPATH_W) 'ts_coherence_vector_properties_dialog.c'; else $(CYGPATH_W) '$(srcdir)/ts_coherence_vector_properties_dialog.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-ts_coherence_vector_properties_dialog.Tpo" "$(DEPDIR)/QCADesigner-ts_coherence_vector_properties_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-ts_coherence_vector_properties_dialog.Tpo"; exit 1; fi
#	source='ts_coherence_vector_properties_dialog.c' object='QCADesigner-ts_coherence_vector_properties_dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-ts_coherence_vector_properties_dialog.obj `if test -f 'ts_coherence_vector_properties_dialog.c'; then $(CYGPATH_W) 'ts_coherence_vector_properties_dialog.c'; else $(CYGPATH_W) '$(srcdir)/ts_coherence_vector_properties_dialog.c'; fi`

QCADesigner-vector_table_options_dialog.o: vector_table_options_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-vector_table_options_dialog.o -MD -MP -MF "$(DEPDIR)/QCADesigner-vector_table_options_dialog.Tpo" -c -o QCADesigner-vector_table_options_dialog.o `test -f 'vector_table_options_dialog.c' || echo '$(srcdir)/'`vector_table_options_dialog.c; \
	then mv -f "$(DEPDIR)/QCADesigner-vector_table_options_dialog.Tpo" "$(DEPDIR)/QCADesigner-vector_table_options_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-vector_table_options_dialog.Tpo"; exit 1; fi
#	source='vector_table_options_dialog.c' object='QCADesigner-vector_table_options_dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-vector_table_options_dialog.o `test -f 'vector_table_options_dialog.c' || echo '$(srcdir)/'`vector_table_options_dialog.c

QCADesigner-vector_table_options_dialog.obj: vector_table_options_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-vector_table_options_dialog.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-vector_table_options_dialog.Tpo" -c -o QCADesigner-vector_table_options_dialog.obj `if test -f 'vector_table_options_dialog.c'; then $(CYGPATH_W) 'vector_table_options_dialog.c'; else $(CYGPATH_W) '$(srcdir)/vector_table_options_dialog.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-vector_table_options_dialog.Tpo" "$(DEPDIR)/QCADesigner-vector_table_options_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-vector_table_options_dialog.Tpo"; exit 1; fi
#	source='vector_table_options_dialog.c' object='QCADesigner-vector_table_options_dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-vector_table_options_dialog.obj `if test -f 'vector_table_options_dialog.c'; then $(CYGPATH_W) 'vector_table_options_dialog.c'; else $(CYGPATH_W) '$(srcdir)/vector_table_options_dialog.c'; fi`

QCADesigner-vector_table_options_dialog_interface.o: vector_table_options_dialog_interface.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-vector_table_options_dialog_interface.o -MD -MP -MF "$(DEPDIR)/QCADesigner-vector_table_options_dialog_interface.Tpo" -c -o QCADesigner-vector_table_options_dialog_interface.o `test -f 'vector_table_options_dialog_interface.c' || echo '$(srcdir)/'`vector_table_options_dialog_interface.c; \
	then mv -f "$(DEPDIR)/QCADesigner-vector_table_options_dialog_interface.Tpo" "$(DEPDIR)/QCADesigner-vector_table_options_dialog_interface.Po"; else rm -f "$(DEPDIR)/QCADesigner-vector_table_options_dialog_interface.Tpo"; exit 1; fi
#	source='vector_table_options_dialog_interface.c' object='QCADesigner-vector_table_options_dialog_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-vector_table_options_dialog_interface.o `test -f 'vector_table_options_dialog_interface.c' || echo '$(srcdir)/'`vector_table_options_dialog_interface.c

QCADesigner-vector_table_options_dialog_interface.obj: vector_table_options_dialog_interface.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-vector_table_options_dialog_interface.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-vector_table_options_dialog_interface.Tpo" -c -o QCADesigner-vector_table_options_dialog_interface.obj `if test -f 'vector_table_options_dialog_interface.c'; then $(CYGPATH_W) 'vector_table_options_dialog_interface.c'; else $(CYGPATH_W) '$(srcdir)/vector_table_options_dialog_interface.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-vector_table_options_dialog_interface.Tpo" "$(DEPDIR)/QCADesigner-vector_table_options_dialog_interface.Po"; else rm -f "$(DEPDIR)/QCADesigner-vector_table_options_dialog_interface.Tpo"; exit 1; fi
#	source='vector_table_options_dialog_interface.c' object='QCADesigner-vector_table_options_dialog_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-vector_table_options_dialog_interface.obj `if test -f 'vector_table_options_dialog_interface.c'; then $(CYGPATH_W) 'vector_table_options_dialog_interface.c'; else $(CYGPATH_W) '$(srcdir)/vector_table_options_dialog_interface.c'; fi`

QCADesigner-vector_table_options_dialog_callbacks.o: vector_table_options_dialog_callbacks.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-vector_table_options_dialog_callbacks.o -MD -MP -MF "$(DEPDIR)/QCADesigner-vector_table_options_dialog_callbacks.Tpo" -c -o QCADesigner-vector_table_options_dialog_callbacks.o `test -f 'vector_table_options_dialog_callbacks.c' || echo '$(srcdir)/'`vector_table_options_dialog_callbacks.c; \
	then mv -f "$(DEPDIR)/QCADesigner-vector_table_options_dialog_callbacks.Tpo" "$(DEPDIR)/QCADesigner-vector_table_options_dialog_callbacks.Po"; else rm -f "$(DEPDIR)/QCADesigner-vector_table_options_dialog_callbacks.Tpo"; exit 1; fi
#	source='vector_table_options_dialog_callbacks.c' object='QCADesigner-vector_table_options_dialog_callbacks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-vector_table_options_dialog_callbacks.o `test -f 'vector_table_options_dialog_callbacks.c' || echo '$(srcdir)/'`vector_table_options_dialog_callbacks.c

QCADesigner-vector_table_options_dialog_callbacks.obj: vector_table_options_dialog_callbacks.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-vector_table_options_dialog_callbacks.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-vector_table_options_dialog_callbacks.Tpo" -c -o QCADesigner-vector_table_options_dialog_callbacks.obj `if test -f 'vector_table_options_dialog_callbacks.c'; then $(CYGPATH_W) 'vector_table_options_dialog_callbacks.c'; else $(CYGPATH_W) '$(srcdir)/vector_table_options_dialog_callbacks.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-vector_table_options_dialog_callbacks.Tpo" "$(DEPDIR)/QCADesigner-vector_table_options_dialog_callbacks.Po"; else rm -f "$(DEPDIR)/QCADesigner-vector_table_options_dialog_callbacks.Tpo"; exit 1; fi
#	source='vector_table_options_dialog_callbacks.c' object='QCADesigner-vector_table_options_dialog_callbacks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-vector_table_options_dialog_callbacks.obj `if test -f 'vector_table_options_dialog_callbacks.c'; then $(CYGPATH_W) 'vector_table_options_dialog_callbacks.c'; else $(CYGPATH_W) '$(srcdir)/vector_table_options_dialog_callbacks.c'; fi`

QCADesigner-interface.o: interface.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-interface.o -MD -MP -MF "$(DEPDIR)/QCADesigner-interface.Tpo" -c -o QCADesigner-interface.o `test -f 'interface.c' || echo '$(srcdir)/'`interface.c; \
	then mv -f "$(DEPDIR)/QCADesigner-interface.Tpo" "$(DEPDIR)/QCADesigner-interface.Po"; else rm -f "$(DEPDIR)/QCADesigner-interface.Tpo"; exit 1; fi
#	source='interface.c' object='QCADesigner-interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-interface.o `test -f 'interface.c' || echo '$(srcdir)/'`interface.c

QCADesigner-interface.obj: interface.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-interface.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-interface.Tpo" -c -o QCADesigner-interface.obj `if test -f 'interface.c'; then $(CYGPATH_W) 'interface.c'; else $(CYGPATH_W) '$(srcdir)/interface.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-interface.Tpo" "$(DEPDIR)/QCADesigner-interface.Po"; else rm -f "$(DEPDIR)/QCADesigner-interface.Tpo"; exit 1; fi
#	source='interface.c' object='QCADesigner-interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-interface.obj `if test -f 'interface.c'; then $(CYGPATH_W) 'interface.c'; else $(CYGPATH_W) '$(srcdir)/interface.c'; fi`

QCADesigner-callbacks.o: callbacks.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-callbacks.o -MD -MP -MF "$(DEPDIR)/QCADesigner-callbacks.Tpo" -c -o QCADesigner-callbacks.o `test -f 'callbacks.c' || echo '$(srcdir)/'`callbacks.c; \
	then mv -f "$(DEPDIR)/QCADesigner-callbacks.Tpo" "$(DEPDIR)/QCADesigner-callbacks.Po"; else rm -f "$(DEPDIR)/QCADesigner-callbacks.Tpo"; exit 1; fi
#	source='callbacks.c' object='QCADesigner-callbacks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-callbacks.o `test -f 'callbacks.c' || echo '$(srcdir)/'`callbacks.c

QCADesigner-callbacks.obj: callbacks.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-callbacks.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-callbacks.Tpo" -c -o QCADesigner-callbacks.obj `if test -f 'callbacks.c'; then $(CYGPATH_W) 'callbacks.c'; else $(CYGPATH_W) '$(srcdir)/callbacks.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-callbacks.Tpo" "$(DEPDIR)/QCADesigner-callbacks.Po"; else rm -f "$(DEPDIR)/QCADesigner-callbacks.Tpo"; exit 1; fi
#	source='callbacks.c' object='QCADesigner-callbacks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-callbacks.obj `if test -f 'callbacks.c'; then $(CYGPATH_W) 'callbacks.c'; else $(CYGPATH_W) '$(srcdir)/callbacks.c'; fi`

actions/QCADesigner-array.o: actions/array.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT actions/QCADesigner-array.o -MD -MP -MF "actions/$(DEPDIR)/QCADesigner-array.Tpo" -c -o actions/QCADesigner-array.o `test -f 'actions/array.c' || echo '$(srcdir)/'`actions/array.c; \
	then mv -f "actions/$(DEPDIR)/QCADesigner-array.Tpo" "actions/$(DEPDIR)/QCADesigner-array.Po"; else rm -f "actions/$(DEPDIR)/QCADesigner-array.Tpo"; exit 1; fi
#	source='actions/array.c' object='actions/QCADesigner-array.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o actions/QCADesigner-array.o `test -f 'actions/array.c' || echo '$(srcdir)/'`actions/array.c

actions/QCADesigner-array.obj: actions/array.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT actions/QCADesigner-array.obj -MD -MP -MF "actions/$(DEPDIR)/QCADesigner-array.Tpo" -c -o actions/QCADesigner-array.obj `if test -f 'actions/array.c'; then $(CYGPATH_W) 'actions/array.c'; else $(CYGPATH_W) '$(srcdir)/actions/array.c'; fi`; \
	then mv -f "actions/$(DEPDIR)/QCADesigner-array.Tpo" "actions/$(DEPDIR)/QCADesigner-array.Po"; else rm -f "actions/$(DEPDIR)/QCADesigner-array.Tpo"; exit 1; fi
#	source='actions/array.c' object='actions/QCADesigner-array.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o actions/QCADesigner-array.obj `if test -f 'actions/array.c'; then $(CYGPATH_W) 'actions/array.c'; else $(CYGPATH_W) '$(srcdir)/actions/array.c'; fi`

actions/QCADesigner-rotate.o: actions/rotate.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT actions/QCADesigner-rotate.o -MD -MP -MF "actions/$(DEPDIR)/QCADesigner-rotate.Tpo" -c -o actions/QCADesigner-rotate.o `test -f 'actions/rotate.c' || echo '$(srcdir)/'`actions/rotate.c; \
	then mv -f "actions/$(DEPDIR)/QCADesigner-rotate.Tpo" "actions/$(DEPDIR)/QCADesigner-rotate.Po"; else rm -f "actions/$(DEPDIR)/QCADesigner-rotate.Tpo"; exit 1; fi
#	source='actions/rotate.c' object='actions/QCADesigner-rotate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o actions/QCADesigner-rotate.o `test -f 'actions/rotate.c' || echo '$(srcdir)/'`actions/rotate.c

actions/QCADesigner-rotate.obj: actions/rotate.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT actions/QCADesigner-rotate.obj -MD -MP -MF "actions/$(DEPDIR)/QCADesigner-rotate.Tpo" -c -o actions/QCADesigner-rotate.obj `if test -f 'actions/rotate.c'; then $(CYGPATH_W) 'actions/rotate.c'; else $(CYGPATH_W) '$(srcdir)/actions/rotate.c'; fi`; \
	then mv -f "actions/$(DEPDIR)/QCADesigner-rotate.Tpo" "actions/$(DEPDIR)/QCADesigner-rotate.Po"; else rm -f "actions/$(DEPDIR)/QCADesigner-rotate.Tpo"; exit 1; fi
#	source='actions/rotate.c' object='actions/QCADesigner-rotate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o actions/QCADesigner-rotate.obj `if test -f 'actions/rotate.c'; then $(CYGPATH_W) 'actions/rotate.c'; else $(CYGPATH_W) '$(srcdir)/actions/rotate.c'; fi`

actions/QCADesigner-select.o: actions/select.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT actions/QCADesigner-select.o -MD -MP -MF "actions/$(DEPDIR)/QCADesigner-select.Tpo" -c -o actions/QCADesigner-select.o `test -f 'actions/select.c' || echo '$(srcdir)/'`actions/select.c; \
	then mv -f "actions/$(DEPDIR)/QCADesigner-select.Tpo" "actions/$(DEPDIR)/QCADesigner-select.Po"; else rm -f "actions/$(DEPDIR)/QCADesigner-select.Tpo"; exit 1; fi
#	source='actions/select.c' object='actions/QCADesigner-select.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o actions/QCADesigner-select.o `test -f 'actions/select.c' || echo '$(srcdir)/'`actions/select.c

actions/QCADesigner-select.obj: actions/select.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT actions/QCADesigner-select.obj -MD -MP -MF "actions/$(DEPDIR)/QCADesigner-select.Tpo" -c -o actions/QCADesigner-select.obj `if test -f 'actions/select.c'; then $(CYGPATH_W) 'actions/select.c'; else $(CYGPATH_W) '$(srcdir)/actions/select.c'; fi`; \
	then mv -f "actions/$(DEPDIR)/QCADesigner-select.Tpo" "actions/$(DEPDIR)/QCADesigner-select.Po"; else rm -f "actions/$(DEPDIR)/QCADesigner-select.Tpo"; exit 1; fi
#	source='actions/select.c' object='actions/QCADesigner-select.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o actions/QCADesigner-select.obj `if test -f 'actions/select.c'; then $(CYGPATH_W) 'actions/select.c'; else $(CYGPATH_W) '$(srcdir)/actions/select.c'; fi`

QCADesigner-exp_pixmap.o: exp_pixmap.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-exp_pixmap.o -MD -MP -MF "$(DEPDIR)/QCADesigner-exp_pixmap.Tpo" -c -o QCADesigner-exp_pixmap.o `test -f 'exp_pixmap.c' || echo '$(srcdir)/'`exp_pixmap.c; \
	then mv -f "$(DEPDIR)/QCADesigner-exp_pixmap.Tpo" "$(DEPDIR)/QCADesigner-exp_pixmap.Po"; else rm -f "$(DEPDIR)/QCADesigner-exp_pixmap.Tpo"; exit 1; fi
#	source='exp_pixmap.c' object='QCADesigner-exp_pixmap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-exp_pixmap.o `test -f 'exp_pixmap.c' || echo '$(srcdir)/'`exp_pixmap.c

QCADesigner-exp_pixmap.obj: exp_pixmap.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-exp_pixmap.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-exp_pixmap.Tpo" -c -o QCADesigner-exp_pixmap.obj `if test -f 'exp_pixmap.c'; then $(CYGPATH_W) 'exp_pixmap.c'; else $(CYGPATH_W) '$(srcdir)/exp_pixmap.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-exp_pixmap.Tpo" "$(DEPDIR)/QCADesigner-exp_pixmap.Po"; else rm -f "$(DEPDIR)/QCADesigner-exp_pixmap.Tpo"; exit 1; fi
#	source='exp_pixmap.c' object='QCADesigner-exp_pixmap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-exp_pixmap.obj `if test -f 'exp_pixmap.c'; then $(CYGPATH_W) 'exp_pixmap.c'; else $(CYGPATH_W) '$(srcdir)/exp_pixmap.c'; fi`

QCADesigner-simulation_data.o: simulation_data.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-simulation_data.o -MD -MP -MF "$(DEPDIR)/QCADesigner-simulation_data.Tpo" -c -o QCADesigner-simulation_data.o `test -f 'simulation_data.c' || echo '$(srcdir)/'`simulation_data.c; \
	then mv -f "$(DEPDIR)/QCADesigner-simulation_data.Tpo" "$(DEPDIR)/QCADesigner-simulation_data.Po"; else rm -f "$(DEPDIR)/QCADesigner-simulation_data.Tpo"; exit 1; fi
#	source='simulation_data.c' object='QCADesigner-simulation_data.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-simulation_data.o `test -f 'simulation_data.c' || echo '$(srcdir)/'`simulation_data.c

QCADesigner-simulation_data.obj: simulation_data.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-simulation_data.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-simulation_data.Tpo" -c -o QCADesigner-simulation_data.obj `if test -f 'simulation_data.c'; then $(CYGPATH_W) 'simulation_data.c'; else $(CYGPATH_W) '$(srcdir)/simulation_data.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-simulation_data.Tpo" "$(DEPDIR)/QCADesigner-simulation_data.Po"; else rm -f "$(DEPDIR)/QCADesigner-simulation_data.Tpo"; exit 1; fi
#	source='simulation_data.c' object='QCADesigner-simulation_data.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-simulation_data.obj `if test -f 'simulation_data.c'; then $(CYGPATH_W) 'simulation_data.c'; else $(CYGPATH_W) '$(srcdir)/simulation_data.c'; fi`

QCADesigner-graph_dialog_widget_data.o: graph_dialog_widget_data.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-graph_dialog_widget_data.o -MD -MP -MF "$(DEPDIR)/QCADesigner-graph_dialog_widget_data.Tpo" -c -o QCADesigner-graph_dialog_widget_data.o `test -f 'graph_dialog_widget_data.c' || echo '$(srcdir)/'`graph_dialog_widget_data.c; \
	then mv -f "$(DEPDIR)/QCADesigner-graph_dialog_widget_data.Tpo" "$(DEPDIR)/QCADesigner-graph_dialog_widget_data.Po"; else rm -f "$(DEPDIR)/QCADesigner-graph_dialog_widget_data.Tpo"; exit 1; fi
#	source='graph_dialog_widget_data.c' object='QCADesigner-graph_dialog_widget_data.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-graph_dialog_widget_data.o `test -f 'graph_dialog_widget_data.c' || echo '$(srcdir)/'`graph_dialog_widget_data.c

QCADesigner-graph_dialog_widget_data.obj: graph_dialog_widget_data.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-graph_dialog_widget_data.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-graph_dialog_widget_data.Tpo" -c -o QCADesigner-graph_dialog_widget_data.obj `if test -f 'graph_dialog_widget_data.c'; then $(CYGPATH_W) 'graph_dialog_widget_data.c'; else $(CYGPATH_W) '$(srcdir)/graph_dialog_widget_data.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-graph_dialog_widget_data.Tpo" "$(DEPDIR)/QCADesigner-graph_dialog_widget_data.Po"; else rm -f "$(DEPDIR)/QCADesigner-graph_dialog_widget_data.Tpo"; exit 1; fi
#	source='graph_dialog_widget_data.c' object='QCADesigner-graph_dialog_widget_data.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-graph_dialog_widget_data.obj `if test -f 'graph_dialog_widget_data.c'; then $(CYGPATH_W) 'graph_dialog_widget_data.c'; else $(CYGPATH_W) '$(srcdir)/graph_dialog_widget_data.c'; fi`

objects/QCADesigner-mouse_handlers.o: objects/mouse_handlers.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-mouse_handlers.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-mouse_handlers.Tpo" -c -o objects/QCADesigner-mouse_handlers.o `test -f 'objects/mouse_handlers.c' || echo '$(srcdir)/'`objects/mouse_handlers.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-mouse_handlers.Tpo" "objects/$(DEPDIR)/QCADesigner-mouse_handlers.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-mouse_handlers.Tpo"; exit 1; fi
#	source='objects/mouse_handlers.c' object='objects/QCADesigner-mouse_handlers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-mouse_handlers.o `test -f 'objects/mouse_handlers.c' || echo '$(srcdir)/'`objects/mouse_handlers.c

objects/QCADesigner-mouse_handlers.obj: objects/mouse_handlers.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-mouse_handlers.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-mouse_handlers.Tpo" -c -o objects/QCADesigner-mouse_handlers.obj `if test -f 'objects/mouse_handlers.c'; then $(CYGPATH_W) 'objects/mouse_handlers.c'; else $(CYGPATH_W) '$(srcdir)/objects/mouse_handlers.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-mouse_handlers.Tpo" "objects/$(DEPDIR)/QCADesigner-mouse_handlers.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-mouse_handlers.Tpo"; exit 1; fi
#	source='objects/mouse_handlers.c' object='objects/QCADesigner-mouse_handlers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-mouse_handlers.obj `if test -f 'objects/mouse_handlers.c'; then $(CYGPATH_W) 'objects/mouse_handlers.c'; else $(CYGPATH_W) '$(srcdir)/objects/mouse_handlers.c'; fi`

objects/QCADesigner-QCADCellRendererText.o: objects/QCADCellRendererText.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADCellRendererText.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADCellRendererText.Tpo" -c -o objects/QCADesigner-QCADCellRendererText.o `test -f 'objects/QCADCellRendererText.c' || echo '$(srcdir)/'`objects/QCADCellRendererText.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADCellRendererText.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADCellRendererText.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADCellRendererText.Tpo"; exit 1; fi
#	source='objects/QCADCellRendererText.c' object='objects/QCADesigner-QCADCellRendererText.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADCellRendererText.o `test -f 'objects/QCADCellRendererText.c' || echo '$(srcdir)/'`objects/QCADCellRendererText.c

objects/QCADesigner-QCADCellRendererText.obj: objects/QCADCellRendererText.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADCellRendererText.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADCellRendererText.Tpo" -c -o objects/QCADesigner-QCADCellRendererText.obj `if test -f 'objects/QCADCellRendererText.c'; then $(CYGPATH_W) 'objects/QCADCellRendererText.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADCellRendererText.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADCellRendererText.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADCellRendererText.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADCellRendererText.Tpo"; exit 1; fi
#	source='objects/QCADCellRendererText.c' object='objects/QCADesigner-QCADCellRendererText.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADCellRendererText.obj `if test -f 'objects/QCADCellRendererText.c'; then $(CYGPATH_W) 'objects/QCADCellRendererText.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADCellRendererText.c'; fi`

objects/QCADesigner-QCADCellRendererVT.o: objects/QCADCellRendererVT.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADCellRendererVT.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADCellRendererVT.Tpo" -c -o objects/QCADesigner-QCADCellRendererVT.o `test -f 'objects/QCADCellRendererVT.c' || echo '$(srcdir)/'`objects/QCADCellRendererVT.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADCellRendererVT.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADCellRendererVT.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADCellRendererVT.Tpo"; exit 1; fi
#	source='objects/QCADCellRendererVT.c' object='objects/QCADesigner-QCADCellRendererVT.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADCellRendererVT.o `test -f 'objects/QCADCellRendererVT.c' || echo '$(srcdir)/'`objects/QCADCellRendererVT.c

objects/QCADesigner-QCADCellRendererVT.obj: objects/QCADCellRendererVT.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADCellRendererVT.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADCellRendererVT.Tpo" -c -o objects/QCADesigner-QCADCellRendererVT.obj `if test -f 'objects/QCADCellRendererVT.c'; then $(CYGPATH_W) 'objects/QCADCellRendererVT.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADCellRendererVT.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADCellRendererVT.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADCellRendererVT.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADCellRendererVT.Tpo"; exit 1; fi
#	source='objects/QCADCellRendererVT.c' object='objects/QCADesigner-QCADCellRendererVT.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADCellRendererVT.obj `if test -f 'objects/QCADCellRendererVT.c'; then $(CYGPATH_W) 'objects/QCADCellRendererVT.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADCellRendererVT.c'; fi`

objects/QCADesigner-QCADCellRendererLayerList.o: objects/QCADCellRendererLayerList.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADCellRendererLayerList.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADCellRendererLayerList.Tpo" -c -o objects/QCADesigner-QCADCellRendererLayerList.o `test -f 'objects/QCADCellRendererLayerList.c' || echo '$(srcdir)/'`objects/QCADCellRendererLayerList.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADCellRendererLayerList.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADCellRendererLayerList.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADCellRendererLayerList.Tpo"; exit 1; fi
#	source='objects/QCADCellRendererLayerList.c' object='objects/QCADesigner-QCADCellRendererLayerList.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADCellRendererLayerList.o `test -f 'objects/QCADCellRendererLayerList.c' || echo '$(srcdir)/'`objects/QCADCellRendererLayerList.c

objects/QCADesigner-QCADCellRendererLayerList.obj: objects/QCADCellRendererLayerList.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADCellRendererLayerList.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADCellRendererLayerList.Tpo" -c -o objects/QCADesigner-QCADCellRendererLayerList.obj `if test -f 'objects/QCADCellRendererLayerList.c'; then $(CYGPATH_W) 'objects/QCADCellRendererLayerList.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADCellRendererLayerList.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADCellRendererLayerList.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADCellRendererLayerList.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADCellRendererLayerList.Tpo"; exit 1; fi
#	source='objects/QCADCellRendererLayerList.c' object='objects/QCADesigner-QCADCellRendererLayerList.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADCellRendererLayerList.obj `if test -f 'objects/QCADCellRendererLayerList.c'; then $(CYGPATH_W) 'objects/QCADCellRendererLayerList.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADCellRendererLayerList.c'; fi`

objects/QCADesigner-QCADFlexiCombo.o: objects/QCADFlexiCombo.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADFlexiCombo.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADFlexiCombo.Tpo" -c -o objects/QCADesigner-QCADFlexiCombo.o `test -f 'objects/QCADFlexiCombo.c' || echo '$(srcdir)/'`objects/QCADFlexiCombo.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADFlexiCombo.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADFlexiCombo.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADFlexiCombo.Tpo"; exit 1; fi
#	source='objects/QCADFlexiCombo.c' object='objects/QCADesigner-QCADFlexiCombo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADFlexiCombo.o `test -f 'objects/QCADFlexiCombo.c' || echo '$(srcdir)/'`objects/QCADFlexiCombo.c

objects/QCADesigner-QCADFlexiCombo.obj: objects/QCADFlexiCombo.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADFlexiCombo.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADFlexiCombo.Tpo" -c -o objects/QCADesigner-QCADFlexiCombo.obj `if test -f 'objects/QCADFlexiCombo.c'; then $(CYGPATH_W) 'objects/QCADFlexiCombo.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADFlexiCombo.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADFlexiCombo.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADFlexiCombo.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADFlexiCombo.Tpo"; exit 1; fi
#	source='objects/QCADFlexiCombo.c' object='objects/QCADesigner-QCADFlexiCombo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADFlexiCombo.obj `if test -f 'objects/QCADFlexiCombo.c'; then $(CYGPATH_W) 'objects/QCADFlexiCombo.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADFlexiCombo.c'; fi`

objects/QCADesigner-QCADLayersCombo.o: objects/QCADLayersCombo.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADLayersCombo.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADLayersCombo.Tpo" -c -o objects/QCADesigner-QCADLayersCombo.o `test -f 'objects/QCADLayersCombo.c' || echo '$(srcdir)/'`objects/QCADLayersCombo.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADLayersCombo.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADLayersCombo.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADLayersCombo.Tpo"; exit 1; fi
#	source='objects/QCADLayersCombo.c' object='objects/QCADesigner-QCADLayersCombo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADLayersCombo.o `test -f 'objects/QCADLayersCombo.c' || echo '$(srcdir)/'`objects/QCADLayersCombo.c

objects/QCADesigner-QCADLayersCombo.obj: objects/QCADLayersCombo.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADLayersCombo.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADLayersCombo.Tpo" -c -o objects/QCADesigner-QCADLayersCombo.obj `if test -f 'objects/QCADLayersCombo.c'; then $(CYGPATH_W) 'objects/QCADLayersCombo.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADLayersCombo.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADLayersCombo.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADLayersCombo.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADLayersCombo.Tpo"; exit 1; fi
#	source='objects/QCADLayersCombo.c' object='objects/QCADesigner-QCADLayersCombo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADLayersCombo.obj `if test -f 'objects/QCADLayersCombo.c'; then $(CYGPATH_W) 'objects/QCADLayersCombo.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADLayersCombo.c'; fi`

objects/QCADesigner-QCADPrintDialog.o: objects/QCADPrintDialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADPrintDialog.o -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADPrintDialog.Tpo" -c -o objects/QCADesigner-QCADPrintDialog.o `test -f 'objects/QCADPrintDialog.c' || echo '$(srcdir)/'`objects/QCADPrintDialog.c; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADPrintDialog.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADPrintDialog.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADPrintDialog.Tpo"; exit 1; fi
#	source='objects/QCADPrintDialog.c' object='objects/QCADesigner-QCADPrintDialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADPrintDialog.o `test -f 'objects/QCADPrintDialog.c' || echo '$(srcdir)/'`objects/QCADPrintDialog.c

objects/QCADesigner-QCADPrintDialog.obj: objects/QCADPrintDialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT objects/QCADesigner-QCADPrintDialog.obj -MD -MP -MF "objects/$(DEPDIR)/QCADesigner-QCADPrintDialog.Tpo" -c -o objects/QCADesigner-QCADPrintDialog.obj `if test -f 'objects/QCADPrintDialog.c'; then $(CYGPATH_W) 'objects/QCADPrintDialog.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADPrintDialog.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/QCADesigner-QCADPrintDialog.Tpo" "objects/$(DEPDIR)/QCADesigner-QCADPrintDialog.Po"; else rm -f "objects/$(DEPDIR)/QCADesigner-QCADPrintDialog.Tpo"; exit 1; fi
#	source='objects/QCADPrintDialog.c' object='objects/QCADesigner-QCADPrintDialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o objects/QCADesigner-QCADPrintDialog.obj `if test -f 'objects/QCADPrintDialog.c'; then $(CYGPATH_W) 'objects/QCADPrintDialog.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADPrintDialog.c'; fi`

QCADesigner-print_properties_dialog.o: print_properties_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-print_properties_dialog.o -MD -MP -MF "$(DEPDIR)/QCADesigner-print_properties_dialog.Tpo" -c -o QCADesigner-print_properties_dialog.o `test -f 'print_properties_dialog.c' || echo '$(srcdir)/'`print_properties_dialog.c; \
	then mv -f "$(DEPDIR)/QCADesigner-print_properties_dialog.Tpo" "$(DEPDIR)/QCADesigner-print_properties_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-print_properties_dialog.Tpo"; exit 1; fi
#	source='print_properties_dialog.c' object='QCADesigner-print_properties_dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-print_properties_dialog.o `test -f 'print_properties_dialog.c' || echo '$(srcdir)/'`print_properties_dialog.c

QCADesigner-print_properties_dialog.obj: print_properties_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-print_properties_dialog.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-print_properties_dialog.Tpo" -c -o QCADesigner-print_properties_dialog.obj `if test -f 'print_properties_dialog.c'; then $(CYGPATH_W) 'print_properties_dialog.c'; else $(CYGPATH_W) '$(srcdir)/print_properties_dialog.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-print_properties_dialog.Tpo" "$(DEPDIR)/QCADesigner-print_properties_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-print_properties_dialog.Tpo"; exit 1; fi
#	source='print_properties_dialog.c' object='QCADesigner-print_properties_dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-print_properties_dialog.obj `if test -f 'print_properties_dialog.c'; then $(CYGPATH_W) 'print_properties_dialog.c'; else $(CYGPATH_W) '$(srcdir)/print_properties_dialog.c'; fi`

QCADesigner-print_properties_dialog_interface.o: print_properties_dialog_interface.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-print_properties_dialog_interface.o -MD -MP -MF "$(DEPDIR)/QCADesigner-print_properties_dialog_interface.Tpo" -c -o QCADesigner-print_properties_dialog_interface.o `test -f 'print_properties_dialog_interface.c' || echo '$(srcdir)/'`print_properties_dialog_interface.c; \
	then mv -f "$(DEPDIR)/QCADesigner-print_properties_dialog_interface.Tpo" "$(DEPDIR)/QCADesigner-print_properties_dialog_interface.Po"; else rm -f "$(DEPDIR)/QCADesigner-print_properties_dialog_interface.Tpo"; exit 1; fi
#	source='print_properties_dialog_interface.c' object='QCADesigner-print_properties_dialog_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-print_properties_dialog_interface.o `test -f 'print_properties_dialog_interface.c' || echo '$(srcdir)/'`print_properties_dialog_interface.c

QCADesigner-print_properties_dialog_interface.obj: print_properties_dialog_interface.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-print_properties_dialog_interface.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-print_properties_dialog_interface.Tpo" -c -o QCADesigner-print_properties_dialog_interface.obj `if test -f 'print_properties_dialog_interface.c'; then $(CYGPATH_W) 'print_properties_dialog_interface.c'; else $(CYGPATH_W) '$(srcdir)/print_properties_dialog_interface.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-print_properties_dialog_interface.Tpo" "$(DEPDIR)/QCADesigner-print_properties_dialog_interface.Po"; else rm -f "$(DEPDIR)/QCADesigner-print_properties_dialog_interface.Tpo"; exit 1; fi
#	source='print_properties_dialog_interface.c' object='QCADesigner-print_properties_dialog_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-print_properties_dialog_interface.obj `if test -f 'print_properties_dialog_interface.c'; then $(CYGPATH_W) 'print_properties_dialog_interface.c'; else $(CYGPATH_W) '$(srcdir)/print_properties_dialog_interface.c'; fi`

QCADesigner-print_graph_properties_dialog.o: print_graph_properties_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-print_graph_properties_dialog.o -MD -MP -MF "$(DEPDIR)/QCADesigner-print_graph_properties_dialog.Tpo" -c -o QCADesigner-print_graph_properties_dialog.o `test -f 'print_graph_properties_dialog.c' || echo '$(srcdir)/'`print_graph_properties_dialog.c; \
	then mv -f "$(DEPDIR)/QCADesigner-print_graph_properties_dialog.Tpo" "$(DEPDIR)/QCADesigner-print_graph_properties_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-print_graph_properties_dialog.Tpo"; exit 1; fi
#	source='print_graph_properties_dialog.c' object='QCADesigner-print_graph_properties_dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-print_graph_properties_dialog.o `test -f 'print_graph_properties_dialog.c' || echo '$(srcdir)/'`print_graph_properties_dialog.c

QCADesigner-print_graph_properties_dialog.obj: print_graph_properties_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-print_graph_properties_dialog.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-print_graph_properties_dialog.Tpo" -c -o QCADesigner-print_graph_properties_dialog.obj `if test -f 'print_graph_properties_dialog.c'; then $(CYGPATH_W) 'print_graph_properties_dialog.c'; else $(CYGPATH_W) '$(srcdir)/print_graph_properties_dialog.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-print_graph_properties_dialog.Tpo" "$(DEPDIR)/QCADesigner-print_graph_properties_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-print_graph_properties_dialog.Tpo"; exit 1; fi
#	source='print_graph_properties_dialog.c' object='QCADesigner-print_graph_properties_dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-print_graph_properties_dialog.obj `if test -f 'print_graph_properties_dialog.c'; then $(CYGPATH_W) 'print_graph_properties_dialog.c'; else $(CYGPATH_W) '$(srcdir)/print_graph_properties_dialog.c'; fi`

QCADesigner-print.o: print.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-print.o -MD -MP -MF "$(DEPDIR)/QCADesigner-print.Tpo" -c -o QCADesigner-print.o `test -f 'print.c' || echo '$(srcdir)/'`print.c; \
	then mv -f "$(DEPDIR)/QCADesigner-print.Tpo" "$(DEPDIR)/QCADesigner-print.Po"; else rm -f "$(DEPDIR)/QCADesigner-print.Tpo"; exit 1; fi
#	source='print.c' object='QCADesigner-print.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-print.o `test -f 'print.c' || echo '$(srcdir)/'`print.c

QCADesigner-print.obj: print.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-print.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-print.Tpo" -c -o QCADesigner-print.obj `if test -f 'print.c'; then $(CYGPATH_W) 'print.c'; else $(CYGPATH_W) '$(srcdir)/print.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-print.Tpo" "$(DEPDIR)/QCADesigner-print.Po"; else rm -f "$(DEPDIR)/QCADesigner-print.Tpo"; exit 1; fi
#	source='print.c' object='QCADesigner-print.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-print.obj `if test -f 'print.c'; then $(CYGPATH_W) 'print.c'; else $(CYGPATH_W) '$(srcdir)/print.c'; fi`

QCADesigner-print_graph.o: print_graph.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-print_graph.o -MD -MP -MF "$(DEPDIR)/QCADesigner-print_graph.Tpo" -c -o QCADesigner-print_graph.o `test -f 'print_graph.c' || echo '$(srcdir)/'`print_graph.c; \
	then mv -f "$(DEPDIR)/QCADesigner-print_graph.Tpo" "$(DEPDIR)/QCADesigner-print_graph.Po"; else rm -f "$(DEPDIR)/QCADesigner-print_graph.Tpo"; exit 1; fi
#	source='print_graph.c' object='QCADesigner-print_graph.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-print_graph.o `test -f 'print_graph.c' || echo '$(srcdir)/'`print_graph.c

QCADesigner-print_graph.obj: print_graph.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-print_graph.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-print_graph.Tpo" -c -o QCADesigner-print_graph.obj `if test -f 'print_graph.c'; then $(CYGPATH_W) 'print_graph.c'; else $(CYGPATH_W) '$(srcdir)/print_graph.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-print_graph.Tpo" "$(DEPDIR)/QCADesigner-print_graph.Po"; else rm -f "$(DEPDIR)/QCADesigner-print_graph.Tpo"; exit 1; fi
#	source='print_graph.c' object='QCADesigner-print_graph.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-print_graph.obj `if test -f 'print_graph.c'; then $(CYGPATH_W) 'print_graph.c'; else $(CYGPATH_W) '$(srcdir)/print_graph.c'; fi`

QCADesigner-print_util.o: print_util.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-print_util.o -MD -MP -MF "$(DEPDIR)/QCADesigner-print_util.Tpo" -c -o QCADesigner-print_util.o `test -f 'print_util.c' || echo '$(srcdir)/'`print_util.c; \
	then mv -f "$(DEPDIR)/QCADesigner-print_util.Tpo" "$(DEPDIR)/QCADesigner-print_util.Po"; else rm -f "$(DEPDIR)/QCADesigner-print_util.Tpo"; exit 1; fi
#	source='print_util.c' object='QCADesigner-print_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-print_util.o `test -f 'print_util.c' || echo '$(srcdir)/'`print_util.c

QCADesigner-print_util.obj: print_util.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-print_util.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-print_util.Tpo" -c -o QCADesigner-print_util.obj `if test -f 'print_util.c'; then $(CYGPATH_W) 'print_util.c'; else $(CYGPATH_W) '$(srcdir)/print_util.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-print_util.Tpo" "$(DEPDIR)/QCADesigner-print_util.Po"; else rm -f "$(DEPDIR)/QCADesigner-print_util.Tpo"; exit 1; fi
#	source='print_util.c' object='QCADesigner-print_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-print_util.obj `if test -f 'print_util.c'; then $(CYGPATH_W) 'print_util.c'; else $(CYGPATH_W) '$(srcdir)/print_util.c'; fi`

QCADesigner-print_preview.o: print_preview.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-print_preview.o -MD -MP -MF "$(DEPDIR)/QCADesigner-print_preview.Tpo" -c -o QCADesigner-print_preview.o `test -f 'print_preview.c' || echo '$(srcdir)/'`print_preview.c; \
	then mv -f "$(DEPDIR)/QCADesigner-print_preview.Tpo" "$(DEPDIR)/QCADesigner-print_preview.Po"; else rm -f "$(DEPDIR)/QCADesigner-print_preview.Tpo"; exit 1; fi
#	source='print_preview.c' object='QCADesigner-print_preview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-print_preview.o `test -f 'print_preview.c' || echo '$(srcdir)/'`print_preview.c

QCADesigner-print_preview.obj: print_preview.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-print_preview.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-print_preview.Tpo" -c -o QCADesigner-print_preview.obj `if test -f 'print_preview.c'; then $(CYGPATH_W) 'print_preview.c'; else $(CYGPATH_W) '$(srcdir)/print_preview.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-print_preview.Tpo" "$(DEPDIR)/QCADesigner-print_preview.Po"; else rm -f "$(DEPDIR)/QCADesigner-print_preview.Tpo"; exit 1; fi
#	source='print_preview.c' object='QCADesigner-print_preview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-print_preview.obj `if test -f 'print_preview.c'; then $(CYGPATH_W) 'print_preview.c'; else $(CYGPATH_W) '$(srcdir)/print_preview.c'; fi`

QCADesigner-selection_renderer.o: selection_renderer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-selection_renderer.o -MD -MP -MF "$(DEPDIR)/QCADesigner-selection_renderer.Tpo" -c -o QCADesigner-selection_renderer.o `test -f 'selection_renderer.c' || echo '$(srcdir)/'`selection_renderer.c; \
	then mv -f "$(DEPDIR)/QCADesigner-selection_renderer.Tpo" "$(DEPDIR)/QCADesigner-selection_renderer.Po"; else rm -f "$(DEPDIR)/QCADesigner-selection_renderer.Tpo"; exit 1; fi
#	source='selection_renderer.c' object='QCADesigner-selection_renderer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-selection_renderer.o `test -f 'selection_renderer.c' || echo '$(srcdir)/'`selection_renderer.c

QCADesigner-selection_renderer.obj: selection_renderer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-selection_renderer.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-selection_renderer.Tpo" -c -o QCADesigner-selection_renderer.obj `if test -f 'selection_renderer.c'; then $(CYGPATH_W) 'selection_renderer.c'; else $(CYGPATH_W) '$(srcdir)/selection_renderer.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-selection_renderer.Tpo" "$(DEPDIR)/QCADesigner-selection_renderer.Po"; else rm -f "$(DEPDIR)/QCADesigner-selection_renderer.Tpo"; exit 1; fi
#	source='selection_renderer.c' object='QCADesigner-selection_renderer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-selection_renderer.obj `if test -f 'selection_renderer.c'; then $(CYGPATH_W) 'selection_renderer.c'; else $(CYGPATH_W) '$(srcdir)/selection_renderer.c'; fi`

QCADesigner-vector_table.o: vector_table.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-vector_table.o -MD -MP -MF "$(DEPDIR)/QCADesigner-vector_table.Tpo" -c -o QCADesigner-vector_table.o `test -f 'vector_table.c' || echo '$(srcdir)/'`vector_table.c; \
	then mv -f "$(DEPDIR)/QCADesigner-vector_table.Tpo" "$(DEPDIR)/QCADesigner-vector_table.Po"; else rm -f "$(DEPDIR)/QCADesigner-vector_table.Tpo"; exit 1; fi
#	source='vector_table.c' object='QCADesigner-vector_table.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-vector_table.o `test -f 'vector_table.c' || echo '$(srcdir)/'`vector_table.c

QCADesigner-vector_table.obj: vector_table.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-vector_table.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-vector_table.Tpo" -c -o QCADesigner-vector_table.obj `if test -f 'vector_table.c'; then $(CYGPATH_W) 'vector_table.c'; else $(CYGPATH_W) '$(srcdir)/vector_table.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-vector_table.Tpo" "$(DEPDIR)/QCADesigner-vector_table.Po"; else rm -f "$(DEPDIR)/QCADesigner-vector_table.Tpo"; exit 1; fi
#	source='vector_table.c' object='QCADesigner-vector_table.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-vector_table.obj `if test -f 'vector_table.c'; then $(CYGPATH_W) 'vector_table.c'; else $(CYGPATH_W) '$(srcdir)/vector_table.c'; fi`

QCADesigner-recent_files.o: recent_files.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-recent_files.o -MD -MP -MF "$(DEPDIR)/QCADesigner-recent_files.Tpo" -c -o QCADesigner-recent_files.o `test -f 'recent_files.c' || echo '$(srcdir)/'`recent_files.c; \
	then mv -f "$(DEPDIR)/QCADesigner-recent_files.Tpo" "$(DEPDIR)/QCADesigner-recent_files.Po"; else rm -f "$(DEPDIR)/QCADesigner-recent_files.Tpo"; exit 1; fi
#	source='recent_files.c' object='QCADesigner-recent_files.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-recent_files.o `test -f 'recent_files.c' || echo '$(srcdir)/'`recent_files.c

QCADesigner-recent_files.obj: recent_files.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-recent_files.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-recent_files.Tpo" -c -o QCADesigner-recent_files.obj `if test -f 'recent_files.c'; then $(CYGPATH_W) 'recent_files.c'; else $(CYGPATH_W) '$(srcdir)/recent_files.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-recent_files.Tpo" "$(DEPDIR)/QCADesigner-recent_files.Po"; else rm -f "$(DEPDIR)/QCADesigner-recent_files.Tpo"; exit 1; fi
#	source='recent_files.c' object='QCADesigner-recent_files.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-recent_files.obj `if test -f 'recent_files.c'; then $(CYGPATH_W) 'recent_files.c'; else $(CYGPATH_W) '$(srcdir)/recent_files.c'; fi`

QCADesigner-about.o: about.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-about.o -MD -MP -MF "$(DEPDIR)/QCADesigner-about.Tpo" -c -o QCADesigner-about.o `test -f 'about.c' || echo '$(srcdir)/'`about.c; \
	then mv -f "$(DEPDIR)/QCADesigner-about.Tpo" "$(DEPDIR)/QCADesigner-about.Po"; else rm -f "$(DEPDIR)/QCADesigner-about.Tpo"; exit 1; fi
#	source='about.c' object='QCADesigner-about.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-about.o `test -f 'about.c' || echo '$(srcdir)/'`about.c

QCADesigner-about.obj: about.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-about.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-about.Tpo" -c -o QCADesigner-about.obj `if test -f 'about.c'; then $(CYGPATH_W) 'about.c'; else $(CYGPATH_W) '$(srcdir)/about.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-about.Tpo" "$(DEPDIR)/QCADesigner-about.Po"; else rm -f "$(DEPDIR)/QCADesigner-about.Tpo"; exit 1; fi
#	source='about.c' object='QCADesigner-about.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-about.obj `if test -f 'about.c'; then $(CYGPATH_W) 'about.c'; else $(CYGPATH_W) '$(srcdir)/about.c'; fi`

QCADesigner-file_selection_window.o: file_selection_window.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-file_selection_window.o -MD -MP -MF "$(DEPDIR)/QCADesigner-file_selection_window.Tpo" -c -o QCADesigner-file_selection_window.o `test -f 'file_selection_window.c' || echo '$(srcdir)/'`file_selection_window.c; \
	then mv -f "$(DEPDIR)/QCADesigner-file_selection_window.Tpo" "$(DEPDIR)/QCADesigner-file_selection_window.Po"; else rm -f "$(DEPDIR)/QCADesigner-file_selection_window.Tpo"; exit 1; fi
#	source='file_selection_window.c' object='QCADesigner-file_selection_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-file_selection_window.o `test -f 'file_selection_window.c' || echo '$(srcdir)/'`file_selection_window.c

QCADesigner-file_selection_window.obj: file_selection_window.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-file_selection_window.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-file_selection_window.Tpo" -c -o QCADesigner-file_selection_window.obj `if test -f 'file_selection_window.c'; then $(CYGPATH_W) 'file_selection_window.c'; else $(CYGPATH_W) '$(srcdir)/file_selection_window.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-file_selection_window.Tpo" "$(DEPDIR)/QCADesigner-file_selection_window.Po"; else rm -f "$(DEPDIR)/QCADesigner-file_selection_window.Tpo"; exit 1; fi
#	source='file_selection_window.c' object='QCADesigner-file_selection_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-file_selection_window.obj `if test -f 'file_selection_window.c'; then $(CYGPATH_W) 'file_selection_window.c'; else $(CYGPATH_W) '$(srcdir)/file_selection_window.c'; fi`

QCADesigner-bus_layout_dialog.o: bus_layout_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-bus_layout_dialog.o -MD -MP -MF "$(DEPDIR)/QCADesigner-bus_layout_dialog.Tpo" -c -o QCADesigner-bus_layout_dialog.o `test -f 'bus_layout_dialog.c' || echo '$(srcdir)/'`bus_layout_dialog.c; \
	then mv -f "$(DEPDIR)/QCADesigner-bus_layout_dialog.Tpo" "$(DEPDIR)/QCADesigner-bus_layout_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-bus_layout_dialog.Tpo"; exit 1; fi
#	source='bus_layout_dialog.c' object='QCADesigner-bus_layout_dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-bus_layout_dialog.o `test -f 'bus_layout_dialog.c' || echo '$(srcdir)/'`bus_layout_dialog.c

QCADesigner-bus_layout_dialog.obj: bus_layout_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-bus_layout_dialog.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-bus_layout_dialog.Tpo" -c -o QCADesigner-bus_layout_dialog.obj `if test -f 'bus_layout_dialog.c'; then $(CYGPATH_W) 'bus_layout_dialog.c'; else $(CYGPATH_W) '$(srcdir)/bus_layout_dialog.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-bus_layout_dialog.Tpo" "$(DEPDIR)/QCADesigner-bus_layout_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-bus_layout_dialog.Tpo"; exit 1; fi
#	source='bus_layout_dialog.c' object='QCADesigner-bus_layout_dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-bus_layout_dialog.obj `if test -f 'bus_layout_dialog.c'; then $(CYGPATH_W) 'bus_layout_dialog.c'; else $(CYGPATH_W) '$(srcdir)/bus_layout_dialog.c'; fi`

QCADesigner-layer_mapping_dialog.o: layer_mapping_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-layer_mapping_dialog.o -MD -MP -MF "$(DEPDIR)/QCADesigner-layer_mapping_dialog.Tpo" -c -o QCADesigner-layer_mapping_dialog.o `test -f 'layer_mapping_dialog.c' || echo '$(srcdir)/'`layer_mapping_dialog.c; \
	then mv -f "$(DEPDIR)/QCADesigner-layer_mapping_dialog.Tpo" "$(DEPDIR)/QCADesigner-layer_mapping_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-layer_mapping_dialog.Tpo"; exit 1; fi
#	source='layer_mapping_dialog.c' object='QCADesigner-layer_mapping_dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-layer_mapping_dialog.o `test -f 'layer_mapping_dialog.c' || echo '$(srcdir)/'`layer_mapping_dialog.c

QCADesigner-layer_mapping_dialog.obj: layer_mapping_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-layer_mapping_dialog.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-layer_mapping_dialog.Tpo" -c -o QCADesigner-layer_mapping_dialog.obj `if test -f 'layer_mapping_dialog.c'; then $(CYGPATH_W) 'layer_mapping_dialog.c'; else $(CYGPATH_W) '$(srcdir)/layer_mapping_dialog.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-layer_mapping_dialog.Tpo" "$(DEPDIR)/QCADesigner-layer_mapping_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-layer_mapping_dialog.Tpo"; exit 1; fi
#	source='layer_mapping_dialog.c' object='QCADesigner-layer_mapping_dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-layer_mapping_dialog.obj `if test -f 'layer_mapping_dialog.c'; then $(CYGPATH_W) 'layer_mapping_dialog.c'; else $(CYGPATH_W) '$(srcdir)/layer_mapping_dialog.c'; fi`

QCADesigner-layer_order_dialog.o: layer_order_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-layer_order_dialog.o -MD -MP -MF "$(DEPDIR)/QCADesigner-layer_order_dialog.Tpo" -c -o QCADesigner-layer_order_dialog.o `test -f 'layer_order_dialog.c' || echo '$(srcdir)/'`layer_order_dialog.c; \
	then mv -f "$(DEPDIR)/QCADesigner-layer_order_dialog.Tpo" "$(DEPDIR)/QCADesigner-layer_order_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-layer_order_dialog.Tpo"; exit 1; fi
#	source='layer_order_dialog.c' object='QCADesigner-layer_order_dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-layer_order_dialog.o `test -f 'layer_order_dialog.c' || echo '$(srcdir)/'`layer_order_dialog.c

QCADesigner-layer_order_dialog.obj: layer_order_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-layer_order_dialog.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-layer_order_dialog.Tpo" -c -o QCADesigner-layer_order_dialog.obj `if test -f 'layer_order_dialog.c'; then $(CYGPATH_W) 'layer_order_dialog.c'; else $(CYGPATH_W) '$(srcdir)/layer_order_dialog.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-layer_order_dialog.Tpo" "$(DEPDIR)/QCADesigner-layer_order_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-layer_order_dialog.Tpo"; exit 1; fi
#	source='layer_order_dialog.c' object='QCADesigner-layer_order_dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-layer_order_dialog.obj `if test -f 'layer_order_dialog.c'; then $(CYGPATH_W) 'layer_order_dialog.c'; else $(CYGPATH_W) '$(srcdir)/layer_order_dialog.c'; fi`

QCADesigner-scale_dialog.o: scale_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-scale_dialog.o -MD -MP -MF "$(DEPDIR)/QCADesigner-scale_dialog.Tpo" -c -o QCADesigner-scale_dialog.o `test -f 'scale_dialog.c' || echo '$(srcdir)/'`scale_dialog.c; \
	then mv -f "$(DEPDIR)/QCADesigner-scale_dialog.Tpo" "$(DEPDIR)/QCADesigner-scale_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-scale_dialog.Tpo"; exit 1; fi
#	source='scale_dialog.c' object='QCADesigner-scale_dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-scale_dialog.o `test -f 'scale_dialog.c' || echo '$(srcdir)/'`scale_dialog.c

QCADesigner-scale_dialog.obj: scale_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-scale_dialog.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-scale_dialog.Tpo" -c -o QCADesigner-scale_dialog.obj `if test -f 'scale_dialog.c'; then $(CYGPATH_W) 'scale_dialog.c'; else $(CYGPATH_W) '$(srcdir)/scale_dialog.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-scale_dialog.Tpo" "$(DEPDIR)/QCADesigner-scale_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-scale_dialog.Tpo"; exit 1; fi
#	source='scale_dialog.c' object='QCADesigner-scale_dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-scale_dialog.obj `if test -f 'scale_dialog.c'; then $(CYGPATH_W) 'scale_dialog.c'; else $(CYGPATH_W) '$(srcdir)/scale_dialog.c'; fi`

QCADesigner-sim_engine_setup_dialog.o: sim_engine_setup_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-sim_engine_setup_dialog.o -MD -MP -MF "$(DEPDIR)/QCADesigner-sim_engine_setup_dialog.Tpo" -c -o QCADesigner-sim_engine_setup_dialog.o `test -f 'sim_engine_setup_dialog.c' || echo '$(srcdir)/'`sim_engine_setup_dialog.c; \
	then mv -f "$(DEPDIR)/QCADesigner-sim_engine_setup_dialog.Tpo" "$(DEPDIR)/QCADesigner-sim_engine_setup_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-sim_engine_setup_dialog.Tpo"; exit 1; fi
#	source='sim_engine_setup_dialog.c' object='QCADesigner-sim_engine_setup_dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-sim_engine_setup_dialog.o `test -f 'sim_engine_setup_dialog.c' || echo '$(srcdir)/'`sim_engine_setup_dialog.c

QCADesigner-sim_engine_setup_dialog.obj: sim_engine_setup_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-sim_engine_setup_dialog.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-sim_engine_setup_dialog.Tpo" -c -o QCADesigner-sim_engine_setup_dialog.obj `if test -f 'sim_engine_setup_dialog.c'; then $(CYGPATH_W) 'sim_engine_setup_dialog.c'; else $(CYGPATH_W) '$(srcdir)/sim_engine_setup_dialog.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-sim_engine_setup_dialog.Tpo" "$(DEPDIR)/QCADesigner-sim_engine_setup_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-sim_engine_setup_dialog.Tpo"; exit 1; fi
#	source='sim_engine_setup_dialog.c' object='QCADesigner-sim_engine_setup_dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-sim_engine_setup_dialog.obj `if test -f 'sim_engine_setup_dialog.c'; then $(CYGPATH_W) 'sim_engine_setup_dialog.c'; else $(CYGPATH_W) '$(srcdir)/sim_engine_setup_dialog.c'; fi`

QCADesigner-translate_selection_dialog.o: translate_selection_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-translate_selection_dialog.o -MD -MP -MF "$(DEPDIR)/QCADesigner-translate_selection_dialog.Tpo" -c -o QCADesigner-translate_selection_dialog.o `test -f 'translate_selection_dialog.c' || echo '$(srcdir)/'`translate_selection_dialog.c; \
	then mv -f "$(DEPDIR)/QCADesigner-translate_selection_dialog.Tpo" "$(DEPDIR)/QCADesigner-translate_selection_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-translate_selection_dialog.Tpo"; exit 1; fi
#	source='translate_selection_dialog.c' object='QCADesigner-translate_selection_dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-translate_selection_dialog.o `test -f 'translate_selection_dialog.c' || echo '$(srcdir)/'`translate_selection_dialog.c

QCADesigner-translate_selection_dialog.obj: translate_selection_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-translate_selection_dialog.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-translate_selection_dialog.Tpo" -c -o QCADesigner-translate_selection_dialog.obj `if test -f 'translate_selection_dialog.c'; then $(CYGPATH_W) 'translate_selection_dialog.c'; else $(CYGPATH_W) '$(srcdir)/translate_selection_dialog.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-translate_selection_dialog.Tpo" "$(DEPDIR)/QCADesigner-translate_selection_dialog.Po"; else rm -f "$(DEPDIR)/QCADesigner-translate_selection_dialog.Tpo"; exit 1; fi
#	source='translate_selection_dialog.c' object='QCADesigner-translate_selection_dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-translate_selection_dialog.obj `if test -f 'translate_selection_dialog.c'; then $(CYGPATH_W) 'translate_selection_dialog.c'; else $(CYGPATH_W) '$(srcdir)/translate_selection_dialog.c'; fi`

QCADesigner-main.o: main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-main.o -MD -MP -MF "$(DEPDIR)/QCADesigner-main.Tpo" -c -o QCADesigner-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c; \
	then mv -f "$(DEPDIR)/QCADesigner-main.Tpo" "$(DEPDIR)/QCADesigner-main.Po"; else rm -f "$(DEPDIR)/QCADesigner-main.Tpo"; exit 1; fi
#	source='main.c' object='QCADesigner-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c

QCADesigner-main.obj: main.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -MT QCADesigner-main.obj -MD -MP -MF "$(DEPDIR)/QCADesigner-main.Tpo" -c -o QCADesigner-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`; \
	then mv -f "$(DEPDIR)/QCADesigner-main.Tpo" "$(DEPDIR)/QCADesigner-main.Po"; else rm -f "$(DEPDIR)/QCADesigner-main.Tpo"; exit 1; fi
#	source='main.c' object='QCADesigner-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(QCADesigner_CFLAGS) $(CFLAGS) -c -o QCADesigner-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`

batch_sim-fileio_helpers.o: fileio_helpers.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-fileio_helpers.o -MD -MP -MF "$(DEPDIR)/batch_sim-fileio_helpers.Tpo" -c -o batch_sim-fileio_helpers.o `test -f 'fileio_helpers.c' || echo '$(srcdir)/'`fileio_helpers.c; \
	then mv -f "$(DEPDIR)/batch_sim-fileio_helpers.Tpo" "$(DEPDIR)/batch_sim-fileio_helpers.Po"; else rm -f "$(DEPDIR)/batch_sim-fileio_helpers.Tpo"; exit 1; fi
#	source='fileio_helpers.c' object='batch_sim-fileio_helpers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-fileio_helpers.o `test -f 'fileio_helpers.c' || echo '$(srcdir)/'`fileio_helpers.c

batch_sim-fileio_helpers.obj: fileio_helpers.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-fileio_helpers.obj -MD -MP -MF "$(DEPDIR)/batch_sim-fileio_helpers.Tpo" -c -o batch_sim-fileio_helpers.obj `if test -f 'fileio_helpers.c'; then $(CYGPATH_W) 'fileio_helpers.c'; else $(CYGPATH_W) '$(srcdir)/fileio_helpers.c'; fi`; \
	then mv -f "$(DEPDIR)/batch_sim-fileio_helpers.Tpo" "$(DEPDIR)/batch_sim-fileio_helpers.Po"; else rm -f "$(DEPDIR)/batch_sim-fileio_helpers.Tpo"; exit 1; fi
#	source='fileio_helpers.c' object='batch_sim-fileio_helpers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-fileio_helpers.obj `if test -f 'fileio_helpers.c'; then $(CYGPATH_W) 'fileio_helpers.c'; else $(CYGPATH_W) '$(srcdir)/fileio_helpers.c'; fi`

batch_sim-generic_utils.o: generic_utils.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-generic_utils.o -MD -MP -MF "$(DEPDIR)/batch_sim-generic_utils.Tpo" -c -o batch_sim-generic_utils.o `test -f 'generic_utils.c' || echo '$(srcdir)/'`generic_utils.c; \
	then mv -f "$(DEPDIR)/batch_sim-generic_utils.Tpo" "$(DEPDIR)/batch_sim-generic_utils.Po"; else rm -f "$(DEPDIR)/batch_sim-generic_utils.Tpo"; exit 1; fi
#	source='generic_utils.c' object='batch_sim-generic_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-generic_utils.o `test -f 'generic_utils.c' || echo '$(srcdir)/'`generic_utils.c

batch_sim-generic_utils.obj: generic_utils.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-generic_utils.obj -MD -MP -MF "$(DEPDIR)/batch_sim-generic_utils.Tpo" -c -o batch_sim-generic_utils.obj `if test -f 'generic_utils.c'; then $(CYGPATH_W) 'generic_utils.c'; else $(CYGPATH_W) '$(srcdir)/generic_utils.c'; fi`; \
	then mv -f "$(DEPDIR)/batch_sim-generic_utils.Tpo" "$(DEPDIR)/batch_sim-generic_utils.Po"; else rm -f "$(DEPDIR)/batch_sim-generic_utils.Tpo"; exit 1; fi
#	source='generic_utils.c' object='batch_sim-generic_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-generic_utils.obj `if test -f 'generic_utils.c'; then $(CYGPATH_W) 'generic_utils.c'; else $(CYGPATH_W) '$(srcdir)/generic_utils.c'; fi`

batch_sim-exp_array.o: exp_array.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-exp_array.o -MD -MP -MF "$(DEPDIR)/batch_sim-exp_array.Tpo" -c -o batch_sim-exp_array.o `test -f 'exp_array.c' || echo '$(srcdir)/'`exp_array.c; \
	then mv -f "$(DEPDIR)/batch_sim-exp_array.Tpo" "$(DEPDIR)/batch_sim-exp_array.Po"; else rm -f "$(DEPDIR)/batch_sim-exp_array.Tpo"; exit 1; fi
#	source='exp_array.c' object='batch_sim-exp_array.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-exp_array.o `test -f 'exp_array.c' || echo '$(srcdir)/'`exp_array.c

batch_sim-exp_array.obj: exp_array.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-exp_array.obj -MD -MP -MF "$(DEPDIR)/batch_sim-exp_array.Tpo" -c -o batch_sim-exp_array.obj `if test -f 'exp_array.c'; then $(CYGPATH_W) 'exp_array.c'; else $(CYGPATH_W) '$(srcdir)/exp_array.c'; fi`; \
	then mv -f "$(DEPDIR)/batch_sim-exp_array.Tpo" "$(DEPDIR)/batch_sim-exp_array.Po"; else rm -f "$(DEPDIR)/batch_sim-exp_array.Tpo"; exit 1; fi
#	source='exp_array.c' object='batch_sim-exp_array.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-exp_array.obj `if test -f 'exp_array.c'; then $(CYGPATH_W) 'exp_array.c'; else $(CYGPATH_W) '$(srcdir)/exp_array.c'; fi`

batch_sim-hsl2rgb.o: hsl2rgb.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-hsl2rgb.o -MD -MP -MF "$(DEPDIR)/batch_sim-hsl2rgb.Tpo" -c -o batch_sim-hsl2rgb.o `test -f 'hsl2rgb.c' || echo '$(srcdir)/'`hsl2rgb.c; \
	then mv -f "$(DEPDIR)/batch_sim-hsl2rgb.Tpo" "$(DEPDIR)/batch_sim-hsl2rgb.Po"; else rm -f "$(DEPDIR)/batch_sim-hsl2rgb.Tpo"; exit 1; fi
#	source='hsl2rgb.c' object='batch_sim-hsl2rgb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-hsl2rgb.o `test -f 'hsl2rgb.c' || echo '$(srcdir)/'`hsl2rgb.c

batch_sim-hsl2rgb.obj: hsl2rgb.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-hsl2rgb.obj -MD -MP -MF "$(DEPDIR)/batch_sim-hsl2rgb.Tpo" -c -o batch_sim-hsl2rgb.obj `if test -f 'hsl2rgb.c'; then $(CYGPATH_W) 'hsl2rgb.c'; else $(CYGPATH_W) '$(srcdir)/hsl2rgb.c'; fi`; \
	then mv -f "$(DEPDIR)/batch_sim-hsl2rgb.Tpo" "$(DEPDIR)/batch_sim-hsl2rgb.Po"; else rm -f "$(DEPDIR)/batch_sim-hsl2rgb.Tpo"; exit 1; fi
#	source='hsl2rgb.c' object='batch_sim-hsl2rgb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-hsl2rgb.obj `if test -f 'hsl2rgb.c'; then $(CYGPATH_W) 'hsl2rgb.c'; else $(CYGPATH_W) '$(srcdir)/hsl2rgb.c'; fi`

batch_sim-custom_widgets.o: custom_widgets.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-custom_widgets.o -MD -MP -MF "$(DEPDIR)/batch_sim-custom_widgets.Tpo" -c -o batch_sim-custom_widgets.o `test -f 'custom_widgets.c' || echo '$(srcdir)/'`custom_widgets.c; \
	then mv -f "$(DEPDIR)/batch_sim-custom_widgets.Tpo" "$(DEPDIR)/batch_sim-custom_widgets.Po"; else rm -f "$(DEPDIR)/batch_sim-custom_widgets.Tpo"; exit 1; fi
#	source='custom_widgets.c' object='batch_sim-custom_widgets.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-custom_widgets.o `test -f 'custom_widgets.c' || echo '$(srcdir)/'`custom_widgets.c

batch_sim-custom_widgets.obj: custom_widgets.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-custom_widgets.obj -MD -MP -MF "$(DEPDIR)/batch_sim-custom_widgets.Tpo" -c -o batch_sim-custom_widgets.obj `if test -f 'custom_widgets.c'; then $(CYGPATH_W) 'custom_widgets.c'; else $(CYGPATH_W) '$(srcdir)/custom_widgets.c'; fi`; \
	then mv -f "$(DEPDIR)/batch_sim-custom_widgets.Tpo" "$(DEPDIR)/batch_sim-custom_widgets.Po"; else rm -f "$(DEPDIR)/batch_sim-custom_widgets.Tpo"; exit 1; fi
#	source='custom_widgets.c' object='batch_sim-custom_widgets.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-custom_widgets.obj `if test -f 'custom_widgets.c'; then $(CYGPATH_W) 'custom_widgets.c'; else $(CYGPATH_W) '$(srcdir)/custom_widgets.c'; fi`

batch_sim-design.o: design.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-design.o -MD -MP -MF "$(DEPDIR)/batch_sim-design.Tpo" -c -o batch_sim-design.o `test -f 'design.c' || echo '$(srcdir)/'`design.c; \
	then mv -f "$(DEPDIR)/batch_sim-design.Tpo" "$(DEPDIR)/batch_sim-design.Po"; else rm -f "$(DEPDIR)/batch_sim-design.Tpo"; exit 1; fi
#	source='design.c' object='batch_sim-design.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-design.o `test -f 'design.c' || echo '$(srcdir)/'`design.c

batch_sim-design.obj: design.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-design.obj -MD -MP -MF "$(DEPDIR)/batch_sim-design.Tpo" -c -o batch_sim-design.obj `if test -f 'design.c'; then $(CYGPATH_W) 'design.c'; else $(CYGPATH_W) '$(srcdir)/design.c'; fi`; \
	then mv -f "$(DEPDIR)/batch_sim-design.Tpo" "$(DEPDIR)/batch_sim-design.Po"; else rm -f "$(DEPDIR)/batch_sim-design.Tpo"; exit 1; fi
#	source='design.c' object='batch_sim-design.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-design.obj `if test -f 'design.c'; then $(CYGPATH_W) 'design.c'; else $(CYGPATH_W) '$(srcdir)/design.c'; fi`

objects/batch_sim-QCADRuler.o: objects/QCADRuler.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-QCADRuler.o -MD -MP -MF "objects/$(DEPDIR)/batch_sim-QCADRuler.Tpo" -c -o objects/batch_sim-QCADRuler.o `test -f 'objects/QCADRuler.c' || echo '$(srcdir)/'`objects/QCADRuler.c; \
	then mv -f "objects/$(DEPDIR)/batch_sim-QCADRuler.Tpo" "objects/$(DEPDIR)/batch_sim-QCADRuler.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-QCADRuler.Tpo"; exit 1; fi
#	source='objects/QCADRuler.c' object='objects/batch_sim-QCADRuler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-QCADRuler.o `test -f 'objects/QCADRuler.c' || echo '$(srcdir)/'`objects/QCADRuler.c

objects/batch_sim-QCADRuler.obj: objects/QCADRuler.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-QCADRuler.obj -MD -MP -MF "objects/$(DEPDIR)/batch_sim-QCADRuler.Tpo" -c -o objects/batch_sim-QCADRuler.obj `if test -f 'objects/QCADRuler.c'; then $(CYGPATH_W) 'objects/QCADRuler.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADRuler.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/batch_sim-QCADRuler.Tpo" "objects/$(DEPDIR)/batch_sim-QCADRuler.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-QCADRuler.Tpo"; exit 1; fi
#	source='objects/QCADRuler.c' object='objects/batch_sim-QCADRuler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-QCADRuler.obj `if test -f 'objects/QCADRuler.c'; then $(CYGPATH_W) 'objects/QCADRuler.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADRuler.c'; fi`

objects/batch_sim-QCADCell.o: objects/QCADCell.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-QCADCell.o -MD -MP -MF "objects/$(DEPDIR)/batch_sim-QCADCell.Tpo" -c -o objects/batch_sim-QCADCell.o `test -f 'objects/QCADCell.c' || echo '$(srcdir)/'`objects/QCADCell.c; \
	then mv -f "objects/$(DEPDIR)/batch_sim-QCADCell.Tpo" "objects/$(DEPDIR)/batch_sim-QCADCell.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-QCADCell.Tpo"; exit 1; fi
#	source='objects/QCADCell.c' object='objects/batch_sim-QCADCell.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-QCADCell.o `test -f 'objects/QCADCell.c' || echo '$(srcdir)/'`objects/QCADCell.c

objects/batch_sim-QCADCell.obj: objects/QCADCell.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-QCADCell.obj -MD -MP -MF "objects/$(DEPDIR)/batch_sim-QCADCell.Tpo" -c -o objects/batch_sim-QCADCell.obj `if test -f 'objects/QCADCell.c'; then $(CYGPATH_W) 'objects/QCADCell.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADCell.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/batch_sim-QCADCell.Tpo" "objects/$(DEPDIR)/batch_sim-QCADCell.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-QCADCell.Tpo"; exit 1; fi
#	source='objects/QCADCell.c' object='objects/batch_sim-QCADCell.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-QCADCell.obj `if test -f 'objects/QCADCell.c'; then $(CYGPATH_W) 'objects/QCADCell.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADCell.c'; fi`

objects/batch_sim-QCADCompoundDO.o: objects/QCADCompoundDO.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-QCADCompoundDO.o -MD -MP -MF "objects/$(DEPDIR)/batch_sim-QCADCompoundDO.Tpo" -c -o objects/batch_sim-QCADCompoundDO.o `test -f 'objects/QCADCompoundDO.c' || echo '$(srcdir)/'`objects/QCADCompoundDO.c; \
	then mv -f "objects/$(DEPDIR)/batch_sim-QCADCompoundDO.Tpo" "objects/$(DEPDIR)/batch_sim-QCADCompoundDO.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-QCADCompoundDO.Tpo"; exit 1; fi
#	source='objects/QCADCompoundDO.c' object='objects/batch_sim-QCADCompoundDO.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-QCADCompoundDO.o `test -f 'objects/QCADCompoundDO.c' || echo '$(srcdir)/'`objects/QCADCompoundDO.c

objects/batch_sim-QCADCompoundDO.obj: objects/QCADCompoundDO.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-QCADCompoundDO.obj -MD -MP -MF "objects/$(DEPDIR)/batch_sim-QCADCompoundDO.Tpo" -c -o objects/batch_sim-QCADCompoundDO.obj `if test -f 'objects/QCADCompoundDO.c'; then $(CYGPATH_W) 'objects/QCADCompoundDO.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADCompoundDO.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/batch_sim-QCADCompoundDO.Tpo" "objects/$(DEPDIR)/batch_sim-QCADCompoundDO.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-QCADCompoundDO.Tpo"; exit 1; fi
#	source='objects/QCADCompoundDO.c' object='objects/batch_sim-QCADCompoundDO.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-QCADCompoundDO.obj `if test -f 'objects/QCADCompoundDO.c'; then $(CYGPATH_W) 'objects/QCADCompoundDO.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADCompoundDO.c'; fi`

objects/batch_sim-QCADObject.o: objects/QCADObject.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-QCADObject.o -MD -MP -MF "objects/$(DEPDIR)/batch_sim-QCADObject.Tpo" -c -o objects/batch_sim-QCADObject.o `test -f 'objects/QCADObject.c' || echo '$(srcdir)/'`objects/QCADObject.c; \
	then mv -f "objects/$(DEPDIR)/batch_sim-QCADObject.Tpo" "objects/$(DEPDIR)/batch_sim-QCADObject.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-QCADObject.Tpo"; exit 1; fi
#	source='objects/QCADObject.c' object='objects/batch_sim-QCADObject.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-QCADObject.o `test -f 'objects/QCADObject.c' || echo '$(srcdir)/'`objects/QCADObject.c

objects/batch_sim-QCADObject.obj: objects/QCADObject.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-QCADObject.obj -MD -MP -MF "objects/$(DEPDIR)/batch_sim-QCADObject.Tpo" -c -o objects/batch_sim-QCADObject.obj `if test -f 'objects/QCADObject.c'; then $(CYGPATH_W) 'objects/QCADObject.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADObject.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/batch_sim-QCADObject.Tpo" "objects/$(DEPDIR)/batch_sim-QCADObject.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-QCADObject.Tpo"; exit 1; fi
#	source='objects/QCADObject.c' object='objects/batch_sim-QCADObject.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-QCADObject.obj `if test -f 'objects/QCADObject.c'; then $(CYGPATH_W) 'objects/QCADObject.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADObject.c'; fi`

objects/batch_sim-QCADDesignObject.o: objects/QCADDesignObject.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-QCADDesignObject.o -MD -MP -MF "objects/$(DEPDIR)/batch_sim-QCADDesignObject.Tpo" -c -o objects/batch_sim-QCADDesignObject.o `test -f 'objects/QCADDesignObject.c' || echo '$(srcdir)/'`objects/QCADDesignObject.c; \
	then mv -f "objects/$(DEPDIR)/batch_sim-QCADDesignObject.Tpo" "objects/$(DEPDIR)/batch_sim-QCADDesignObject.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-QCADDesignObject.Tpo"; exit 1; fi
#	source='objects/QCADDesignObject.c' object='objects/batch_sim-QCADDesignObject.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-QCADDesignObject.o `test -f 'objects/QCADDesignObject.c' || echo '$(srcdir)/'`objects/QCADDesignObject.c

objects/batch_sim-QCADDesignObject.obj: objects/QCADDesignObject.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-QCADDesignObject.obj -MD -MP -MF "objects/$(DEPDIR)/batch_sim-QCADDesignObject.Tpo" -c -o objects/batch_sim-QCADDesignObject.obj `if test -f 'objects/QCADDesignObject.c'; then $(CYGPATH_W) 'objects/QCADDesignObject.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADDesignObject.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/batch_sim-QCADDesignObject.Tpo" "objects/$(DEPDIR)/batch_sim-QCADDesignObject.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-QCADDesignObject.Tpo"; exit 1; fi
#	source='objects/QCADDesignObject.c' object='objects/batch_sim-QCADDesignObject.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-QCADDesignObject.obj `if test -f 'objects/QCADDesignObject.c'; then $(CYGPATH_W) 'objects/QCADDesignObject.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADDesignObject.c'; fi`

objects/batch_sim-QCADDOContainer.o: objects/QCADDOContainer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-QCADDOContainer.o -MD -MP -MF "objects/$(DEPDIR)/batch_sim-QCADDOContainer.Tpo" -c -o objects/batch_sim-QCADDOContainer.o `test -f 'objects/QCADDOContainer.c' || echo '$(srcdir)/'`objects/QCADDOContainer.c; \
	then mv -f "objects/$(DEPDIR)/batch_sim-QCADDOContainer.Tpo" "objects/$(DEPDIR)/batch_sim-QCADDOContainer.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-QCADDOContainer.Tpo"; exit 1; fi
#	source='objects/QCADDOContainer.c' object='objects/batch_sim-QCADDOContainer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-QCADDOContainer.o `test -f 'objects/QCADDOContainer.c' || echo '$(srcdir)/'`objects/QCADDOContainer.c

objects/batch_sim-QCADDOContainer.obj: objects/QCADDOContainer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-QCADDOContainer.obj -MD -MP -MF "objects/$(DEPDIR)/batch_sim-QCADDOContainer.Tpo" -c -o objects/batch_sim-QCADDOContainer.obj `if test -f 'objects/QCADDOContainer.c'; then $(CYGPATH_W) 'objects/QCADDOContainer.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADDOContainer.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/batch_sim-QCADDOContainer.Tpo" "objects/$(DEPDIR)/batch_sim-QCADDOContainer.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-QCADDOContainer.Tpo"; exit 1; fi
#	source='objects/QCADDOContainer.c' object='objects/batch_sim-QCADDOContainer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-QCADDOContainer.obj `if test -f 'objects/QCADDOContainer.c'; then $(CYGPATH_W) 'objects/QCADDOContainer.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADDOContainer.c'; fi`

objects/batch_sim-QCADLabel.o: objects/QCADLabel.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-QCADLabel.o -MD -MP -MF "objects/$(DEPDIR)/batch_sim-QCADLabel.Tpo" -c -o objects/batch_sim-QCADLabel.o `test -f 'objects/QCADLabel.c' || echo '$(srcdir)/'`objects/QCADLabel.c; \
	then mv -f "objects/$(DEPDIR)/batch_sim-QCADLabel.Tpo" "objects/$(DEPDIR)/batch_sim-QCADLabel.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-QCADLabel.Tpo"; exit 1; fi
#	source='objects/QCADLabel.c' object='objects/batch_sim-QCADLabel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-QCADLabel.o `test -f 'objects/QCADLabel.c' || echo '$(srcdir)/'`objects/QCADLabel.c

objects/batch_sim-QCADLabel.obj: objects/QCADLabel.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-QCADLabel.obj -MD -MP -MF "objects/$(DEPDIR)/batch_sim-QCADLabel.Tpo" -c -o objects/batch_sim-QCADLabel.obj `if test -f 'objects/QCADLabel.c'; then $(CYGPATH_W) 'objects/QCADLabel.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADLabel.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/batch_sim-QCADLabel.Tpo" "objects/$(DEPDIR)/batch_sim-QCADLabel.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-QCADLabel.Tpo"; exit 1; fi
#	source='objects/QCADLabel.c' object='objects/batch_sim-QCADLabel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-QCADLabel.obj `if test -f 'objects/QCADLabel.c'; then $(CYGPATH_W) 'objects/QCADLabel.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADLabel.c'; fi`

objects/batch_sim-QCADLayer.o: objects/QCADLayer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-QCADLayer.o -MD -MP -MF "objects/$(DEPDIR)/batch_sim-QCADLayer.Tpo" -c -o objects/batch_sim-QCADLayer.o `test -f 'objects/QCADLayer.c' || echo '$(srcdir)/'`objects/QCADLayer.c; \
	then mv -f "objects/$(DEPDIR)/batch_sim-QCADLayer.Tpo" "objects/$(DEPDIR)/batch_sim-QCADLayer.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-QCADLayer.Tpo"; exit 1; fi
#	source='objects/QCADLayer.c' object='objects/batch_sim-QCADLayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-QCADLayer.o `test -f 'objects/QCADLayer.c' || echo '$(srcdir)/'`objects/QCADLayer.c

objects/batch_sim-QCADLayer.obj: objects/QCADLayer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-QCADLayer.obj -MD -MP -MF "objects/$(DEPDIR)/batch_sim-QCADLayer.Tpo" -c -o objects/batch_sim-QCADLayer.obj `if test -f 'objects/QCADLayer.c'; then $(CYGPATH_W) 'objects/QCADLayer.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADLayer.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/batch_sim-QCADLayer.Tpo" "objects/$(DEPDIR)/batch_sim-QCADLayer.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-QCADLayer.Tpo"; exit 1; fi
#	source='objects/QCADLayer.c' object='objects/batch_sim-QCADLayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-QCADLayer.obj `if test -f 'objects/QCADLayer.c'; then $(CYGPATH_W) 'objects/QCADLayer.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADLayer.c'; fi`

objects/batch_sim-QCADClockingLayer.o: objects/QCADClockingLayer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-QCADClockingLayer.o -MD -MP -MF "objects/$(DEPDIR)/batch_sim-QCADClockingLayer.Tpo" -c -o objects/batch_sim-QCADClockingLayer.o `test -f 'objects/QCADClockingLayer.c' || echo '$(srcdir)/'`objects/QCADClockingLayer.c; \
	then mv -f "objects/$(DEPDIR)/batch_sim-QCADClockingLayer.Tpo" "objects/$(DEPDIR)/batch_sim-QCADClockingLayer.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-QCADClockingLayer.Tpo"; exit 1; fi
#	source='objects/QCADClockingLayer.c' object='objects/batch_sim-QCADClockingLayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-QCADClockingLayer.o `test -f 'objects/QCADClockingLayer.c' || echo '$(srcdir)/'`objects/QCADClockingLayer.c

objects/batch_sim-QCADClockingLayer.obj: objects/QCADClockingLayer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-QCADClockingLayer.obj -MD -MP -MF "objects/$(DEPDIR)/batch_sim-QCADClockingLayer.Tpo" -c -o objects/batch_sim-QCADClockingLayer.obj `if test -f 'objects/QCADClockingLayer.c'; then $(CYGPATH_W) 'objects/QCADClockingLayer.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADClockingLayer.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/batch_sim-QCADClockingLayer.Tpo" "objects/$(DEPDIR)/batch_sim-QCADClockingLayer.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-QCADClockingLayer.Tpo"; exit 1; fi
#	source='objects/QCADClockingLayer.c' object='objects/batch_sim-QCADClockingLayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-QCADClockingLayer.obj `if test -f 'objects/QCADClockingLayer.c'; then $(CYGPATH_W) 'objects/QCADClockingLayer.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADClockingLayer.c'; fi`

objects/batch_sim-QCADStretchyObject.o: objects/QCADStretchyObject.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-QCADStretchyObject.o -MD -MP -MF "objects/$(DEPDIR)/batch_sim-QCADStretchyObject.Tpo" -c -o objects/batch_sim-QCADStretchyObject.o `test -f 'objects/QCADStretchyObject.c' || echo '$(srcdir)/'`objects/QCADStretchyObject.c; \
	then mv -f "objects/$(DEPDIR)/batch_sim-QCADStretchyObject.Tpo" "objects/$(DEPDIR)/batch_sim-QCADStretchyObject.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-QCADStretchyObject.Tpo"; exit 1; fi
#	source='objects/QCADStretchyObject.c' object='objects/batch_sim-QCADStretchyObject.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-QCADStretchyObject.o `test -f 'objects/QCADStretchyObject.c' || echo '$(srcdir)/'`objects/QCADStretchyObject.c

objects/batch_sim-QCADStretchyObject.obj: objects/QCADStretchyObject.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-QCADStretchyObject.obj -MD -MP -MF "objects/$(DEPDIR)/batch_sim-QCADStretchyObject.Tpo" -c -o objects/batch_sim-QCADStretchyObject.obj `if test -f 'objects/QCADStretchyObject.c'; then $(CYGPATH_W) 'objects/QCADStretchyObject.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADStretchyObject.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/batch_sim-QCADStretchyObject.Tpo" "objects/$(DEPDIR)/batch_sim-QCADStretchyObject.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-QCADStretchyObject.Tpo"; exit 1; fi
#	source='objects/QCADStretchyObject.c' object='objects/batch_sim-QCADStretchyObject.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-QCADStretchyObject.obj `if test -f 'objects/QCADStretchyObject.c'; then $(CYGPATH_W) 'objects/QCADStretchyObject.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADStretchyObject.c'; fi`

objects/batch_sim-QCADElectrode.o: objects/QCADElectrode.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-QCADElectrode.o -MD -MP -MF "objects/$(DEPDIR)/batch_sim-QCADElectrode.Tpo" -c -o objects/batch_sim-QCADElectrode.o `test -f 'objects/QCADElectrode.c' || echo '$(srcdir)/'`objects/QCADElectrode.c; \
	then mv -f "objects/$(DEPDIR)/batch_sim-QCADElectrode.Tpo" "objects/$(DEPDIR)/batch_sim-QCADElectrode.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-QCADElectrode.Tpo"; exit 1; fi
#	source='objects/QCADElectrode.c' object='objects/batch_sim-QCADElectrode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-QCADElectrode.o `test -f 'objects/QCADElectrode.c' || echo '$(srcdir)/'`objects/QCADElectrode.c

objects/batch_sim-QCADElectrode.obj: objects/QCADElectrode.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-QCADElectrode.obj -MD -MP -MF "objects/$(DEPDIR)/batch_sim-QCADElectrode.Tpo" -c -o objects/batch_sim-QCADElectrode.obj `if test -f 'objects/QCADElectrode.c'; then $(CYGPATH_W) 'objects/QCADElectrode.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADElectrode.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/batch_sim-QCADElectrode.Tpo" "objects/$(DEPDIR)/batch_sim-QCADElectrode.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-QCADElectrode.Tpo"; exit 1; fi
#	source='objects/QCADElectrode.c' object='objects/batch_sim-QCADElectrode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-QCADElectrode.obj `if test -f 'objects/QCADElectrode.c'; then $(CYGPATH_W) 'objects/QCADElectrode.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADElectrode.c'; fi`

objects/batch_sim-QCADRectangleElectrode.o: objects/QCADRectangleElectrode.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-QCADRectangleElectrode.o -MD -MP -MF "objects/$(DEPDIR)/batch_sim-QCADRectangleElectrode.Tpo" -c -o objects/batch_sim-QCADRectangleElectrode.o `test -f 'objects/QCADRectangleElectrode.c' || echo '$(srcdir)/'`objects/QCADRectangleElectrode.c; \
	then mv -f "objects/$(DEPDIR)/batch_sim-QCADRectangleElectrode.Tpo" "objects/$(DEPDIR)/batch_sim-QCADRectangleElectrode.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-QCADRectangleElectrode.Tpo"; exit 1; fi
#	source='objects/QCADRectangleElectrode.c' object='objects/batch_sim-QCADRectangleElectrode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-QCADRectangleElectrode.o `test -f 'objects/QCADRectangleElectrode.c' || echo '$(srcdir)/'`objects/QCADRectangleElectrode.c

objects/batch_sim-QCADRectangleElectrode.obj: objects/QCADRectangleElectrode.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-QCADRectangleElectrode.obj -MD -MP -MF "objects/$(DEPDIR)/batch_sim-QCADRectangleElectrode.Tpo" -c -o objects/batch_sim-QCADRectangleElectrode.obj `if test -f 'objects/QCADRectangleElectrode.c'; then $(CYGPATH_W) 'objects/QCADRectangleElectrode.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADRectangleElectrode.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/batch_sim-QCADRectangleElectrode.Tpo" "objects/$(DEPDIR)/batch_sim-QCADRectangleElectrode.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-QCADRectangleElectrode.Tpo"; exit 1; fi
#	source='objects/QCADRectangleElectrode.c' object='objects/batch_sim-QCADRectangleElectrode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-QCADRectangleElectrode.obj `if test -f 'objects/QCADRectangleElectrode.c'; then $(CYGPATH_W) 'objects/QCADRectangleElectrode.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADRectangleElectrode.c'; fi`

objects/batch_sim-QCADSubstrate.o: objects/QCADSubstrate.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-QCADSubstrate.o -MD -MP -MF "objects/$(DEPDIR)/batch_sim-QCADSubstrate.Tpo" -c -o objects/batch_sim-QCADSubstrate.o `test -f 'objects/QCADSubstrate.c' || echo '$(srcdir)/'`objects/QCADSubstrate.c; \
	then mv -f "objects/$(DEPDIR)/batch_sim-QCADSubstrate.Tpo" "objects/$(DEPDIR)/batch_sim-QCADSubstrate.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-QCADSubstrate.Tpo"; exit 1; fi
#	source='objects/QCADSubstrate.c' object='objects/batch_sim-QCADSubstrate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-QCADSubstrate.o `test -f 'objects/QCADSubstrate.c' || echo '$(srcdir)/'`objects/QCADSubstrate.c

objects/batch_sim-QCADSubstrate.obj: objects/QCADSubstrate.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-QCADSubstrate.obj -MD -MP -MF "objects/$(DEPDIR)/batch_sim-QCADSubstrate.Tpo" -c -o objects/batch_sim-QCADSubstrate.obj `if test -f 'objects/QCADSubstrate.c'; then $(CYGPATH_W) 'objects/QCADSubstrate.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADSubstrate.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/batch_sim-QCADSubstrate.Tpo" "objects/$(DEPDIR)/batch_sim-QCADSubstrate.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-QCADSubstrate.Tpo"; exit 1; fi
#	source='objects/QCADSubstrate.c' object='objects/batch_sim-QCADSubstrate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-QCADSubstrate.obj `if test -f 'objects/QCADSubstrate.c'; then $(CYGPATH_W) 'objects/QCADSubstrate.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADSubstrate.c'; fi`

objects/batch_sim-QCADParamSpecObjectList.o: objects/QCADParamSpecObjectList.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-QCADParamSpecObjectList.o -MD -MP -MF "objects/$(DEPDIR)/batch_sim-QCADParamSpecObjectList.Tpo" -c -o objects/batch_sim-QCADParamSpecObjectList.o `test -f 'objects/QCADParamSpecObjectList.c' || echo '$(srcdir)/'`objects/QCADParamSpecObjectList.c; \
	then mv -f "objects/$(DEPDIR)/batch_sim-QCADParamSpecObjectList.Tpo" "objects/$(DEPDIR)/batch_sim-QCADParamSpecObjectList.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-QCADParamSpecObjectList.Tpo"; exit 1; fi
#	source='objects/QCADParamSpecObjectList.c' object='objects/batch_sim-QCADParamSpecObjectList.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-QCADParamSpecObjectList.o `test -f 'objects/QCADParamSpecObjectList.c' || echo '$(srcdir)/'`objects/QCADParamSpecObjectList.c

objects/batch_sim-QCADParamSpecObjectList.obj: objects/QCADParamSpecObjectList.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-QCADParamSpecObjectList.obj -MD -MP -MF "objects/$(DEPDIR)/batch_sim-QCADParamSpecObjectList.Tpo" -c -o objects/batch_sim-QCADParamSpecObjectList.obj `if test -f 'objects/QCADParamSpecObjectList.c'; then $(CYGPATH_W) 'objects/QCADParamSpecObjectList.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADParamSpecObjectList.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/batch_sim-QCADParamSpecObjectList.Tpo" "objects/$(DEPDIR)/batch_sim-QCADParamSpecObjectList.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-QCADParamSpecObjectList.Tpo"; exit 1; fi
#	source='objects/QCADParamSpecObjectList.c' object='objects/batch_sim-QCADParamSpecObjectList.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-QCADParamSpecObjectList.obj `if test -f 'objects/QCADParamSpecObjectList.c'; then $(CYGPATH_W) 'objects/QCADParamSpecObjectList.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADParamSpecObjectList.c'; fi`

objects/batch_sim-object_helpers.o: objects/object_helpers.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-object_helpers.o -MD -MP -MF "objects/$(DEPDIR)/batch_sim-object_helpers.Tpo" -c -o objects/batch_sim-object_helpers.o `test -f 'objects/object_helpers.c' || echo '$(srcdir)/'`objects/object_helpers.c; \
	then mv -f "objects/$(DEPDIR)/batch_sim-object_helpers.Tpo" "objects/$(DEPDIR)/batch_sim-object_helpers.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-object_helpers.Tpo"; exit 1; fi
#	source='objects/object_helpers.c' object='objects/batch_sim-object_helpers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-object_helpers.o `test -f 'objects/object_helpers.c' || echo '$(srcdir)/'`objects/object_helpers.c

objects/batch_sim-object_helpers.obj: objects/object_helpers.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT objects/batch_sim-object_helpers.obj -MD -MP -MF "objects/$(DEPDIR)/batch_sim-object_helpers.Tpo" -c -o objects/batch_sim-object_helpers.obj `if test -f 'objects/object_helpers.c'; then $(CYGPATH_W) 'objects/object_helpers.c'; else $(CYGPATH_W) '$(srcdir)/objects/object_helpers.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/batch_sim-object_helpers.Tpo" "objects/$(DEPDIR)/batch_sim-object_helpers.Po"; else rm -f "objects/$(DEPDIR)/batch_sim-object_helpers.Tpo"; exit 1; fi
#	source='objects/object_helpers.c' object='objects/batch_sim-object_helpers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o objects/batch_sim-object_helpers.obj `if test -f 'objects/object_helpers.c'; then $(CYGPATH_W) 'objects/object_helpers.c'; else $(CYGPATH_W) '$(srcdir)/objects/object_helpers.c'; fi`

batch_sim-simulation.o: simulation.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-simulation.o -MD -MP -MF "$(DEPDIR)/batch_sim-simulation.Tpo" -c -o batch_sim-simulation.o `test -f 'simulation.c' || echo '$(srcdir)/'`simulation.c; \
	then mv -f "$(DEPDIR)/batch_sim-simulation.Tpo" "$(DEPDIR)/batch_sim-simulation.Po"; else rm -f "$(DEPDIR)/batch_sim-simulation.Tpo"; exit 1; fi
#	source='simulation.c' object='batch_sim-simulation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-simulation.o `test -f 'simulation.c' || echo '$(srcdir)/'`simulation.c

batch_sim-simulation.obj: simulation.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-simulation.obj -MD -MP -MF "$(DEPDIR)/batch_sim-simulation.Tpo" -c -o batch_sim-simulation.obj `if test -f 'simulation.c'; then $(CYGPATH_W) 'simulation.c'; else $(CYGPATH_W) '$(srcdir)/simulation.c'; fi`; \
	then mv -f "$(DEPDIR)/batch_sim-simulation.Tpo" "$(DEPDIR)/batch_sim-simulation.Po"; else rm -f "$(DEPDIR)/batch_sim-simulation.Tpo"; exit 1; fi
#	source='simulation.c' object='batch_sim-simulation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-simulation.obj `if test -f 'simulation.c'; then $(CYGPATH_W) 'simulation.c'; else $(CYGPATH_W) '$(srcdir)/simulation.c'; fi`

batch_sim-bistable_simulation.o: bistable_simulation.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-bistable_simulation.o -MD -MP -MF "$(DEPDIR)/batch_sim-bistable_simulation.Tpo" -c -o batch_sim-bistable_simulation.o `test -f 'bistable_simulation.c' || echo '$(srcdir)/'`bistable_simulation.c; \
	then mv -f "$(DEPDIR)/batch_sim-bistable_simulation.Tpo" "$(DEPDIR)/batch_sim-bistable_simulation.Po"; else rm -f "$(DEPDIR)/batch_sim-bistable_simulation.Tpo"; exit 1; fi
#	source='bistable_simulation.c' object='batch_sim-bistable_simulation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-bistable_simulation.o `test -f 'bistable_simulation.c' || echo '$(srcdir)/'`bistable_simulation.c

batch_sim-bistable_simulation.obj: bistable_simulation.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-bistable_simulation.obj -MD -MP -MF "$(DEPDIR)/batch_sim-bistable_simulation.Tpo" -c -o batch_sim-bistable_simulation.obj `if test -f 'bistable_simulation.c'; then $(CYGPATH_W) 'bistable_simulation.c'; else $(CYGPATH_W) '$(srcdir)/bistable_simulation.c'; fi`; \
	then mv -f "$(DEPDIR)/batch_sim-bistable_simulation.Tpo" "$(DEPDIR)/batch_sim-bistable_simulation.Po"; else rm -f "$(DEPDIR)/batch_sim-bistable_simulation.Tpo"; exit 1; fi
#	source='bistable_simulation.c' object='batch_sim-bistable_simulation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-bistable_simulation.obj `if test -f 'bistable_simulation.c'; then $(CYGPATH_W) 'bistable_simulation.c'; else $(CYGPATH_W) '$(srcdir)/bistable_simulation.c'; fi`

batch_sim-coherence_vector.o: coherence_vector.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-coherence_vector.o -MD -MP -MF "$(DEPDIR)/batch_sim-coherence_vector.Tpo" -c -o batch_sim-coherence_vector.o `test -f 'coherence_vector.c' || echo '$(srcdir)/'`coherence_vector.c; \
	then mv -f "$(DEPDIR)/batch_sim-coherence_vector.Tpo" "$(DEPDIR)/batch_sim-coherence_vector.Po"; else rm -f "$(DEPDIR)/batch_sim-coherence_vector.Tpo"; exit 1; fi
#	source='coherence_vector.c' object='batch_sim-coherence_vector.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-coherence_vector.o `test -f 'coherence_vector.c' || echo '$(srcdir)/'`coherence_vector.c

batch_sim-coherence_vector.obj: coherence_vector.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-coherence_vector.obj -MD -MP -MF "$(DEPDIR)/batch_sim-coherence_vector.Tpo" -c -o batch_sim-coherence_vector.obj `if test -f 'coherence_vector.c'; then $(CYGPATH_W) 'coherence_vector.c'; else $(CYGPATH_W) '$(srcdir)/coherence_vector.c'; fi`; \
	then mv -f "$(DEPDIR)/batch_sim-coherence_vector.Tpo" "$(DEPDIR)/batch_sim-coherence_vector.Po"; else rm -f "$(DEPDIR)/batch_sim-coherence_vector.Tpo"; exit 1; fi
#	source='coherence_vector.c' object='batch_sim-coherence_vector.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-coherence_vector.obj `if test -f 'coherence_vector.c'; then $(CYGPATH_W) 'coherence_vector.c'; else $(CYGPATH_W) '$(srcdir)/coherence_vector.c'; fi`

batch_sim-semi_coherent.o: semi_coherent.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-semi_coherent.o -MD -MP -MF "$(DEPDIR)/batch_sim-semi_coherent.Tpo" -c -o batch_sim-semi_coherent.o `test -f 'semi_coherent.c' || echo '$(srcdir)/'`semi_coherent.c; \
	then mv -f "$(DEPDIR)/batch_sim-semi_coherent.Tpo" "$(DEPDIR)/batch_sim-semi_coherent.Po"; else rm -f "$(DEPDIR)/batch_sim-semi_coherent.Tpo"; exit 1; fi
#	source='semi_coherent.c' object='batch_sim-semi_coherent.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-semi_coherent.o `test -f 'semi_coherent.c' || echo '$(srcdir)/'`semi_coherent.c

batch_sim-semi_coherent.obj: semi_coherent.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-semi_coherent.obj -MD -MP -MF "$(DEPDIR)/batch_sim-semi_coherent.Tpo" -c -o batch_sim-semi_coherent.obj `if test -f 'semi_coherent.c'; then $(CYGPATH_W) 'semi_coherent.c'; else $(CYGPATH_W) '$(srcdir)/semi_coherent.c'; fi`; \
	then mv -f "$(DEPDIR)/batch_sim-semi_coherent.Tpo" "$(DEPDIR)/batch_sim-semi_coherent.Po"; else rm -f "$(DEPDIR)/batch_sim-semi_coherent.Tpo"; exit 1; fi
#	source='semi_coherent.c' object='batch_sim-semi_coherent.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-semi_coherent.obj `if test -f 'semi_coherent.c'; then $(CYGPATH_W) 'semi_coherent.c'; else $(CYGPATH_W) '$(srcdir)/semi_coherent.c'; fi`

batch_sim-ts_field_clock.o: ts_field_clock.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-ts_field_clock.o -MD -MP -MF "$(DEPDIR)/batch_sim-ts_field_clock.Tpo" -c -o batch_sim-ts_field_clock.o `test -f 'ts_field_clock.c' || echo '$(srcdir)/'`ts_field_clock.c; \
	then mv -f "$(DEPDIR)/batch_sim-ts_field_clock.Tpo" "$(DEPDIR)/batch_sim-ts_field_clock.Po"; else rm -f "$(DEPDIR)/batch_sim-ts_field_clock.Tpo"; exit 1; fi
#	source='ts_field_clock.c' object='batch_sim-ts_field_clock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-ts_field_clock.o `test -f 'ts_field_clock.c' || echo '$(srcdir)/'`ts_field_clock.c

batch_sim-ts_field_clock.obj: ts_field_clock.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-ts_field_clock.obj -MD -MP -MF "$(DEPDIR)/batch_sim-ts_field_clock.Tpo" -c -o batch_sim-ts_field_clock.obj `if test -f 'ts_field_clock.c'; then $(CYGPATH_W) 'ts_field_clock.c'; else $(CYGPATH_W) '$(srcdir)/ts_field_clock.c'; fi`; \
	then mv -f "$(DEPDIR)/batch_sim-ts_field_clock.Tpo" "$(DEPDIR)/batch_sim-ts_field_clock.Po"; else rm -f "$(DEPDIR)/batch_sim-ts_field_clock.Tpo"; exit 1; fi
#	source='ts_field_clock.c' object='batch_sim-ts_field_clock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-ts_field_clock.obj `if test -f 'ts_field_clock.c'; then $(CYGPATH_W) 'ts_field_clock.c'; else $(CYGPATH_W) '$(srcdir)/ts_field_clock.c'; fi`

batch_sim-three_state_coherence.o: three_state_coherence.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-three_state_coherence.o -MD -MP -MF "$(DEPDIR)/batch_sim-three_state_coherence.Tpo" -c -o batch_sim-three_state_coherence.o `test -f 'three_state_coherence.c' || echo '$(srcdir)/'`three_state_coherence.c; \
	then mv -f "$(DEPDIR)/batch_sim-three_state_coherence.Tpo" "$(DEPDIR)/batch_sim-three_state_coherence.Po"; else rm -f "$(DEPDIR)/batch_sim-three_state_coherence.Tpo"; exit 1; fi
#	source='three_state_coherence.c' object='batch_sim-three_state_coherence.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-three_state_coherence.o `test -f 'three_state_coherence.c' || echo '$(srcdir)/'`three_state_coherence.c

batch_sim-three_state_coherence.obj: three_state_coherence.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-three_state_coherence.obj -MD -MP -MF "$(DEPDIR)/batch_sim-three_state_coherence.Tpo" -c -o batch_sim-three_state_coherence.obj `if test -f 'three_state_coherence.c'; then $(CYGPATH_W) 'three_state_coherence.c'; else $(CYGPATH_W) '$(srcdir)/three_state_coherence.c'; fi`; \
	then mv -f "$(DEPDIR)/batch_sim-three_state_coherence.Tpo" "$(DEPDIR)/batch_sim-three_state_coherence.Po"; else rm -f "$(DEPDIR)/batch_sim-three_state_coherence.Tpo"; exit 1; fi
#	source='three_state_coherence.c' object='batch_sim-three_state_coherence.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-three_state_coherence.obj `if test -f 'three_state_coherence.c'; then $(CYGPATH_W) 'three_state_coherence.c'; else $(CYGPATH_W) '$(srcdir)/three_state_coherence.c'; fi`

batch_sim-matrixlib_3x3.o: matrixlib_3x3.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-matrixlib_3x3.o -MD -MP -MF "$(DEPDIR)/batch_sim-matrixlib_3x3.Tpo" -c -o batch_sim-matrixlib_3x3.o `test -f 'matrixlib_3x3.c' || echo '$(srcdir)/'`matrixlib_3x3.c; \
	then mv -f "$(DEPDIR)/batch_sim-matrixlib_3x3.Tpo" "$(DEPDIR)/batch_sim-matrixlib_3x3.Po"; else rm -f "$(DEPDIR)/batch_sim-matrixlib_3x3.Tpo"; exit 1; fi
#	source='matrixlib_3x3.c' object='batch_sim-matrixlib_3x3.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-matrixlib_3x3.o `test -f 'matrixlib_3x3.c' || echo '$(srcdir)/'`matrixlib_3x3.c

batch_sim-matrixlib_3x3.obj: matrixlib_3x3.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-matrixlib_3x3.obj -MD -MP -MF "$(DEPDIR)/batch_sim-matrixlib_3x3.Tpo" -c -o batch_sim-matrixlib_3x3.obj `if test -f 'matrixlib_3x3.c'; then $(CYGPATH_W) 'matrixlib_3x3.c'; else $(CYGPATH_W) '$(srcdir)/matrixlib_3x3.c'; fi`; \
	then mv -f "$(DEPDIR)/batch_sim-matrixlib_3x3.Tpo" "$(DEPDIR)/batch_sim-matrixlib_3x3.Po"; else rm -f "$(DEPDIR)/batch_sim-matrixlib_3x3.Tpo"; exit 1; fi
#	source='matrixlib_3x3.c' object='batch_sim-matrixlib_3x3.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-matrixlib_3x3.obj `if test -f 'matrixlib_3x3.c'; then $(CYGPATH_W) 'matrixlib_3x3.c'; else $(CYGPATH_W) '$(srcdir)/matrixlib_3x3.c'; fi`

batch_sim-fileio.o: fileio.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-fileio.o -MD -MP -MF "$(DEPDIR)/batch_sim-fileio.Tpo" -c -o batch_sim-fileio.o `test -f 'fileio.c' || echo '$(srcdir)/'`fileio.c; \
	then mv -f "$(DEPDIR)/batch_sim-fileio.Tpo" "$(DEPDIR)/batch_sim-fileio.Po"; else rm -f "$(DEPDIR)/batch_sim-fileio.Tpo"; exit 1; fi
#	source='fileio.c' object='batch_sim-fileio.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-fileio.o `test -f 'fileio.c' || echo '$(srcdir)/'`fileio.c

batch_sim-fileio.obj: fileio.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-fileio.obj -MD -MP -MF "$(DEPDIR)/batch_sim-fileio.Tpo" -c -o batch_sim-fileio.obj `if test -f 'fileio.c'; then $(CYGPATH_W) 'fileio.c'; else $(CYGPATH_W) '$(srcdir)/fileio.c'; fi`; \
	then mv -f "$(DEPDIR)/batch_sim-fileio.Tpo" "$(DEPDIR)/batch_sim-fileio.Po"; else rm -f "$(DEPDIR)/batch_sim-fileio.Tpo"; exit 1; fi
#	source='fileio.c' object='batch_sim-fileio.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-fileio.obj `if test -f 'fileio.c'; then $(CYGPATH_W) 'fileio.c'; else $(CYGPATH_W) '$(srcdir)/fileio.c'; fi`

batch_sim-simulation_data.o: simulation_data.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-simulation_data.o -MD -MP -MF "$(DEPDIR)/batch_sim-simulation_data.Tpo" -c -o batch_sim-simulation_data.o `test -f 'simulation_data.c' || echo '$(srcdir)/'`simulation_data.c; \
	then mv -f "$(DEPDIR)/batch_sim-simulation_data.Tpo" "$(DEPDIR)/batch_sim-simulation_data.Po"; else rm -f "$(DEPDIR)/batch_sim-simulation_data.Tpo"; exit 1; fi
#	source='simulation_data.c' object='batch_sim-simulation_data.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-simulation_data.o `test -f 'simulation_data.c' || echo '$(srcdir)/'`simulation_data.c

batch_sim-simulation_data.obj: simulation_data.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-simulation_data.obj -MD -MP -MF "$(DEPDIR)/batch_sim-simulation_data.Tpo" -c -o batch_sim-simulation_data.obj `if test -f 'simulation_data.c'; then $(CYGPATH_W) 'simulation_data.c'; else $(CYGPATH_W) '$(srcdir)/simulation_data.c'; fi`; \
	then mv -f "$(DEPDIR)/batch_sim-simulation_data.Tpo" "$(DEPDIR)/batch_sim-simulation_data.Po"; else rm -f "$(DEPDIR)/batch_sim-simulation_data.Tpo"; exit 1; fi
#	source='simulation_data.c' object='batch_sim-simulation_data.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-simulation_data.obj `if test -f 'simulation_data.c'; then $(CYGPATH_W) 'simulation_data.c'; else $(CYGPATH_W) '$(srcdir)/simulation_data.c'; fi`

batch_sim-graph_dialog_widget_data.o: graph_dialog_widget_data.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-graph_dialog_widget_data.o -MD -MP -MF "$(DEPDIR)/batch_sim-graph_dialog_widget_data.Tpo" -c -o batch_sim-graph_dialog_widget_data.o `test -f 'graph_dialog_widget_data.c' || echo '$(srcdir)/'`graph_dialog_widget_data.c; \
	then mv -f "$(DEPDIR)/batch_sim-graph_dialog_widget_data.Tpo" "$(DEPDIR)/batch_sim-graph_dialog_widget_data.Po"; else rm -f "$(DEPDIR)/batch_sim-graph_dialog_widget_data.Tpo"; exit 1; fi
#	source='graph_dialog_widget_data.c' object='batch_sim-graph_dialog_widget_data.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-graph_dialog_widget_data.o `test -f 'graph_dialog_widget_data.c' || echo '$(srcdir)/'`graph_dialog_widget_data.c

batch_sim-graph_dialog_widget_data.obj: graph_dialog_widget_data.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-graph_dialog_widget_data.obj -MD -MP -MF "$(DEPDIR)/batch_sim-graph_dialog_widget_data.Tpo" -c -o batch_sim-graph_dialog_widget_data.obj `if test -f 'graph_dialog_widget_data.c'; then $(CYGPATH_W) 'graph_dialog_widget_data.c'; else $(CYGPATH_W) '$(srcdir)/graph_dialog_widget_data.c'; fi`; \
	then mv -f "$(DEPDIR)/batch_sim-graph_dialog_widget_data.Tpo" "$(DEPDIR)/batch_sim-graph_dialog_widget_data.Po"; else rm -f "$(DEPDIR)/batch_sim-graph_dialog_widget_data.Tpo"; exit 1; fi
#	source='graph_dialog_widget_data.c' object='batch_sim-graph_dialog_widget_data.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-graph_dialog_widget_data.obj `if test -f 'graph_dialog_widget_data.c'; then $(CYGPATH_W) 'graph_dialog_widget_data.c'; else $(CYGPATH_W) '$(srcdir)/graph_dialog_widget_data.c'; fi`

batch_sim-vector_table.o: vector_table.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-vector_table.o -MD -MP -MF "$(DEPDIR)/batch_sim-vector_table.Tpo" -c -o batch_sim-vector_table.o `test -f 'vector_table.c' || echo '$(srcdir)/'`vector_table.c; \
	then mv -f "$(DEPDIR)/batch_sim-vector_table.Tpo" "$(DEPDIR)/batch_sim-vector_table.Po"; else rm -f "$(DEPDIR)/batch_sim-vector_table.Tpo"; exit 1; fi
#	source='vector_table.c' object='batch_sim-vector_table.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-vector_table.o `test -f 'vector_table.c' || echo '$(srcdir)/'`vector_table.c

batch_sim-vector_table.obj: vector_table.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-vector_table.obj -MD -MP -MF "$(DEPDIR)/batch_sim-vector_table.Tpo" -c -o batch_sim-vector_table.obj `if test -f 'vector_table.c'; then $(CYGPATH_W) 'vector_table.c'; else $(CYGPATH_W) '$(srcdir)/vector_table.c'; fi`; \
	then mv -f "$(DEPDIR)/batch_sim-vector_table.Tpo" "$(DEPDIR)/batch_sim-vector_table.Po"; else rm -f "$(DEPDIR)/batch_sim-vector_table.Tpo"; exit 1; fi
#	source='vector_table.c' object='batch_sim-vector_table.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-vector_table.obj `if test -f 'vector_table.c'; then $(CYGPATH_W) 'vector_table.c'; else $(CYGPATH_W) '$(srcdir)/vector_table.c'; fi`

batch_sim-preamble.o: preamble.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-preamble.o -MD -MP -MF "$(DEPDIR)/batch_sim-preamble.Tpo" -c -o batch_sim-preamble.o `test -f 'preamble.c' || echo '$(srcdir)/'`preamble.c; \
	then mv -f "$(DEPDIR)/batch_sim-preamble.Tpo" "$(DEPDIR)/batch_sim-preamble.Po"; else rm -f "$(DEPDIR)/batch_sim-preamble.Tpo"; exit 1; fi
#	source='preamble.c' object='batch_sim-preamble.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-preamble.o `test -f 'preamble.c' || echo '$(srcdir)/'`preamble.c

batch_sim-preamble.obj: preamble.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-preamble.obj -MD -MP -MF "$(DEPDIR)/batch_sim-preamble.Tpo" -c -o batch_sim-preamble.obj `if test -f 'preamble.c'; then $(CYGPATH_W) 'preamble.c'; else $(CYGPATH_W) '$(srcdir)/preamble.c'; fi`; \
	then mv -f "$(DEPDIR)/batch_sim-preamble.Tpo" "$(DEPDIR)/batch_sim-preamble.Po"; else rm -f "$(DEPDIR)/batch_sim-preamble.Tpo"; exit 1; fi
#	source='preamble.c' object='batch_sim-preamble.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-preamble.obj `if test -f 'preamble.c'; then $(CYGPATH_W) 'preamble.c'; else $(CYGPATH_W) '$(srcdir)/preamble.c'; fi`

batch_sim-main_batch_sim.o: main_batch_sim.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-main_batch_sim.o -MD -MP -MF "$(DEPDIR)/batch_sim-main_batch_sim.Tpo" -c -o batch_sim-main_batch_sim.o `test -f 'main_batch_sim.c' || echo '$(srcdir)/'`main_batch_sim.c; \
	then mv -f "$(DEPDIR)/batch_sim-main_batch_sim.Tpo" "$(DEPDIR)/batch_sim-main_batch_sim.Po"; else rm -f "$(DEPDIR)/batch_sim-main_batch_sim.Tpo"; exit 1; fi
#	source='main_batch_sim.c' object='batch_sim-main_batch_sim.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-main_batch_sim.o `test -f 'main_batch_sim.c' || echo '$(srcdir)/'`main_batch_sim.c

batch_sim-main_batch_sim.obj: main_batch_sim.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -MT batch_sim-main_batch_sim.obj -MD -MP -MF "$(DEPDIR)/batch_sim-main_batch_sim.Tpo" -c -o batch_sim-main_batch_sim.obj `if test -f 'main_batch_sim.c'; then $(CYGPATH_W) 'main_batch_sim.c'; else $(CYGPATH_W) '$(srcdir)/main_batch_sim.c'; fi`; \
	then mv -f "$(DEPDIR)/batch_sim-main_batch_sim.Tpo" "$(DEPDIR)/batch_sim-main_batch_sim.Po"; else rm -f "$(DEPDIR)/batch_sim-main_batch_sim.Tpo"; exit 1; fi
#	source='main_batch_sim.c' object='batch_sim-main_batch_sim.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(batch_sim_CFLAGS) $(CFLAGS) -c -o batch_sim-main_batch_sim.obj `if test -f 'main_batch_sim.c'; then $(CYGPATH_W) 'main_batch_sim.c'; else $(CYGPATH_W) '$(srcdir)/main_batch_sim.c'; fi`

objects/combo_test-QCADFlexiCombo.o: objects/QCADFlexiCombo.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADFlexiCombo.o -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADFlexiCombo.Tpo" -c -o objects/combo_test-QCADFlexiCombo.o `test -f 'objects/QCADFlexiCombo.c' || echo '$(srcdir)/'`objects/QCADFlexiCombo.c; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADFlexiCombo.Tpo" "objects/$(DEPDIR)/combo_test-QCADFlexiCombo.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADFlexiCombo.Tpo"; exit 1; fi
#	source='objects/QCADFlexiCombo.c' object='objects/combo_test-QCADFlexiCombo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADFlexiCombo.o `test -f 'objects/QCADFlexiCombo.c' || echo '$(srcdir)/'`objects/QCADFlexiCombo.c

objects/combo_test-QCADFlexiCombo.obj: objects/QCADFlexiCombo.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADFlexiCombo.obj -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADFlexiCombo.Tpo" -c -o objects/combo_test-QCADFlexiCombo.obj `if test -f 'objects/QCADFlexiCombo.c'; then $(CYGPATH_W) 'objects/QCADFlexiCombo.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADFlexiCombo.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADFlexiCombo.Tpo" "objects/$(DEPDIR)/combo_test-QCADFlexiCombo.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADFlexiCombo.Tpo"; exit 1; fi
#	source='objects/QCADFlexiCombo.c' object='objects/combo_test-QCADFlexiCombo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADFlexiCombo.obj `if test -f 'objects/QCADFlexiCombo.c'; then $(CYGPATH_W) 'objects/QCADFlexiCombo.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADFlexiCombo.c'; fi`

objects/combo_test-QCADLayersCombo.o: objects/QCADLayersCombo.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADLayersCombo.o -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADLayersCombo.Tpo" -c -o objects/combo_test-QCADLayersCombo.o `test -f 'objects/QCADLayersCombo.c' || echo '$(srcdir)/'`objects/QCADLayersCombo.c; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADLayersCombo.Tpo" "objects/$(DEPDIR)/combo_test-QCADLayersCombo.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADLayersCombo.Tpo"; exit 1; fi
#	source='objects/QCADLayersCombo.c' object='objects/combo_test-QCADLayersCombo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADLayersCombo.o `test -f 'objects/QCADLayersCombo.c' || echo '$(srcdir)/'`objects/QCADLayersCombo.c

objects/combo_test-QCADLayersCombo.obj: objects/QCADLayersCombo.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADLayersCombo.obj -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADLayersCombo.Tpo" -c -o objects/combo_test-QCADLayersCombo.obj `if test -f 'objects/QCADLayersCombo.c'; then $(CYGPATH_W) 'objects/QCADLayersCombo.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADLayersCombo.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADLayersCombo.Tpo" "objects/$(DEPDIR)/combo_test-QCADLayersCombo.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADLayersCombo.Tpo"; exit 1; fi
#	source='objects/QCADLayersCombo.c' object='objects/combo_test-QCADLayersCombo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADLayersCombo.obj `if test -f 'objects/QCADLayersCombo.c'; then $(CYGPATH_W) 'objects/QCADLayersCombo.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADLayersCombo.c'; fi`

objects/combo_test-QCADCellRendererText.o: objects/QCADCellRendererText.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADCellRendererText.o -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADCellRendererText.Tpo" -c -o objects/combo_test-QCADCellRendererText.o `test -f 'objects/QCADCellRendererText.c' || echo '$(srcdir)/'`objects/QCADCellRendererText.c; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADCellRendererText.Tpo" "objects/$(DEPDIR)/combo_test-QCADCellRendererText.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADCellRendererText.Tpo"; exit 1; fi
#	source='objects/QCADCellRendererText.c' object='objects/combo_test-QCADCellRendererText.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADCellRendererText.o `test -f 'objects/QCADCellRendererText.c' || echo '$(srcdir)/'`objects/QCADCellRendererText.c

objects/combo_test-QCADCellRendererText.obj: objects/QCADCellRendererText.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADCellRendererText.obj -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADCellRendererText.Tpo" -c -o objects/combo_test-QCADCellRendererText.obj `if test -f 'objects/QCADCellRendererText.c'; then $(CYGPATH_W) 'objects/QCADCellRendererText.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADCellRendererText.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADCellRendererText.Tpo" "objects/$(DEPDIR)/combo_test-QCADCellRendererText.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADCellRendererText.Tpo"; exit 1; fi
#	source='objects/QCADCellRendererText.c' object='objects/combo_test-QCADCellRendererText.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADCellRendererText.obj `if test -f 'objects/QCADCellRendererText.c'; then $(CYGPATH_W) 'objects/QCADCellRendererText.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADCellRendererText.c'; fi`

objects/combo_test-QCADCellRendererVT.o: objects/QCADCellRendererVT.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADCellRendererVT.o -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADCellRendererVT.Tpo" -c -o objects/combo_test-QCADCellRendererVT.o `test -f 'objects/QCADCellRendererVT.c' || echo '$(srcdir)/'`objects/QCADCellRendererVT.c; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADCellRendererVT.Tpo" "objects/$(DEPDIR)/combo_test-QCADCellRendererVT.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADCellRendererVT.Tpo"; exit 1; fi
#	source='objects/QCADCellRendererVT.c' object='objects/combo_test-QCADCellRendererVT.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADCellRendererVT.o `test -f 'objects/QCADCellRendererVT.c' || echo '$(srcdir)/'`objects/QCADCellRendererVT.c

objects/combo_test-QCADCellRendererVT.obj: objects/QCADCellRendererVT.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADCellRendererVT.obj -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADCellRendererVT.Tpo" -c -o objects/combo_test-QCADCellRendererVT.obj `if test -f 'objects/QCADCellRendererVT.c'; then $(CYGPATH_W) 'objects/QCADCellRendererVT.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADCellRendererVT.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADCellRendererVT.Tpo" "objects/$(DEPDIR)/combo_test-QCADCellRendererVT.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADCellRendererVT.Tpo"; exit 1; fi
#	source='objects/QCADCellRendererVT.c' object='objects/combo_test-QCADCellRendererVT.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADCellRendererVT.obj `if test -f 'objects/QCADCellRendererVT.c'; then $(CYGPATH_W) 'objects/QCADCellRendererVT.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADCellRendererVT.c'; fi`

combo_test-fileio_helpers.o: fileio_helpers.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT combo_test-fileio_helpers.o -MD -MP -MF "$(DEPDIR)/combo_test-fileio_helpers.Tpo" -c -o combo_test-fileio_helpers.o `test -f 'fileio_helpers.c' || echo '$(srcdir)/'`fileio_helpers.c; \
	then mv -f "$(DEPDIR)/combo_test-fileio_helpers.Tpo" "$(DEPDIR)/combo_test-fileio_helpers.Po"; else rm -f "$(DEPDIR)/combo_test-fileio_helpers.Tpo"; exit 1; fi
#	source='fileio_helpers.c' object='combo_test-fileio_helpers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o combo_test-fileio_helpers.o `test -f 'fileio_helpers.c' || echo '$(srcdir)/'`fileio_helpers.c

combo_test-fileio_helpers.obj: fileio_helpers.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT combo_test-fileio_helpers.obj -MD -MP -MF "$(DEPDIR)/combo_test-fileio_helpers.Tpo" -c -o combo_test-fileio_helpers.obj `if test -f 'fileio_helpers.c'; then $(CYGPATH_W) 'fileio_helpers.c'; else $(CYGPATH_W) '$(srcdir)/fileio_helpers.c'; fi`; \
	then mv -f "$(DEPDIR)/combo_test-fileio_helpers.Tpo" "$(DEPDIR)/combo_test-fileio_helpers.Po"; else rm -f "$(DEPDIR)/combo_test-fileio_helpers.Tpo"; exit 1; fi
#	source='fileio_helpers.c' object='combo_test-fileio_helpers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o combo_test-fileio_helpers.obj `if test -f 'fileio_helpers.c'; then $(CYGPATH_W) 'fileio_helpers.c'; else $(CYGPATH_W) '$(srcdir)/fileio_helpers.c'; fi`

combo_test-generic_utils.o: generic_utils.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT combo_test-generic_utils.o -MD -MP -MF "$(DEPDIR)/combo_test-generic_utils.Tpo" -c -o combo_test-generic_utils.o `test -f 'generic_utils.c' || echo '$(srcdir)/'`generic_utils.c; \
	then mv -f "$(DEPDIR)/combo_test-generic_utils.Tpo" "$(DEPDIR)/combo_test-generic_utils.Po"; else rm -f "$(DEPDIR)/combo_test-generic_utils.Tpo"; exit 1; fi
#	source='generic_utils.c' object='combo_test-generic_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o combo_test-generic_utils.o `test -f 'generic_utils.c' || echo '$(srcdir)/'`generic_utils.c

combo_test-generic_utils.obj: generic_utils.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT combo_test-generic_utils.obj -MD -MP -MF "$(DEPDIR)/combo_test-generic_utils.Tpo" -c -o combo_test-generic_utils.obj `if test -f 'generic_utils.c'; then $(CYGPATH_W) 'generic_utils.c'; else $(CYGPATH_W) '$(srcdir)/generic_utils.c'; fi`; \
	then mv -f "$(DEPDIR)/combo_test-generic_utils.Tpo" "$(DEPDIR)/combo_test-generic_utils.Po"; else rm -f "$(DEPDIR)/combo_test-generic_utils.Tpo"; exit 1; fi
#	source='generic_utils.c' object='combo_test-generic_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o combo_test-generic_utils.obj `if test -f 'generic_utils.c'; then $(CYGPATH_W) 'generic_utils.c'; else $(CYGPATH_W) '$(srcdir)/generic_utils.c'; fi`

combo_test-exp_array.o: exp_array.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT combo_test-exp_array.o -MD -MP -MF "$(DEPDIR)/combo_test-exp_array.Tpo" -c -o combo_test-exp_array.o `test -f 'exp_array.c' || echo '$(srcdir)/'`exp_array.c; \
	then mv -f "$(DEPDIR)/combo_test-exp_array.Tpo" "$(DEPDIR)/combo_test-exp_array.Po"; else rm -f "$(DEPDIR)/combo_test-exp_array.Tpo"; exit 1; fi
#	source='exp_array.c' object='combo_test-exp_array.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o combo_test-exp_array.o `test -f 'exp_array.c' || echo '$(srcdir)/'`exp_array.c

combo_test-exp_array.obj: exp_array.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT combo_test-exp_array.obj -MD -MP -MF "$(DEPDIR)/combo_test-exp_array.Tpo" -c -o combo_test-exp_array.obj `if test -f 'exp_array.c'; then $(CYGPATH_W) 'exp_array.c'; else $(CYGPATH_W) '$(srcdir)/exp_array.c'; fi`; \
	then mv -f "$(DEPDIR)/combo_test-exp_array.Tpo" "$(DEPDIR)/combo_test-exp_array.Po"; else rm -f "$(DEPDIR)/combo_test-exp_array.Tpo"; exit 1; fi
#	source='exp_array.c' object='combo_test-exp_array.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o combo_test-exp_array.obj `if test -f 'exp_array.c'; then $(CYGPATH_W) 'exp_array.c'; else $(CYGPATH_W) '$(srcdir)/exp_array.c'; fi`

combo_test-hsl2rgb.o: hsl2rgb.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT combo_test-hsl2rgb.o -MD -MP -MF "$(DEPDIR)/combo_test-hsl2rgb.Tpo" -c -o combo_test-hsl2rgb.o `test -f 'hsl2rgb.c' || echo '$(srcdir)/'`hsl2rgb.c; \
	then mv -f "$(DEPDIR)/combo_test-hsl2rgb.Tpo" "$(DEPDIR)/combo_test-hsl2rgb.Po"; else rm -f "$(DEPDIR)/combo_test-hsl2rgb.Tpo"; exit 1; fi
#	source='hsl2rgb.c' object='combo_test-hsl2rgb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o combo_test-hsl2rgb.o `test -f 'hsl2rgb.c' || echo '$(srcdir)/'`hsl2rgb.c

combo_test-hsl2rgb.obj: hsl2rgb.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT combo_test-hsl2rgb.obj -MD -MP -MF "$(DEPDIR)/combo_test-hsl2rgb.Tpo" -c -o combo_test-hsl2rgb.obj `if test -f 'hsl2rgb.c'; then $(CYGPATH_W) 'hsl2rgb.c'; else $(CYGPATH_W) '$(srcdir)/hsl2rgb.c'; fi`; \
	then mv -f "$(DEPDIR)/combo_test-hsl2rgb.Tpo" "$(DEPDIR)/combo_test-hsl2rgb.Po"; else rm -f "$(DEPDIR)/combo_test-hsl2rgb.Tpo"; exit 1; fi
#	source='hsl2rgb.c' object='combo_test-hsl2rgb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o combo_test-hsl2rgb.obj `if test -f 'hsl2rgb.c'; then $(CYGPATH_W) 'hsl2rgb.c'; else $(CYGPATH_W) '$(srcdir)/hsl2rgb.c'; fi`

combo_test-custom_widgets.o: custom_widgets.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT combo_test-custom_widgets.o -MD -MP -MF "$(DEPDIR)/combo_test-custom_widgets.Tpo" -c -o combo_test-custom_widgets.o `test -f 'custom_widgets.c' || echo '$(srcdir)/'`custom_widgets.c; \
	then mv -f "$(DEPDIR)/combo_test-custom_widgets.Tpo" "$(DEPDIR)/combo_test-custom_widgets.Po"; else rm -f "$(DEPDIR)/combo_test-custom_widgets.Tpo"; exit 1; fi
#	source='custom_widgets.c' object='combo_test-custom_widgets.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o combo_test-custom_widgets.o `test -f 'custom_widgets.c' || echo '$(srcdir)/'`custom_widgets.c

combo_test-custom_widgets.obj: custom_widgets.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT combo_test-custom_widgets.obj -MD -MP -MF "$(DEPDIR)/combo_test-custom_widgets.Tpo" -c -o combo_test-custom_widgets.obj `if test -f 'custom_widgets.c'; then $(CYGPATH_W) 'custom_widgets.c'; else $(CYGPATH_W) '$(srcdir)/custom_widgets.c'; fi`; \
	then mv -f "$(DEPDIR)/combo_test-custom_widgets.Tpo" "$(DEPDIR)/combo_test-custom_widgets.Po"; else rm -f "$(DEPDIR)/combo_test-custom_widgets.Tpo"; exit 1; fi
#	source='custom_widgets.c' object='combo_test-custom_widgets.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o combo_test-custom_widgets.obj `if test -f 'custom_widgets.c'; then $(CYGPATH_W) 'custom_widgets.c'; else $(CYGPATH_W) '$(srcdir)/custom_widgets.c'; fi`

combo_test-fileio.o: fileio.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT combo_test-fileio.o -MD -MP -MF "$(DEPDIR)/combo_test-fileio.Tpo" -c -o combo_test-fileio.o `test -f 'fileio.c' || echo '$(srcdir)/'`fileio.c; \
	then mv -f "$(DEPDIR)/combo_test-fileio.Tpo" "$(DEPDIR)/combo_test-fileio.Po"; else rm -f "$(DEPDIR)/combo_test-fileio.Tpo"; exit 1; fi
#	source='fileio.c' object='combo_test-fileio.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o combo_test-fileio.o `test -f 'fileio.c' || echo '$(srcdir)/'`fileio.c

combo_test-fileio.obj: fileio.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT combo_test-fileio.obj -MD -MP -MF "$(DEPDIR)/combo_test-fileio.Tpo" -c -o combo_test-fileio.obj `if test -f 'fileio.c'; then $(CYGPATH_W) 'fileio.c'; else $(CYGPATH_W) '$(srcdir)/fileio.c'; fi`; \
	then mv -f "$(DEPDIR)/combo_test-fileio.Tpo" "$(DEPDIR)/combo_test-fileio.Po"; else rm -f "$(DEPDIR)/combo_test-fileio.Tpo"; exit 1; fi
#	source='fileio.c' object='combo_test-fileio.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o combo_test-fileio.obj `if test -f 'fileio.c'; then $(CYGPATH_W) 'fileio.c'; else $(CYGPATH_W) '$(srcdir)/fileio.c'; fi`

combo_test-design.o: design.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT combo_test-design.o -MD -MP -MF "$(DEPDIR)/combo_test-design.Tpo" -c -o combo_test-design.o `test -f 'design.c' || echo '$(srcdir)/'`design.c; \
	then mv -f "$(DEPDIR)/combo_test-design.Tpo" "$(DEPDIR)/combo_test-design.Po"; else rm -f "$(DEPDIR)/combo_test-design.Tpo"; exit 1; fi
#	source='design.c' object='combo_test-design.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o combo_test-design.o `test -f 'design.c' || echo '$(srcdir)/'`design.c

combo_test-design.obj: design.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT combo_test-design.obj -MD -MP -MF "$(DEPDIR)/combo_test-design.Tpo" -c -o combo_test-design.obj `if test -f 'design.c'; then $(CYGPATH_W) 'design.c'; else $(CYGPATH_W) '$(srcdir)/design.c'; fi`; \
	then mv -f "$(DEPDIR)/combo_test-design.Tpo" "$(DEPDIR)/combo_test-design.Po"; else rm -f "$(DEPDIR)/combo_test-design.Tpo"; exit 1; fi
#	source='design.c' object='combo_test-design.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o combo_test-design.obj `if test -f 'design.c'; then $(CYGPATH_W) 'design.c'; else $(CYGPATH_W) '$(srcdir)/design.c'; fi`

objects/combo_test-QCADRuler.o: objects/QCADRuler.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADRuler.o -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADRuler.Tpo" -c -o objects/combo_test-QCADRuler.o `test -f 'objects/QCADRuler.c' || echo '$(srcdir)/'`objects/QCADRuler.c; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADRuler.Tpo" "objects/$(DEPDIR)/combo_test-QCADRuler.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADRuler.Tpo"; exit 1; fi
#	source='objects/QCADRuler.c' object='objects/combo_test-QCADRuler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADRuler.o `test -f 'objects/QCADRuler.c' || echo '$(srcdir)/'`objects/QCADRuler.c

objects/combo_test-QCADRuler.obj: objects/QCADRuler.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADRuler.obj -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADRuler.Tpo" -c -o objects/combo_test-QCADRuler.obj `if test -f 'objects/QCADRuler.c'; then $(CYGPATH_W) 'objects/QCADRuler.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADRuler.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADRuler.Tpo" "objects/$(DEPDIR)/combo_test-QCADRuler.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADRuler.Tpo"; exit 1; fi
#	source='objects/QCADRuler.c' object='objects/combo_test-QCADRuler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADRuler.obj `if test -f 'objects/QCADRuler.c'; then $(CYGPATH_W) 'objects/QCADRuler.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADRuler.c'; fi`

objects/combo_test-QCADCell.o: objects/QCADCell.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADCell.o -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADCell.Tpo" -c -o objects/combo_test-QCADCell.o `test -f 'objects/QCADCell.c' || echo '$(srcdir)/'`objects/QCADCell.c; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADCell.Tpo" "objects/$(DEPDIR)/combo_test-QCADCell.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADCell.Tpo"; exit 1; fi
#	source='objects/QCADCell.c' object='objects/combo_test-QCADCell.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADCell.o `test -f 'objects/QCADCell.c' || echo '$(srcdir)/'`objects/QCADCell.c

objects/combo_test-QCADCell.obj: objects/QCADCell.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADCell.obj -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADCell.Tpo" -c -o objects/combo_test-QCADCell.obj `if test -f 'objects/QCADCell.c'; then $(CYGPATH_W) 'objects/QCADCell.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADCell.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADCell.Tpo" "objects/$(DEPDIR)/combo_test-QCADCell.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADCell.Tpo"; exit 1; fi
#	source='objects/QCADCell.c' object='objects/combo_test-QCADCell.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADCell.obj `if test -f 'objects/QCADCell.c'; then $(CYGPATH_W) 'objects/QCADCell.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADCell.c'; fi`

objects/combo_test-QCADCompoundDO.o: objects/QCADCompoundDO.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADCompoundDO.o -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADCompoundDO.Tpo" -c -o objects/combo_test-QCADCompoundDO.o `test -f 'objects/QCADCompoundDO.c' || echo '$(srcdir)/'`objects/QCADCompoundDO.c; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADCompoundDO.Tpo" "objects/$(DEPDIR)/combo_test-QCADCompoundDO.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADCompoundDO.Tpo"; exit 1; fi
#	source='objects/QCADCompoundDO.c' object='objects/combo_test-QCADCompoundDO.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADCompoundDO.o `test -f 'objects/QCADCompoundDO.c' || echo '$(srcdir)/'`objects/QCADCompoundDO.c

objects/combo_test-QCADCompoundDO.obj: objects/QCADCompoundDO.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADCompoundDO.obj -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADCompoundDO.Tpo" -c -o objects/combo_test-QCADCompoundDO.obj `if test -f 'objects/QCADCompoundDO.c'; then $(CYGPATH_W) 'objects/QCADCompoundDO.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADCompoundDO.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADCompoundDO.Tpo" "objects/$(DEPDIR)/combo_test-QCADCompoundDO.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADCompoundDO.Tpo"; exit 1; fi
#	source='objects/QCADCompoundDO.c' object='objects/combo_test-QCADCompoundDO.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADCompoundDO.obj `if test -f 'objects/QCADCompoundDO.c'; then $(CYGPATH_W) 'objects/QCADCompoundDO.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADCompoundDO.c'; fi`

objects/combo_test-QCADObject.o: objects/QCADObject.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADObject.o -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADObject.Tpo" -c -o objects/combo_test-QCADObject.o `test -f 'objects/QCADObject.c' || echo '$(srcdir)/'`objects/QCADObject.c; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADObject.Tpo" "objects/$(DEPDIR)/combo_test-QCADObject.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADObject.Tpo"; exit 1; fi
#	source='objects/QCADObject.c' object='objects/combo_test-QCADObject.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADObject.o `test -f 'objects/QCADObject.c' || echo '$(srcdir)/'`objects/QCADObject.c

objects/combo_test-QCADObject.obj: objects/QCADObject.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADObject.obj -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADObject.Tpo" -c -o objects/combo_test-QCADObject.obj `if test -f 'objects/QCADObject.c'; then $(CYGPATH_W) 'objects/QCADObject.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADObject.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADObject.Tpo" "objects/$(DEPDIR)/combo_test-QCADObject.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADObject.Tpo"; exit 1; fi
#	source='objects/QCADObject.c' object='objects/combo_test-QCADObject.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADObject.obj `if test -f 'objects/QCADObject.c'; then $(CYGPATH_W) 'objects/QCADObject.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADObject.c'; fi`

objects/combo_test-QCADDesignObject.o: objects/QCADDesignObject.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADDesignObject.o -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADDesignObject.Tpo" -c -o objects/combo_test-QCADDesignObject.o `test -f 'objects/QCADDesignObject.c' || echo '$(srcdir)/'`objects/QCADDesignObject.c; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADDesignObject.Tpo" "objects/$(DEPDIR)/combo_test-QCADDesignObject.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADDesignObject.Tpo"; exit 1; fi
#	source='objects/QCADDesignObject.c' object='objects/combo_test-QCADDesignObject.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADDesignObject.o `test -f 'objects/QCADDesignObject.c' || echo '$(srcdir)/'`objects/QCADDesignObject.c

objects/combo_test-QCADDesignObject.obj: objects/QCADDesignObject.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADDesignObject.obj -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADDesignObject.Tpo" -c -o objects/combo_test-QCADDesignObject.obj `if test -f 'objects/QCADDesignObject.c'; then $(CYGPATH_W) 'objects/QCADDesignObject.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADDesignObject.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADDesignObject.Tpo" "objects/$(DEPDIR)/combo_test-QCADDesignObject.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADDesignObject.Tpo"; exit 1; fi
#	source='objects/QCADDesignObject.c' object='objects/combo_test-QCADDesignObject.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADDesignObject.obj `if test -f 'objects/QCADDesignObject.c'; then $(CYGPATH_W) 'objects/QCADDesignObject.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADDesignObject.c'; fi`

objects/combo_test-QCADDOContainer.o: objects/QCADDOContainer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADDOContainer.o -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADDOContainer.Tpo" -c -o objects/combo_test-QCADDOContainer.o `test -f 'objects/QCADDOContainer.c' || echo '$(srcdir)/'`objects/QCADDOContainer.c; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADDOContainer.Tpo" "objects/$(DEPDIR)/combo_test-QCADDOContainer.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADDOContainer.Tpo"; exit 1; fi
#	source='objects/QCADDOContainer.c' object='objects/combo_test-QCADDOContainer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADDOContainer.o `test -f 'objects/QCADDOContainer.c' || echo '$(srcdir)/'`objects/QCADDOContainer.c

objects/combo_test-QCADDOContainer.obj: objects/QCADDOContainer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADDOContainer.obj -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADDOContainer.Tpo" -c -o objects/combo_test-QCADDOContainer.obj `if test -f 'objects/QCADDOContainer.c'; then $(CYGPATH_W) 'objects/QCADDOContainer.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADDOContainer.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADDOContainer.Tpo" "objects/$(DEPDIR)/combo_test-QCADDOContainer.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADDOContainer.Tpo"; exit 1; fi
#	source='objects/QCADDOContainer.c' object='objects/combo_test-QCADDOContainer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADDOContainer.obj `if test -f 'objects/QCADDOContainer.c'; then $(CYGPATH_W) 'objects/QCADDOContainer.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADDOContainer.c'; fi`

objects/combo_test-QCADLabel.o: objects/QCADLabel.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADLabel.o -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADLabel.Tpo" -c -o objects/combo_test-QCADLabel.o `test -f 'objects/QCADLabel.c' || echo '$(srcdir)/'`objects/QCADLabel.c; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADLabel.Tpo" "objects/$(DEPDIR)/combo_test-QCADLabel.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADLabel.Tpo"; exit 1; fi
#	source='objects/QCADLabel.c' object='objects/combo_test-QCADLabel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADLabel.o `test -f 'objects/QCADLabel.c' || echo '$(srcdir)/'`objects/QCADLabel.c

objects/combo_test-QCADLabel.obj: objects/QCADLabel.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADLabel.obj -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADLabel.Tpo" -c -o objects/combo_test-QCADLabel.obj `if test -f 'objects/QCADLabel.c'; then $(CYGPATH_W) 'objects/QCADLabel.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADLabel.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADLabel.Tpo" "objects/$(DEPDIR)/combo_test-QCADLabel.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADLabel.Tpo"; exit 1; fi
#	source='objects/QCADLabel.c' object='objects/combo_test-QCADLabel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADLabel.obj `if test -f 'objects/QCADLabel.c'; then $(CYGPATH_W) 'objects/QCADLabel.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADLabel.c'; fi`

objects/combo_test-QCADLayer.o: objects/QCADLayer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADLayer.o -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADLayer.Tpo" -c -o objects/combo_test-QCADLayer.o `test -f 'objects/QCADLayer.c' || echo '$(srcdir)/'`objects/QCADLayer.c; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADLayer.Tpo" "objects/$(DEPDIR)/combo_test-QCADLayer.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADLayer.Tpo"; exit 1; fi
#	source='objects/QCADLayer.c' object='objects/combo_test-QCADLayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADLayer.o `test -f 'objects/QCADLayer.c' || echo '$(srcdir)/'`objects/QCADLayer.c

objects/combo_test-QCADLayer.obj: objects/QCADLayer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADLayer.obj -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADLayer.Tpo" -c -o objects/combo_test-QCADLayer.obj `if test -f 'objects/QCADLayer.c'; then $(CYGPATH_W) 'objects/QCADLayer.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADLayer.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADLayer.Tpo" "objects/$(DEPDIR)/combo_test-QCADLayer.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADLayer.Tpo"; exit 1; fi
#	source='objects/QCADLayer.c' object='objects/combo_test-QCADLayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADLayer.obj `if test -f 'objects/QCADLayer.c'; then $(CYGPATH_W) 'objects/QCADLayer.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADLayer.c'; fi`

objects/combo_test-QCADClockingLayer.o: objects/QCADClockingLayer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADClockingLayer.o -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADClockingLayer.Tpo" -c -o objects/combo_test-QCADClockingLayer.o `test -f 'objects/QCADClockingLayer.c' || echo '$(srcdir)/'`objects/QCADClockingLayer.c; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADClockingLayer.Tpo" "objects/$(DEPDIR)/combo_test-QCADClockingLayer.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADClockingLayer.Tpo"; exit 1; fi
#	source='objects/QCADClockingLayer.c' object='objects/combo_test-QCADClockingLayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADClockingLayer.o `test -f 'objects/QCADClockingLayer.c' || echo '$(srcdir)/'`objects/QCADClockingLayer.c

objects/combo_test-QCADClockingLayer.obj: objects/QCADClockingLayer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADClockingLayer.obj -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADClockingLayer.Tpo" -c -o objects/combo_test-QCADClockingLayer.obj `if test -f 'objects/QCADClockingLayer.c'; then $(CYGPATH_W) 'objects/QCADClockingLayer.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADClockingLayer.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADClockingLayer.Tpo" "objects/$(DEPDIR)/combo_test-QCADClockingLayer.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADClockingLayer.Tpo"; exit 1; fi
#	source='objects/QCADClockingLayer.c' object='objects/combo_test-QCADClockingLayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADClockingLayer.obj `if test -f 'objects/QCADClockingLayer.c'; then $(CYGPATH_W) 'objects/QCADClockingLayer.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADClockingLayer.c'; fi`

objects/combo_test-QCADStretchyObject.o: objects/QCADStretchyObject.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADStretchyObject.o -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADStretchyObject.Tpo" -c -o objects/combo_test-QCADStretchyObject.o `test -f 'objects/QCADStretchyObject.c' || echo '$(srcdir)/'`objects/QCADStretchyObject.c; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADStretchyObject.Tpo" "objects/$(DEPDIR)/combo_test-QCADStretchyObject.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADStretchyObject.Tpo"; exit 1; fi
#	source='objects/QCADStretchyObject.c' object='objects/combo_test-QCADStretchyObject.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADStretchyObject.o `test -f 'objects/QCADStretchyObject.c' || echo '$(srcdir)/'`objects/QCADStretchyObject.c

objects/combo_test-QCADStretchyObject.obj: objects/QCADStretchyObject.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADStretchyObject.obj -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADStretchyObject.Tpo" -c -o objects/combo_test-QCADStretchyObject.obj `if test -f 'objects/QCADStretchyObject.c'; then $(CYGPATH_W) 'objects/QCADStretchyObject.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADStretchyObject.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADStretchyObject.Tpo" "objects/$(DEPDIR)/combo_test-QCADStretchyObject.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADStretchyObject.Tpo"; exit 1; fi
#	source='objects/QCADStretchyObject.c' object='objects/combo_test-QCADStretchyObject.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADStretchyObject.obj `if test -f 'objects/QCADStretchyObject.c'; then $(CYGPATH_W) 'objects/QCADStretchyObject.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADStretchyObject.c'; fi`

objects/combo_test-QCADElectrode.o: objects/QCADElectrode.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADElectrode.o -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADElectrode.Tpo" -c -o objects/combo_test-QCADElectrode.o `test -f 'objects/QCADElectrode.c' || echo '$(srcdir)/'`objects/QCADElectrode.c; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADElectrode.Tpo" "objects/$(DEPDIR)/combo_test-QCADElectrode.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADElectrode.Tpo"; exit 1; fi
#	source='objects/QCADElectrode.c' object='objects/combo_test-QCADElectrode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADElectrode.o `test -f 'objects/QCADElectrode.c' || echo '$(srcdir)/'`objects/QCADElectrode.c

objects/combo_test-QCADElectrode.obj: objects/QCADElectrode.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADElectrode.obj -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADElectrode.Tpo" -c -o objects/combo_test-QCADElectrode.obj `if test -f 'objects/QCADElectrode.c'; then $(CYGPATH_W) 'objects/QCADElectrode.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADElectrode.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADElectrode.Tpo" "objects/$(DEPDIR)/combo_test-QCADElectrode.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADElectrode.Tpo"; exit 1; fi
#	source='objects/QCADElectrode.c' object='objects/combo_test-QCADElectrode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADElectrode.obj `if test -f 'objects/QCADElectrode.c'; then $(CYGPATH_W) 'objects/QCADElectrode.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADElectrode.c'; fi`

objects/combo_test-QCADRectangleElectrode.o: objects/QCADRectangleElectrode.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADRectangleElectrode.o -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADRectangleElectrode.Tpo" -c -o objects/combo_test-QCADRectangleElectrode.o `test -f 'objects/QCADRectangleElectrode.c' || echo '$(srcdir)/'`objects/QCADRectangleElectrode.c; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADRectangleElectrode.Tpo" "objects/$(DEPDIR)/combo_test-QCADRectangleElectrode.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADRectangleElectrode.Tpo"; exit 1; fi
#	source='objects/QCADRectangleElectrode.c' object='objects/combo_test-QCADRectangleElectrode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADRectangleElectrode.o `test -f 'objects/QCADRectangleElectrode.c' || echo '$(srcdir)/'`objects/QCADRectangleElectrode.c

objects/combo_test-QCADRectangleElectrode.obj: objects/QCADRectangleElectrode.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADRectangleElectrode.obj -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADRectangleElectrode.Tpo" -c -o objects/combo_test-QCADRectangleElectrode.obj `if test -f 'objects/QCADRectangleElectrode.c'; then $(CYGPATH_W) 'objects/QCADRectangleElectrode.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADRectangleElectrode.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADRectangleElectrode.Tpo" "objects/$(DEPDIR)/combo_test-QCADRectangleElectrode.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADRectangleElectrode.Tpo"; exit 1; fi
#	source='objects/QCADRectangleElectrode.c' object='objects/combo_test-QCADRectangleElectrode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADRectangleElectrode.obj `if test -f 'objects/QCADRectangleElectrode.c'; then $(CYGPATH_W) 'objects/QCADRectangleElectrode.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADRectangleElectrode.c'; fi`

objects/combo_test-QCADSubstrate.o: objects/QCADSubstrate.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADSubstrate.o -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADSubstrate.Tpo" -c -o objects/combo_test-QCADSubstrate.o `test -f 'objects/QCADSubstrate.c' || echo '$(srcdir)/'`objects/QCADSubstrate.c; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADSubstrate.Tpo" "objects/$(DEPDIR)/combo_test-QCADSubstrate.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADSubstrate.Tpo"; exit 1; fi
#	source='objects/QCADSubstrate.c' object='objects/combo_test-QCADSubstrate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADSubstrate.o `test -f 'objects/QCADSubstrate.c' || echo '$(srcdir)/'`objects/QCADSubstrate.c

objects/combo_test-QCADSubstrate.obj: objects/QCADSubstrate.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADSubstrate.obj -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADSubstrate.Tpo" -c -o objects/combo_test-QCADSubstrate.obj `if test -f 'objects/QCADSubstrate.c'; then $(CYGPATH_W) 'objects/QCADSubstrate.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADSubstrate.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADSubstrate.Tpo" "objects/$(DEPDIR)/combo_test-QCADSubstrate.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADSubstrate.Tpo"; exit 1; fi
#	source='objects/QCADSubstrate.c' object='objects/combo_test-QCADSubstrate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADSubstrate.obj `if test -f 'objects/QCADSubstrate.c'; then $(CYGPATH_W) 'objects/QCADSubstrate.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADSubstrate.c'; fi`

objects/combo_test-QCADParamSpecObjectList.o: objects/QCADParamSpecObjectList.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADParamSpecObjectList.o -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADParamSpecObjectList.Tpo" -c -o objects/combo_test-QCADParamSpecObjectList.o `test -f 'objects/QCADParamSpecObjectList.c' || echo '$(srcdir)/'`objects/QCADParamSpecObjectList.c; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADParamSpecObjectList.Tpo" "objects/$(DEPDIR)/combo_test-QCADParamSpecObjectList.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADParamSpecObjectList.Tpo"; exit 1; fi
#	source='objects/QCADParamSpecObjectList.c' object='objects/combo_test-QCADParamSpecObjectList.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADParamSpecObjectList.o `test -f 'objects/QCADParamSpecObjectList.c' || echo '$(srcdir)/'`objects/QCADParamSpecObjectList.c

objects/combo_test-QCADParamSpecObjectList.obj: objects/QCADParamSpecObjectList.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-QCADParamSpecObjectList.obj -MD -MP -MF "objects/$(DEPDIR)/combo_test-QCADParamSpecObjectList.Tpo" -c -o objects/combo_test-QCADParamSpecObjectList.obj `if test -f 'objects/QCADParamSpecObjectList.c'; then $(CYGPATH_W) 'objects/QCADParamSpecObjectList.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADParamSpecObjectList.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/combo_test-QCADParamSpecObjectList.Tpo" "objects/$(DEPDIR)/combo_test-QCADParamSpecObjectList.Po"; else rm -f "objects/$(DEPDIR)/combo_test-QCADParamSpecObjectList.Tpo"; exit 1; fi
#	source='objects/QCADParamSpecObjectList.c' object='objects/combo_test-QCADParamSpecObjectList.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-QCADParamSpecObjectList.obj `if test -f 'objects/QCADParamSpecObjectList.c'; then $(CYGPATH_W) 'objects/QCADParamSpecObjectList.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADParamSpecObjectList.c'; fi`

objects/combo_test-object_helpers.o: objects/object_helpers.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-object_helpers.o -MD -MP -MF "objects/$(DEPDIR)/combo_test-object_helpers.Tpo" -c -o objects/combo_test-object_helpers.o `test -f 'objects/object_helpers.c' || echo '$(srcdir)/'`objects/object_helpers.c; \
	then mv -f "objects/$(DEPDIR)/combo_test-object_helpers.Tpo" "objects/$(DEPDIR)/combo_test-object_helpers.Po"; else rm -f "objects/$(DEPDIR)/combo_test-object_helpers.Tpo"; exit 1; fi
#	source='objects/object_helpers.c' object='objects/combo_test-object_helpers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-object_helpers.o `test -f 'objects/object_helpers.c' || echo '$(srcdir)/'`objects/object_helpers.c

objects/combo_test-object_helpers.obj: objects/object_helpers.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT objects/combo_test-object_helpers.obj -MD -MP -MF "objects/$(DEPDIR)/combo_test-object_helpers.Tpo" -c -o objects/combo_test-object_helpers.obj `if test -f 'objects/object_helpers.c'; then $(CYGPATH_W) 'objects/object_helpers.c'; else $(CYGPATH_W) '$(srcdir)/objects/object_helpers.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/combo_test-object_helpers.Tpo" "objects/$(DEPDIR)/combo_test-object_helpers.Po"; else rm -f "objects/$(DEPDIR)/combo_test-object_helpers.Tpo"; exit 1; fi
#	source='objects/object_helpers.c' object='objects/combo_test-object_helpers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o objects/combo_test-object_helpers.obj `if test -f 'objects/object_helpers.c'; then $(CYGPATH_W) 'objects/object_helpers.c'; else $(CYGPATH_W) '$(srcdir)/objects/object_helpers.c'; fi`

combo_test-support.o: support.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT combo_test-support.o -MD -MP -MF "$(DEPDIR)/combo_test-support.Tpo" -c -o combo_test-support.o `test -f 'support.c' || echo '$(srcdir)/'`support.c; \
	then mv -f "$(DEPDIR)/combo_test-support.Tpo" "$(DEPDIR)/combo_test-support.Po"; else rm -f "$(DEPDIR)/combo_test-support.Tpo"; exit 1; fi
#	source='support.c' object='combo_test-support.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o combo_test-support.o `test -f 'support.c' || echo '$(srcdir)/'`support.c

combo_test-support.obj: support.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT combo_test-support.obj -MD -MP -MF "$(DEPDIR)/combo_test-support.Tpo" -c -o combo_test-support.obj `if test -f 'support.c'; then $(CYGPATH_W) 'support.c'; else $(CYGPATH_W) '$(srcdir)/support.c'; fi`; \
	then mv -f "$(DEPDIR)/combo_test-support.Tpo" "$(DEPDIR)/combo_test-support.Po"; else rm -f "$(DEPDIR)/combo_test-support.Tpo"; exit 1; fi
#	source='support.c' object='combo_test-support.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o combo_test-support.obj `if test -f 'support.c'; then $(CYGPATH_W) 'support.c'; else $(CYGPATH_W) '$(srcdir)/support.c'; fi`

combo_test-preamble.o: preamble.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT combo_test-preamble.o -MD -MP -MF "$(DEPDIR)/combo_test-preamble.Tpo" -c -o combo_test-preamble.o `test -f 'preamble.c' || echo '$(srcdir)/'`preamble.c; \
	then mv -f "$(DEPDIR)/combo_test-preamble.Tpo" "$(DEPDIR)/combo_test-preamble.Po"; else rm -f "$(DEPDIR)/combo_test-preamble.Tpo"; exit 1; fi
#	source='preamble.c' object='combo_test-preamble.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o combo_test-preamble.o `test -f 'preamble.c' || echo '$(srcdir)/'`preamble.c

combo_test-preamble.obj: preamble.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT combo_test-preamble.obj -MD -MP -MF "$(DEPDIR)/combo_test-preamble.Tpo" -c -o combo_test-preamble.obj `if test -f 'preamble.c'; then $(CYGPATH_W) 'preamble.c'; else $(CYGPATH_W) '$(srcdir)/preamble.c'; fi`; \
	then mv -f "$(DEPDIR)/combo_test-preamble.Tpo" "$(DEPDIR)/combo_test-preamble.Po"; else rm -f "$(DEPDIR)/combo_test-preamble.Tpo"; exit 1; fi
#	source='preamble.c' object='combo_test-preamble.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o combo_test-preamble.obj `if test -f 'preamble.c'; then $(CYGPATH_W) 'preamble.c'; else $(CYGPATH_W) '$(srcdir)/preamble.c'; fi`

combo_test-simulation_data.o: simulation_data.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT combo_test-simulation_data.o -MD -MP -MF "$(DEPDIR)/combo_test-simulation_data.Tpo" -c -o combo_test-simulation_data.o `test -f 'simulation_data.c' || echo '$(srcdir)/'`simulation_data.c; \
	then mv -f "$(DEPDIR)/combo_test-simulation_data.Tpo" "$(DEPDIR)/combo_test-simulation_data.Po"; else rm -f "$(DEPDIR)/combo_test-simulation_data.Tpo"; exit 1; fi
#	source='simulation_data.c' object='combo_test-simulation_data.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o combo_test-simulation_data.o `test -f 'simulation_data.c' || echo '$(srcdir)/'`simulation_data.c

combo_test-simulation_data.obj: simulation_data.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT combo_test-simulation_data.obj -MD -MP -MF "$(DEPDIR)/combo_test-simulation_data.Tpo" -c -o combo_test-simulation_data.obj `if test -f 'simulation_data.c'; then $(CYGPATH_W) 'simulation_data.c'; else $(CYGPATH_W) '$(srcdir)/simulation_data.c'; fi`; \
	then mv -f "$(DEPDIR)/combo_test-simulation_data.Tpo" "$(DEPDIR)/combo_test-simulation_data.Po"; else rm -f "$(DEPDIR)/combo_test-simulation_data.Tpo"; exit 1; fi
#	source='simulation_data.c' object='combo_test-simulation_data.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o combo_test-simulation_data.obj `if test -f 'simulation_data.c'; then $(CYGPATH_W) 'simulation_data.c'; else $(CYGPATH_W) '$(srcdir)/simulation_data.c'; fi`

combo_test-main_combo_test.o: main_combo_test.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT combo_test-main_combo_test.o -MD -MP -MF "$(DEPDIR)/combo_test-main_combo_test.Tpo" -c -o combo_test-main_combo_test.o `test -f 'main_combo_test.c' || echo '$(srcdir)/'`main_combo_test.c; \
	then mv -f "$(DEPDIR)/combo_test-main_combo_test.Tpo" "$(DEPDIR)/combo_test-main_combo_test.Po"; else rm -f "$(DEPDIR)/combo_test-main_combo_test.Tpo"; exit 1; fi
#	source='main_combo_test.c' object='combo_test-main_combo_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o combo_test-main_combo_test.o `test -f 'main_combo_test.c' || echo '$(srcdir)/'`main_combo_test.c

combo_test-main_combo_test.obj: main_combo_test.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -MT combo_test-main_combo_test.obj -MD -MP -MF "$(DEPDIR)/combo_test-main_combo_test.Tpo" -c -o combo_test-main_combo_test.obj `if test -f 'main_combo_test.c'; then $(CYGPATH_W) 'main_combo_test.c'; else $(CYGPATH_W) '$(srcdir)/main_combo_test.c'; fi`; \
	then mv -f "$(DEPDIR)/combo_test-main_combo_test.Tpo" "$(DEPDIR)/combo_test-main_combo_test.Po"; else rm -f "$(DEPDIR)/combo_test-main_combo_test.Tpo"; exit 1; fi
#	source='main_combo_test.c' object='combo_test-main_combo_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(combo_test_CFLAGS) $(CFLAGS) -c -o combo_test-main_combo_test.obj `if test -f 'main_combo_test.c'; then $(CYGPATH_W) 'main_combo_test.c'; else $(CYGPATH_W) '$(srcdir)/main_combo_test.c'; fi`

graph_dialog-preamble.o: preamble.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-preamble.o -MD -MP -MF "$(DEPDIR)/graph_dialog-preamble.Tpo" -c -o graph_dialog-preamble.o `test -f 'preamble.c' || echo '$(srcdir)/'`preamble.c; \
	then mv -f "$(DEPDIR)/graph_dialog-preamble.Tpo" "$(DEPDIR)/graph_dialog-preamble.Po"; else rm -f "$(DEPDIR)/graph_dialog-preamble.Tpo"; exit 1; fi
#	source='preamble.c' object='graph_dialog-preamble.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-preamble.o `test -f 'preamble.c' || echo '$(srcdir)/'`preamble.c

graph_dialog-preamble.obj: preamble.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-preamble.obj -MD -MP -MF "$(DEPDIR)/graph_dialog-preamble.Tpo" -c -o graph_dialog-preamble.obj `if test -f 'preamble.c'; then $(CYGPATH_W) 'preamble.c'; else $(CYGPATH_W) '$(srcdir)/preamble.c'; fi`; \
	then mv -f "$(DEPDIR)/graph_dialog-preamble.Tpo" "$(DEPDIR)/graph_dialog-preamble.Po"; else rm -f "$(DEPDIR)/graph_dialog-preamble.Tpo"; exit 1; fi
#	source='preamble.c' object='graph_dialog-preamble.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-preamble.obj `if test -f 'preamble.c'; then $(CYGPATH_W) 'preamble.c'; else $(CYGPATH_W) '$(srcdir)/preamble.c'; fi`

graph_dialog-support.o: support.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-support.o -MD -MP -MF "$(DEPDIR)/graph_dialog-support.Tpo" -c -o graph_dialog-support.o `test -f 'support.c' || echo '$(srcdir)/'`support.c; \
	then mv -f "$(DEPDIR)/graph_dialog-support.Tpo" "$(DEPDIR)/graph_dialog-support.Po"; else rm -f "$(DEPDIR)/graph_dialog-support.Tpo"; exit 1; fi
#	source='support.c' object='graph_dialog-support.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-support.o `test -f 'support.c' || echo '$(srcdir)/'`support.c

graph_dialog-support.obj: support.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-support.obj -MD -MP -MF "$(DEPDIR)/graph_dialog-support.Tpo" -c -o graph_dialog-support.obj `if test -f 'support.c'; then $(CYGPATH_W) 'support.c'; else $(CYGPATH_W) '$(srcdir)/support.c'; fi`; \
	then mv -f "$(DEPDIR)/graph_dialog-support.Tpo" "$(DEPDIR)/graph_dialog-support.Po"; else rm -f "$(DEPDIR)/graph_dialog-support.Tpo"; exit 1; fi
#	source='support.c' object='graph_dialog-support.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-support.obj `if test -f 'support.c'; then $(CYGPATH_W) 'support.c'; else $(CYGPATH_W) '$(srcdir)/support.c'; fi`

graph_dialog-fileio_helpers.o: fileio_helpers.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-fileio_helpers.o -MD -MP -MF "$(DEPDIR)/graph_dialog-fileio_helpers.Tpo" -c -o graph_dialog-fileio_helpers.o `test -f 'fileio_helpers.c' || echo '$(srcdir)/'`fileio_helpers.c; \
	then mv -f "$(DEPDIR)/graph_dialog-fileio_helpers.Tpo" "$(DEPDIR)/graph_dialog-fileio_helpers.Po"; else rm -f "$(DEPDIR)/graph_dialog-fileio_helpers.Tpo"; exit 1; fi
#	source='fileio_helpers.c' object='graph_dialog-fileio_helpers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-fileio_helpers.o `test -f 'fileio_helpers.c' || echo '$(srcdir)/'`fileio_helpers.c

graph_dialog-fileio_helpers.obj: fileio_helpers.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-fileio_helpers.obj -MD -MP -MF "$(DEPDIR)/graph_dialog-fileio_helpers.Tpo" -c -o graph_dialog-fileio_helpers.obj `if test -f 'fileio_helpers.c'; then $(CYGPATH_W) 'fileio_helpers.c'; else $(CYGPATH_W) '$(srcdir)/fileio_helpers.c'; fi`; \
	then mv -f "$(DEPDIR)/graph_dialog-fileio_helpers.Tpo" "$(DEPDIR)/graph_dialog-fileio_helpers.Po"; else rm -f "$(DEPDIR)/graph_dialog-fileio_helpers.Tpo"; exit 1; fi
#	source='fileio_helpers.c' object='graph_dialog-fileio_helpers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-fileio_helpers.obj `if test -f 'fileio_helpers.c'; then $(CYGPATH_W) 'fileio_helpers.c'; else $(CYGPATH_W) '$(srcdir)/fileio_helpers.c'; fi`

graph_dialog-generic_utils.o: generic_utils.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-generic_utils.o -MD -MP -MF "$(DEPDIR)/graph_dialog-generic_utils.Tpo" -c -o graph_dialog-generic_utils.o `test -f 'generic_utils.c' || echo '$(srcdir)/'`generic_utils.c; \
	then mv -f "$(DEPDIR)/graph_dialog-generic_utils.Tpo" "$(DEPDIR)/graph_dialog-generic_utils.Po"; else rm -f "$(DEPDIR)/graph_dialog-generic_utils.Tpo"; exit 1; fi
#	source='generic_utils.c' object='graph_dialog-generic_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-generic_utils.o `test -f 'generic_utils.c' || echo '$(srcdir)/'`generic_utils.c

graph_dialog-generic_utils.obj: generic_utils.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-generic_utils.obj -MD -MP -MF "$(DEPDIR)/graph_dialog-generic_utils.Tpo" -c -o graph_dialog-generic_utils.obj `if test -f 'generic_utils.c'; then $(CYGPATH_W) 'generic_utils.c'; else $(CYGPATH_W) '$(srcdir)/generic_utils.c'; fi`; \
	then mv -f "$(DEPDIR)/graph_dialog-generic_utils.Tpo" "$(DEPDIR)/graph_dialog-generic_utils.Po"; else rm -f "$(DEPDIR)/graph_dialog-generic_utils.Tpo"; exit 1; fi
#	source='generic_utils.c' object='graph_dialog-generic_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-generic_utils.obj `if test -f 'generic_utils.c'; then $(CYGPATH_W) 'generic_utils.c'; else $(CYGPATH_W) '$(srcdir)/generic_utils.c'; fi`

graph_dialog-exp_array.o: exp_array.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-exp_array.o -MD -MP -MF "$(DEPDIR)/graph_dialog-exp_array.Tpo" -c -o graph_dialog-exp_array.o `test -f 'exp_array.c' || echo '$(srcdir)/'`exp_array.c; \
	then mv -f "$(DEPDIR)/graph_dialog-exp_array.Tpo" "$(DEPDIR)/graph_dialog-exp_array.Po"; else rm -f "$(DEPDIR)/graph_dialog-exp_array.Tpo"; exit 1; fi
#	source='exp_array.c' object='graph_dialog-exp_array.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-exp_array.o `test -f 'exp_array.c' || echo '$(srcdir)/'`exp_array.c

graph_dialog-exp_array.obj: exp_array.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-exp_array.obj -MD -MP -MF "$(DEPDIR)/graph_dialog-exp_array.Tpo" -c -o graph_dialog-exp_array.obj `if test -f 'exp_array.c'; then $(CYGPATH_W) 'exp_array.c'; else $(CYGPATH_W) '$(srcdir)/exp_array.c'; fi`; \
	then mv -f "$(DEPDIR)/graph_dialog-exp_array.Tpo" "$(DEPDIR)/graph_dialog-exp_array.Po"; else rm -f "$(DEPDIR)/graph_dialog-exp_array.Tpo"; exit 1; fi
#	source='exp_array.c' object='graph_dialog-exp_array.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-exp_array.obj `if test -f 'exp_array.c'; then $(CYGPATH_W) 'exp_array.c'; else $(CYGPATH_W) '$(srcdir)/exp_array.c'; fi`

graph_dialog-hsl2rgb.o: hsl2rgb.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-hsl2rgb.o -MD -MP -MF "$(DEPDIR)/graph_dialog-hsl2rgb.Tpo" -c -o graph_dialog-hsl2rgb.o `test -f 'hsl2rgb.c' || echo '$(srcdir)/'`hsl2rgb.c; \
	then mv -f "$(DEPDIR)/graph_dialog-hsl2rgb.Tpo" "$(DEPDIR)/graph_dialog-hsl2rgb.Po"; else rm -f "$(DEPDIR)/graph_dialog-hsl2rgb.Tpo"; exit 1; fi
#	source='hsl2rgb.c' object='graph_dialog-hsl2rgb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-hsl2rgb.o `test -f 'hsl2rgb.c' || echo '$(srcdir)/'`hsl2rgb.c

graph_dialog-hsl2rgb.obj: hsl2rgb.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-hsl2rgb.obj -MD -MP -MF "$(DEPDIR)/graph_dialog-hsl2rgb.Tpo" -c -o graph_dialog-hsl2rgb.obj `if test -f 'hsl2rgb.c'; then $(CYGPATH_W) 'hsl2rgb.c'; else $(CYGPATH_W) '$(srcdir)/hsl2rgb.c'; fi`; \
	then mv -f "$(DEPDIR)/graph_dialog-hsl2rgb.Tpo" "$(DEPDIR)/graph_dialog-hsl2rgb.Po"; else rm -f "$(DEPDIR)/graph_dialog-hsl2rgb.Tpo"; exit 1; fi
#	source='hsl2rgb.c' object='graph_dialog-hsl2rgb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-hsl2rgb.obj `if test -f 'hsl2rgb.c'; then $(CYGPATH_W) 'hsl2rgb.c'; else $(CYGPATH_W) '$(srcdir)/hsl2rgb.c'; fi`

graph_dialog-custom_widgets.o: custom_widgets.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-custom_widgets.o -MD -MP -MF "$(DEPDIR)/graph_dialog-custom_widgets.Tpo" -c -o graph_dialog-custom_widgets.o `test -f 'custom_widgets.c' || echo '$(srcdir)/'`custom_widgets.c; \
	then mv -f "$(DEPDIR)/graph_dialog-custom_widgets.Tpo" "$(DEPDIR)/graph_dialog-custom_widgets.Po"; else rm -f "$(DEPDIR)/graph_dialog-custom_widgets.Tpo"; exit 1; fi
#	source='custom_widgets.c' object='graph_dialog-custom_widgets.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-custom_widgets.o `test -f 'custom_widgets.c' || echo '$(srcdir)/'`custom_widgets.c

graph_dialog-custom_widgets.obj: custom_widgets.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-custom_widgets.obj -MD -MP -MF "$(DEPDIR)/graph_dialog-custom_widgets.Tpo" -c -o graph_dialog-custom_widgets.obj `if test -f 'custom_widgets.c'; then $(CYGPATH_W) 'custom_widgets.c'; else $(CYGPATH_W) '$(srcdir)/custom_widgets.c'; fi`; \
	then mv -f "$(DEPDIR)/graph_dialog-custom_widgets.Tpo" "$(DEPDIR)/graph_dialog-custom_widgets.Po"; else rm -f "$(DEPDIR)/graph_dialog-custom_widgets.Tpo"; exit 1; fi
#	source='custom_widgets.c' object='graph_dialog-custom_widgets.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-custom_widgets.obj `if test -f 'custom_widgets.c'; then $(CYGPATH_W) 'custom_widgets.c'; else $(CYGPATH_W) '$(srcdir)/custom_widgets.c'; fi`

graph_dialog-design.o: design.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-design.o -MD -MP -MF "$(DEPDIR)/graph_dialog-design.Tpo" -c -o graph_dialog-design.o `test -f 'design.c' || echo '$(srcdir)/'`design.c; \
	then mv -f "$(DEPDIR)/graph_dialog-design.Tpo" "$(DEPDIR)/graph_dialog-design.Po"; else rm -f "$(DEPDIR)/graph_dialog-design.Tpo"; exit 1; fi
#	source='design.c' object='graph_dialog-design.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-design.o `test -f 'design.c' || echo '$(srcdir)/'`design.c

graph_dialog-design.obj: design.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-design.obj -MD -MP -MF "$(DEPDIR)/graph_dialog-design.Tpo" -c -o graph_dialog-design.obj `if test -f 'design.c'; then $(CYGPATH_W) 'design.c'; else $(CYGPATH_W) '$(srcdir)/design.c'; fi`; \
	then mv -f "$(DEPDIR)/graph_dialog-design.Tpo" "$(DEPDIR)/graph_dialog-design.Po"; else rm -f "$(DEPDIR)/graph_dialog-design.Tpo"; exit 1; fi
#	source='design.c' object='graph_dialog-design.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-design.obj `if test -f 'design.c'; then $(CYGPATH_W) 'design.c'; else $(CYGPATH_W) '$(srcdir)/design.c'; fi`

objects/graph_dialog-QCADRuler.o: objects/QCADRuler.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADRuler.o -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADRuler.Tpo" -c -o objects/graph_dialog-QCADRuler.o `test -f 'objects/QCADRuler.c' || echo '$(srcdir)/'`objects/QCADRuler.c; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADRuler.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADRuler.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADRuler.Tpo"; exit 1; fi
#	source='objects/QCADRuler.c' object='objects/graph_dialog-QCADRuler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADRuler.o `test -f 'objects/QCADRuler.c' || echo '$(srcdir)/'`objects/QCADRuler.c

objects/graph_dialog-QCADRuler.obj: objects/QCADRuler.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADRuler.obj -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADRuler.Tpo" -c -o objects/graph_dialog-QCADRuler.obj `if test -f 'objects/QCADRuler.c'; then $(CYGPATH_W) 'objects/QCADRuler.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADRuler.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADRuler.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADRuler.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADRuler.Tpo"; exit 1; fi
#	source='objects/QCADRuler.c' object='objects/graph_dialog-QCADRuler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADRuler.obj `if test -f 'objects/QCADRuler.c'; then $(CYGPATH_W) 'objects/QCADRuler.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADRuler.c'; fi`

objects/graph_dialog-QCADCell.o: objects/QCADCell.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADCell.o -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADCell.Tpo" -c -o objects/graph_dialog-QCADCell.o `test -f 'objects/QCADCell.c' || echo '$(srcdir)/'`objects/QCADCell.c; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADCell.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADCell.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADCell.Tpo"; exit 1; fi
#	source='objects/QCADCell.c' object='objects/graph_dialog-QCADCell.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADCell.o `test -f 'objects/QCADCell.c' || echo '$(srcdir)/'`objects/QCADCell.c

objects/graph_dialog-QCADCell.obj: objects/QCADCell.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADCell.obj -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADCell.Tpo" -c -o objects/graph_dialog-QCADCell.obj `if test -f 'objects/QCADCell.c'; then $(CYGPATH_W) 'objects/QCADCell.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADCell.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADCell.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADCell.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADCell.Tpo"; exit 1; fi
#	source='objects/QCADCell.c' object='objects/graph_dialog-QCADCell.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADCell.obj `if test -f 'objects/QCADCell.c'; then $(CYGPATH_W) 'objects/QCADCell.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADCell.c'; fi`

objects/graph_dialog-QCADCompoundDO.o: objects/QCADCompoundDO.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADCompoundDO.o -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADCompoundDO.Tpo" -c -o objects/graph_dialog-QCADCompoundDO.o `test -f 'objects/QCADCompoundDO.c' || echo '$(srcdir)/'`objects/QCADCompoundDO.c; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADCompoundDO.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADCompoundDO.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADCompoundDO.Tpo"; exit 1; fi
#	source='objects/QCADCompoundDO.c' object='objects/graph_dialog-QCADCompoundDO.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADCompoundDO.o `test -f 'objects/QCADCompoundDO.c' || echo '$(srcdir)/'`objects/QCADCompoundDO.c

objects/graph_dialog-QCADCompoundDO.obj: objects/QCADCompoundDO.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADCompoundDO.obj -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADCompoundDO.Tpo" -c -o objects/graph_dialog-QCADCompoundDO.obj `if test -f 'objects/QCADCompoundDO.c'; then $(CYGPATH_W) 'objects/QCADCompoundDO.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADCompoundDO.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADCompoundDO.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADCompoundDO.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADCompoundDO.Tpo"; exit 1; fi
#	source='objects/QCADCompoundDO.c' object='objects/graph_dialog-QCADCompoundDO.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADCompoundDO.obj `if test -f 'objects/QCADCompoundDO.c'; then $(CYGPATH_W) 'objects/QCADCompoundDO.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADCompoundDO.c'; fi`

objects/graph_dialog-QCADObject.o: objects/QCADObject.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADObject.o -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADObject.Tpo" -c -o objects/graph_dialog-QCADObject.o `test -f 'objects/QCADObject.c' || echo '$(srcdir)/'`objects/QCADObject.c; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADObject.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADObject.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADObject.Tpo"; exit 1; fi
#	source='objects/QCADObject.c' object='objects/graph_dialog-QCADObject.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADObject.o `test -f 'objects/QCADObject.c' || echo '$(srcdir)/'`objects/QCADObject.c

objects/graph_dialog-QCADObject.obj: objects/QCADObject.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADObject.obj -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADObject.Tpo" -c -o objects/graph_dialog-QCADObject.obj `if test -f 'objects/QCADObject.c'; then $(CYGPATH_W) 'objects/QCADObject.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADObject.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADObject.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADObject.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADObject.Tpo"; exit 1; fi
#	source='objects/QCADObject.c' object='objects/graph_dialog-QCADObject.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADObject.obj `if test -f 'objects/QCADObject.c'; then $(CYGPATH_W) 'objects/QCADObject.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADObject.c'; fi`

objects/graph_dialog-QCADDesignObject.o: objects/QCADDesignObject.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADDesignObject.o -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADDesignObject.Tpo" -c -o objects/graph_dialog-QCADDesignObject.o `test -f 'objects/QCADDesignObject.c' || echo '$(srcdir)/'`objects/QCADDesignObject.c; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADDesignObject.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADDesignObject.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADDesignObject.Tpo"; exit 1; fi
#	source='objects/QCADDesignObject.c' object='objects/graph_dialog-QCADDesignObject.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADDesignObject.o `test -f 'objects/QCADDesignObject.c' || echo '$(srcdir)/'`objects/QCADDesignObject.c

objects/graph_dialog-QCADDesignObject.obj: objects/QCADDesignObject.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADDesignObject.obj -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADDesignObject.Tpo" -c -o objects/graph_dialog-QCADDesignObject.obj `if test -f 'objects/QCADDesignObject.c'; then $(CYGPATH_W) 'objects/QCADDesignObject.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADDesignObject.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADDesignObject.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADDesignObject.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADDesignObject.Tpo"; exit 1; fi
#	source='objects/QCADDesignObject.c' object='objects/graph_dialog-QCADDesignObject.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADDesignObject.obj `if test -f 'objects/QCADDesignObject.c'; then $(CYGPATH_W) 'objects/QCADDesignObject.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADDesignObject.c'; fi`

objects/graph_dialog-QCADDOContainer.o: objects/QCADDOContainer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADDOContainer.o -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADDOContainer.Tpo" -c -o objects/graph_dialog-QCADDOContainer.o `test -f 'objects/QCADDOContainer.c' || echo '$(srcdir)/'`objects/QCADDOContainer.c; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADDOContainer.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADDOContainer.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADDOContainer.Tpo"; exit 1; fi
#	source='objects/QCADDOContainer.c' object='objects/graph_dialog-QCADDOContainer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADDOContainer.o `test -f 'objects/QCADDOContainer.c' || echo '$(srcdir)/'`objects/QCADDOContainer.c

objects/graph_dialog-QCADDOContainer.obj: objects/QCADDOContainer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADDOContainer.obj -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADDOContainer.Tpo" -c -o objects/graph_dialog-QCADDOContainer.obj `if test -f 'objects/QCADDOContainer.c'; then $(CYGPATH_W) 'objects/QCADDOContainer.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADDOContainer.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADDOContainer.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADDOContainer.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADDOContainer.Tpo"; exit 1; fi
#	source='objects/QCADDOContainer.c' object='objects/graph_dialog-QCADDOContainer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADDOContainer.obj `if test -f 'objects/QCADDOContainer.c'; then $(CYGPATH_W) 'objects/QCADDOContainer.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADDOContainer.c'; fi`

objects/graph_dialog-QCADLabel.o: objects/QCADLabel.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADLabel.o -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADLabel.Tpo" -c -o objects/graph_dialog-QCADLabel.o `test -f 'objects/QCADLabel.c' || echo '$(srcdir)/'`objects/QCADLabel.c; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADLabel.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADLabel.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADLabel.Tpo"; exit 1; fi
#	source='objects/QCADLabel.c' object='objects/graph_dialog-QCADLabel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADLabel.o `test -f 'objects/QCADLabel.c' || echo '$(srcdir)/'`objects/QCADLabel.c

objects/graph_dialog-QCADLabel.obj: objects/QCADLabel.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADLabel.obj -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADLabel.Tpo" -c -o objects/graph_dialog-QCADLabel.obj `if test -f 'objects/QCADLabel.c'; then $(CYGPATH_W) 'objects/QCADLabel.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADLabel.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADLabel.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADLabel.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADLabel.Tpo"; exit 1; fi
#	source='objects/QCADLabel.c' object='objects/graph_dialog-QCADLabel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADLabel.obj `if test -f 'objects/QCADLabel.c'; then $(CYGPATH_W) 'objects/QCADLabel.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADLabel.c'; fi`

objects/graph_dialog-QCADLayer.o: objects/QCADLayer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADLayer.o -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADLayer.Tpo" -c -o objects/graph_dialog-QCADLayer.o `test -f 'objects/QCADLayer.c' || echo '$(srcdir)/'`objects/QCADLayer.c; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADLayer.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADLayer.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADLayer.Tpo"; exit 1; fi
#	source='objects/QCADLayer.c' object='objects/graph_dialog-QCADLayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADLayer.o `test -f 'objects/QCADLayer.c' || echo '$(srcdir)/'`objects/QCADLayer.c

objects/graph_dialog-QCADLayer.obj: objects/QCADLayer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADLayer.obj -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADLayer.Tpo" -c -o objects/graph_dialog-QCADLayer.obj `if test -f 'objects/QCADLayer.c'; then $(CYGPATH_W) 'objects/QCADLayer.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADLayer.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADLayer.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADLayer.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADLayer.Tpo"; exit 1; fi
#	source='objects/QCADLayer.c' object='objects/graph_dialog-QCADLayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADLayer.obj `if test -f 'objects/QCADLayer.c'; then $(CYGPATH_W) 'objects/QCADLayer.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADLayer.c'; fi`

objects/graph_dialog-QCADClockingLayer.o: objects/QCADClockingLayer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADClockingLayer.o -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADClockingLayer.Tpo" -c -o objects/graph_dialog-QCADClockingLayer.o `test -f 'objects/QCADClockingLayer.c' || echo '$(srcdir)/'`objects/QCADClockingLayer.c; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADClockingLayer.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADClockingLayer.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADClockingLayer.Tpo"; exit 1; fi
#	source='objects/QCADClockingLayer.c' object='objects/graph_dialog-QCADClockingLayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADClockingLayer.o `test -f 'objects/QCADClockingLayer.c' || echo '$(srcdir)/'`objects/QCADClockingLayer.c

objects/graph_dialog-QCADClockingLayer.obj: objects/QCADClockingLayer.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADClockingLayer.obj -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADClockingLayer.Tpo" -c -o objects/graph_dialog-QCADClockingLayer.obj `if test -f 'objects/QCADClockingLayer.c'; then $(CYGPATH_W) 'objects/QCADClockingLayer.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADClockingLayer.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADClockingLayer.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADClockingLayer.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADClockingLayer.Tpo"; exit 1; fi
#	source='objects/QCADClockingLayer.c' object='objects/graph_dialog-QCADClockingLayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADClockingLayer.obj `if test -f 'objects/QCADClockingLayer.c'; then $(CYGPATH_W) 'objects/QCADClockingLayer.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADClockingLayer.c'; fi`

objects/graph_dialog-QCADStretchyObject.o: objects/QCADStretchyObject.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADStretchyObject.o -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADStretchyObject.Tpo" -c -o objects/graph_dialog-QCADStretchyObject.o `test -f 'objects/QCADStretchyObject.c' || echo '$(srcdir)/'`objects/QCADStretchyObject.c; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADStretchyObject.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADStretchyObject.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADStretchyObject.Tpo"; exit 1; fi
#	source='objects/QCADStretchyObject.c' object='objects/graph_dialog-QCADStretchyObject.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADStretchyObject.o `test -f 'objects/QCADStretchyObject.c' || echo '$(srcdir)/'`objects/QCADStretchyObject.c

objects/graph_dialog-QCADStretchyObject.obj: objects/QCADStretchyObject.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADStretchyObject.obj -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADStretchyObject.Tpo" -c -o objects/graph_dialog-QCADStretchyObject.obj `if test -f 'objects/QCADStretchyObject.c'; then $(CYGPATH_W) 'objects/QCADStretchyObject.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADStretchyObject.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADStretchyObject.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADStretchyObject.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADStretchyObject.Tpo"; exit 1; fi
#	source='objects/QCADStretchyObject.c' object='objects/graph_dialog-QCADStretchyObject.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADStretchyObject.obj `if test -f 'objects/QCADStretchyObject.c'; then $(CYGPATH_W) 'objects/QCADStretchyObject.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADStretchyObject.c'; fi`

objects/graph_dialog-QCADElectrode.o: objects/QCADElectrode.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADElectrode.o -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADElectrode.Tpo" -c -o objects/graph_dialog-QCADElectrode.o `test -f 'objects/QCADElectrode.c' || echo '$(srcdir)/'`objects/QCADElectrode.c; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADElectrode.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADElectrode.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADElectrode.Tpo"; exit 1; fi
#	source='objects/QCADElectrode.c' object='objects/graph_dialog-QCADElectrode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADElectrode.o `test -f 'objects/QCADElectrode.c' || echo '$(srcdir)/'`objects/QCADElectrode.c

objects/graph_dialog-QCADElectrode.obj: objects/QCADElectrode.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADElectrode.obj -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADElectrode.Tpo" -c -o objects/graph_dialog-QCADElectrode.obj `if test -f 'objects/QCADElectrode.c'; then $(CYGPATH_W) 'objects/QCADElectrode.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADElectrode.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADElectrode.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADElectrode.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADElectrode.Tpo"; exit 1; fi
#	source='objects/QCADElectrode.c' object='objects/graph_dialog-QCADElectrode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADElectrode.obj `if test -f 'objects/QCADElectrode.c'; then $(CYGPATH_W) 'objects/QCADElectrode.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADElectrode.c'; fi`

objects/graph_dialog-QCADRectangleElectrode.o: objects/QCADRectangleElectrode.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADRectangleElectrode.o -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADRectangleElectrode.Tpo" -c -o objects/graph_dialog-QCADRectangleElectrode.o `test -f 'objects/QCADRectangleElectrode.c' || echo '$(srcdir)/'`objects/QCADRectangleElectrode.c; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADRectangleElectrode.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADRectangleElectrode.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADRectangleElectrode.Tpo"; exit 1; fi
#	source='objects/QCADRectangleElectrode.c' object='objects/graph_dialog-QCADRectangleElectrode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADRectangleElectrode.o `test -f 'objects/QCADRectangleElectrode.c' || echo '$(srcdir)/'`objects/QCADRectangleElectrode.c

objects/graph_dialog-QCADRectangleElectrode.obj: objects/QCADRectangleElectrode.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADRectangleElectrode.obj -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADRectangleElectrode.Tpo" -c -o objects/graph_dialog-QCADRectangleElectrode.obj `if test -f 'objects/QCADRectangleElectrode.c'; then $(CYGPATH_W) 'objects/QCADRectangleElectrode.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADRectangleElectrode.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADRectangleElectrode.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADRectangleElectrode.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADRectangleElectrode.Tpo"; exit 1; fi
#	source='objects/QCADRectangleElectrode.c' object='objects/graph_dialog-QCADRectangleElectrode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADRectangleElectrode.obj `if test -f 'objects/QCADRectangleElectrode.c'; then $(CYGPATH_W) 'objects/QCADRectangleElectrode.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADRectangleElectrode.c'; fi`

objects/graph_dialog-QCADSubstrate.o: objects/QCADSubstrate.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADSubstrate.o -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADSubstrate.Tpo" -c -o objects/graph_dialog-QCADSubstrate.o `test -f 'objects/QCADSubstrate.c' || echo '$(srcdir)/'`objects/QCADSubstrate.c; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADSubstrate.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADSubstrate.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADSubstrate.Tpo"; exit 1; fi
#	source='objects/QCADSubstrate.c' object='objects/graph_dialog-QCADSubstrate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADSubstrate.o `test -f 'objects/QCADSubstrate.c' || echo '$(srcdir)/'`objects/QCADSubstrate.c

objects/graph_dialog-QCADSubstrate.obj: objects/QCADSubstrate.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADSubstrate.obj -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADSubstrate.Tpo" -c -o objects/graph_dialog-QCADSubstrate.obj `if test -f 'objects/QCADSubstrate.c'; then $(CYGPATH_W) 'objects/QCADSubstrate.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADSubstrate.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADSubstrate.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADSubstrate.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADSubstrate.Tpo"; exit 1; fi
#	source='objects/QCADSubstrate.c' object='objects/graph_dialog-QCADSubstrate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADSubstrate.obj `if test -f 'objects/QCADSubstrate.c'; then $(CYGPATH_W) 'objects/QCADSubstrate.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADSubstrate.c'; fi`

objects/graph_dialog-QCADParamSpecObjectList.o: objects/QCADParamSpecObjectList.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADParamSpecObjectList.o -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADParamSpecObjectList.Tpo" -c -o objects/graph_dialog-QCADParamSpecObjectList.o `test -f 'objects/QCADParamSpecObjectList.c' || echo '$(srcdir)/'`objects/QCADParamSpecObjectList.c; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADParamSpecObjectList.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADParamSpecObjectList.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADParamSpecObjectList.Tpo"; exit 1; fi
#	source='objects/QCADParamSpecObjectList.c' object='objects/graph_dialog-QCADParamSpecObjectList.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADParamSpecObjectList.o `test -f 'objects/QCADParamSpecObjectList.c' || echo '$(srcdir)/'`objects/QCADParamSpecObjectList.c

objects/graph_dialog-QCADParamSpecObjectList.obj: objects/QCADParamSpecObjectList.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADParamSpecObjectList.obj -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADParamSpecObjectList.Tpo" -c -o objects/graph_dialog-QCADParamSpecObjectList.obj `if test -f 'objects/QCADParamSpecObjectList.c'; then $(CYGPATH_W) 'objects/QCADParamSpecObjectList.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADParamSpecObjectList.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADParamSpecObjectList.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADParamSpecObjectList.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADParamSpecObjectList.Tpo"; exit 1; fi
#	source='objects/QCADParamSpecObjectList.c' object='objects/graph_dialog-QCADParamSpecObjectList.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADParamSpecObjectList.obj `if test -f 'objects/QCADParamSpecObjectList.c'; then $(CYGPATH_W) 'objects/QCADParamSpecObjectList.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADParamSpecObjectList.c'; fi`

objects/graph_dialog-object_helpers.o: objects/object_helpers.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-object_helpers.o -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-object_helpers.Tpo" -c -o objects/graph_dialog-object_helpers.o `test -f 'objects/object_helpers.c' || echo '$(srcdir)/'`objects/object_helpers.c; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-object_helpers.Tpo" "objects/$(DEPDIR)/graph_dialog-object_helpers.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-object_helpers.Tpo"; exit 1; fi
#	source='objects/object_helpers.c' object='objects/graph_dialog-object_helpers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-object_helpers.o `test -f 'objects/object_helpers.c' || echo '$(srcdir)/'`objects/object_helpers.c

objects/graph_dialog-object_helpers.obj: objects/object_helpers.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-object_helpers.obj -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-object_helpers.Tpo" -c -o objects/graph_dialog-object_helpers.obj `if test -f 'objects/object_helpers.c'; then $(CYGPATH_W) 'objects/object_helpers.c'; else $(CYGPATH_W) '$(srcdir)/objects/object_helpers.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-object_helpers.Tpo" "objects/$(DEPDIR)/graph_dialog-object_helpers.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-object_helpers.Tpo"; exit 1; fi
#	source='objects/object_helpers.c' object='objects/graph_dialog-object_helpers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-object_helpers.obj `if test -f 'objects/object_helpers.c'; then $(CYGPATH_W) 'objects/object_helpers.c'; else $(CYGPATH_W) '$(srcdir)/objects/object_helpers.c'; fi`

graph_dialog-graph_dialog.o: graph_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-graph_dialog.o -MD -MP -MF "$(DEPDIR)/graph_dialog-graph_dialog.Tpo" -c -o graph_dialog-graph_dialog.o `test -f 'graph_dialog.c' || echo '$(srcdir)/'`graph_dialog.c; \
	then mv -f "$(DEPDIR)/graph_dialog-graph_dialog.Tpo" "$(DEPDIR)/graph_dialog-graph_dialog.Po"; else rm -f "$(DEPDIR)/graph_dialog-graph_dialog.Tpo"; exit 1; fi
#	source='graph_dialog.c' object='graph_dialog-graph_dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-graph_dialog.o `test -f 'graph_dialog.c' || echo '$(srcdir)/'`graph_dialog.c

graph_dialog-graph_dialog.obj: graph_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-graph_dialog.obj -MD -MP -MF "$(DEPDIR)/graph_dialog-graph_dialog.Tpo" -c -o graph_dialog-graph_dialog.obj `if test -f 'graph_dialog.c'; then $(CYGPATH_W) 'graph_dialog.c'; else $(CYGPATH_W) '$(srcdir)/graph_dialog.c'; fi`; \
	then mv -f "$(DEPDIR)/graph_dialog-graph_dialog.Tpo" "$(DEPDIR)/graph_dialog-graph_dialog.Po"; else rm -f "$(DEPDIR)/graph_dialog-graph_dialog.Tpo"; exit 1; fi
#	source='graph_dialog.c' object='graph_dialog-graph_dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-graph_dialog.obj `if test -f 'graph_dialog.c'; then $(CYGPATH_W) 'graph_dialog.c'; else $(CYGPATH_W) '$(srcdir)/graph_dialog.c'; fi`

graph_dialog-graph_dialog_interface.o: graph_dialog_interface.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-graph_dialog_interface.o -MD -MP -MF "$(DEPDIR)/graph_dialog-graph_dialog_interface.Tpo" -c -o graph_dialog-graph_dialog_interface.o `test -f 'graph_dialog_interface.c' || echo '$(srcdir)/'`graph_dialog_interface.c; \
	then mv -f "$(DEPDIR)/graph_dialog-graph_dialog_interface.Tpo" "$(DEPDIR)/graph_dialog-graph_dialog_interface.Po"; else rm -f "$(DEPDIR)/graph_dialog-graph_dialog_interface.Tpo"; exit 1; fi
#	source='graph_dialog_interface.c' object='graph_dialog-graph_dialog_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-graph_dialog_interface.o `test -f 'graph_dialog_interface.c' || echo '$(srcdir)/'`graph_dialog_interface.c

graph_dialog-graph_dialog_interface.obj: graph_dialog_interface.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-graph_dialog_interface.obj -MD -MP -MF "$(DEPDIR)/graph_dialog-graph_dialog_interface.Tpo" -c -o graph_dialog-graph_dialog_interface.obj `if test -f 'graph_dialog_interface.c'; then $(CYGPATH_W) 'graph_dialog_interface.c'; else $(CYGPATH_W) '$(srcdir)/graph_dialog_interface.c'; fi`; \
	then mv -f "$(DEPDIR)/graph_dialog-graph_dialog_interface.Tpo" "$(DEPDIR)/graph_dialog-graph_dialog_interface.Po"; else rm -f "$(DEPDIR)/graph_dialog-graph_dialog_interface.Tpo"; exit 1; fi
#	source='graph_dialog_interface.c' object='graph_dialog-graph_dialog_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-graph_dialog_interface.obj `if test -f 'graph_dialog_interface.c'; then $(CYGPATH_W) 'graph_dialog_interface.c'; else $(CYGPATH_W) '$(srcdir)/graph_dialog_interface.c'; fi`

graph_dialog-graph_dialog_callbacks.o: graph_dialog_callbacks.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-graph_dialog_callbacks.o -MD -MP -MF "$(DEPDIR)/graph_dialog-graph_dialog_callbacks.Tpo" -c -o graph_dialog-graph_dialog_callbacks.o `test -f 'graph_dialog_callbacks.c' || echo '$(srcdir)/'`graph_dialog_callbacks.c; \
	then mv -f "$(DEPDIR)/graph_dialog-graph_dialog_callbacks.Tpo" "$(DEPDIR)/graph_dialog-graph_dialog_callbacks.Po"; else rm -f "$(DEPDIR)/graph_dialog-graph_dialog_callbacks.Tpo"; exit 1; fi
#	source='graph_dialog_callbacks.c' object='graph_dialog-graph_dialog_callbacks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-graph_dialog_callbacks.o `test -f 'graph_dialog_callbacks.c' || echo '$(srcdir)/'`graph_dialog_callbacks.c

graph_dialog-graph_dialog_callbacks.obj: graph_dialog_callbacks.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-graph_dialog_callbacks.obj -MD -MP -MF "$(DEPDIR)/graph_dialog-graph_dialog_callbacks.Tpo" -c -o graph_dialog-graph_dialog_callbacks.obj `if test -f 'graph_dialog_callbacks.c'; then $(CYGPATH_W) 'graph_dialog_callbacks.c'; else $(CYGPATH_W) '$(srcdir)/graph_dialog_callbacks.c'; fi`; \
	then mv -f "$(DEPDIR)/graph_dialog-graph_dialog_callbacks.Tpo" "$(DEPDIR)/graph_dialog-graph_dialog_callbacks.Po"; else rm -f "$(DEPDIR)/graph_dialog-graph_dialog_callbacks.Tpo"; exit 1; fi
#	source='graph_dialog_callbacks.c' object='graph_dialog-graph_dialog_callbacks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-graph_dialog_callbacks.obj `if test -f 'graph_dialog_callbacks.c'; then $(CYGPATH_W) 'graph_dialog_callbacks.c'; else $(CYGPATH_W) '$(srcdir)/graph_dialog_callbacks.c'; fi`

graph_dialog-graph_dialog_data.o: graph_dialog_data.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-graph_dialog_data.o -MD -MP -MF "$(DEPDIR)/graph_dialog-graph_dialog_data.Tpo" -c -o graph_dialog-graph_dialog_data.o `test -f 'graph_dialog_data.c' || echo '$(srcdir)/'`graph_dialog_data.c; \
	then mv -f "$(DEPDIR)/graph_dialog-graph_dialog_data.Tpo" "$(DEPDIR)/graph_dialog-graph_dialog_data.Po"; else rm -f "$(DEPDIR)/graph_dialog-graph_dialog_data.Tpo"; exit 1; fi
#	source='graph_dialog_data.c' object='graph_dialog-graph_dialog_data.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-graph_dialog_data.o `test -f 'graph_dialog_data.c' || echo '$(srcdir)/'`graph_dialog_data.c

graph_dialog-graph_dialog_data.obj: graph_dialog_data.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-graph_dialog_data.obj -MD -MP -MF "$(DEPDIR)/graph_dialog-graph_dialog_data.Tpo" -c -o graph_dialog-graph_dialog_data.obj `if test -f 'graph_dialog_data.c'; then $(CYGPATH_W) 'graph_dialog_data.c'; else $(CYGPATH_W) '$(srcdir)/graph_dialog_data.c'; fi`; \
	then mv -f "$(DEPDIR)/graph_dialog-graph_dialog_data.Tpo" "$(DEPDIR)/graph_dialog-graph_dialog_data.Po"; else rm -f "$(DEPDIR)/graph_dialog-graph_dialog_data.Tpo"; exit 1; fi
#	source='graph_dialog_data.c' object='graph_dialog-graph_dialog_data.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-graph_dialog_data.obj `if test -f 'graph_dialog_data.c'; then $(CYGPATH_W) 'graph_dialog_data.c'; else $(CYGPATH_W) '$(srcdir)/graph_dialog_data.c'; fi`

graph_dialog-waveform_interpretation_dialog.o: waveform_interpretation_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-waveform_interpretation_dialog.o -MD -MP -MF "$(DEPDIR)/graph_dialog-waveform_interpretation_dialog.Tpo" -c -o graph_dialog-waveform_interpretation_dialog.o `test -f 'waveform_interpretation_dialog.c' || echo '$(srcdir)/'`waveform_interpretation_dialog.c; \
	then mv -f "$(DEPDIR)/graph_dialog-waveform_interpretation_dialog.Tpo" "$(DEPDIR)/graph_dialog-waveform_interpretation_dialog.Po"; else rm -f "$(DEPDIR)/graph_dialog-waveform_interpretation_dialog.Tpo"; exit 1; fi
#	source='waveform_interpretation_dialog.c' object='graph_dialog-waveform_interpretation_dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-waveform_interpretation_dialog.o `test -f 'waveform_interpretation_dialog.c' || echo '$(srcdir)/'`waveform_interpretation_dialog.c

graph_dialog-waveform_interpretation_dialog.obj: waveform_interpretation_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-waveform_interpretation_dialog.obj -MD -MP -MF "$(DEPDIR)/graph_dialog-waveform_interpretation_dialog.Tpo" -c -o graph_dialog-waveform_interpretation_dialog.obj `if test -f 'waveform_interpretation_dialog.c'; then $(CYGPATH_W) 'waveform_interpretation_dialog.c'; else $(CYGPATH_W) '$(srcdir)/waveform_interpretation_dialog.c'; fi`; \
	then mv -f "$(DEPDIR)/graph_dialog-waveform_interpretation_dialog.Tpo" "$(DEPDIR)/graph_dialog-waveform_interpretation_dialog.Po"; else rm -f "$(DEPDIR)/graph_dialog-waveform_interpretation_dialog.Tpo"; exit 1; fi
#	source='waveform_interpretation_dialog.c' object='graph_dialog-waveform_interpretation_dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-waveform_interpretation_dialog.obj `if test -f 'waveform_interpretation_dialog.c'; then $(CYGPATH_W) 'waveform_interpretation_dialog.c'; else $(CYGPATH_W) '$(srcdir)/waveform_interpretation_dialog.c'; fi`

graph_dialog-fileio.o: fileio.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-fileio.o -MD -MP -MF "$(DEPDIR)/graph_dialog-fileio.Tpo" -c -o graph_dialog-fileio.o `test -f 'fileio.c' || echo '$(srcdir)/'`fileio.c; \
	then mv -f "$(DEPDIR)/graph_dialog-fileio.Tpo" "$(DEPDIR)/graph_dialog-fileio.Po"; else rm -f "$(DEPDIR)/graph_dialog-fileio.Tpo"; exit 1; fi
#	source='fileio.c' object='graph_dialog-fileio.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-fileio.o `test -f 'fileio.c' || echo '$(srcdir)/'`fileio.c

graph_dialog-fileio.obj: fileio.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-fileio.obj -MD -MP -MF "$(DEPDIR)/graph_dialog-fileio.Tpo" -c -o graph_dialog-fileio.obj `if test -f 'fileio.c'; then $(CYGPATH_W) 'fileio.c'; else $(CYGPATH_W) '$(srcdir)/fileio.c'; fi`; \
	then mv -f "$(DEPDIR)/graph_dialog-fileio.Tpo" "$(DEPDIR)/graph_dialog-fileio.Po"; else rm -f "$(DEPDIR)/graph_dialog-fileio.Tpo"; exit 1; fi
#	source='fileio.c' object='graph_dialog-fileio.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-fileio.obj `if test -f 'fileio.c'; then $(CYGPATH_W) 'fileio.c'; else $(CYGPATH_W) '$(srcdir)/fileio.c'; fi`

graph_dialog-simulation_data.o: simulation_data.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-simulation_data.o -MD -MP -MF "$(DEPDIR)/graph_dialog-simulation_data.Tpo" -c -o graph_dialog-simulation_data.o `test -f 'simulation_data.c' || echo '$(srcdir)/'`simulation_data.c; \
	then mv -f "$(DEPDIR)/graph_dialog-simulation_data.Tpo" "$(DEPDIR)/graph_dialog-simulation_data.Po"; else rm -f "$(DEPDIR)/graph_dialog-simulation_data.Tpo"; exit 1; fi
#	source='simulation_data.c' object='graph_dialog-simulation_data.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-simulation_data.o `test -f 'simulation_data.c' || echo '$(srcdir)/'`simulation_data.c

graph_dialog-simulation_data.obj: simulation_data.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-simulation_data.obj -MD -MP -MF "$(DEPDIR)/graph_dialog-simulation_data.Tpo" -c -o graph_dialog-simulation_data.obj `if test -f 'simulation_data.c'; then $(CYGPATH_W) 'simulation_data.c'; else $(CYGPATH_W) '$(srcdir)/simulation_data.c'; fi`; \
	then mv -f "$(DEPDIR)/graph_dialog-simulation_data.Tpo" "$(DEPDIR)/graph_dialog-simulation_data.Po"; else rm -f "$(DEPDIR)/graph_dialog-simulation_data.Tpo"; exit 1; fi
#	source='simulation_data.c' object='graph_dialog-simulation_data.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-simulation_data.obj `if test -f 'simulation_data.c'; then $(CYGPATH_W) 'simulation_data.c'; else $(CYGPATH_W) '$(srcdir)/simulation_data.c'; fi`

graph_dialog-graph_dialog_widget_data.o: graph_dialog_widget_data.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-graph_dialog_widget_data.o -MD -MP -MF "$(DEPDIR)/graph_dialog-graph_dialog_widget_data.Tpo" -c -o graph_dialog-graph_dialog_widget_data.o `test -f 'graph_dialog_widget_data.c' || echo '$(srcdir)/'`graph_dialog_widget_data.c; \
	then mv -f "$(DEPDIR)/graph_dialog-graph_dialog_widget_data.Tpo" "$(DEPDIR)/graph_dialog-graph_dialog_widget_data.Po"; else rm -f "$(DEPDIR)/graph_dialog-graph_dialog_widget_data.Tpo"; exit 1; fi
#	source='graph_dialog_widget_data.c' object='graph_dialog-graph_dialog_widget_data.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-graph_dialog_widget_data.o `test -f 'graph_dialog_widget_data.c' || echo '$(srcdir)/'`graph_dialog_widget_data.c

graph_dialog-graph_dialog_widget_data.obj: graph_dialog_widget_data.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-graph_dialog_widget_data.obj -MD -MP -MF "$(DEPDIR)/graph_dialog-graph_dialog_widget_data.Tpo" -c -o graph_dialog-graph_dialog_widget_data.obj `if test -f 'graph_dialog_widget_data.c'; then $(CYGPATH_W) 'graph_dialog_widget_data.c'; else $(CYGPATH_W) '$(srcdir)/graph_dialog_widget_data.c'; fi`; \
	then mv -f "$(DEPDIR)/graph_dialog-graph_dialog_widget_data.Tpo" "$(DEPDIR)/graph_dialog-graph_dialog_widget_data.Po"; else rm -f "$(DEPDIR)/graph_dialog-graph_dialog_widget_data.Tpo"; exit 1; fi
#	source='graph_dialog_widget_data.c' object='graph_dialog-graph_dialog_widget_data.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-graph_dialog_widget_data.obj `if test -f 'graph_dialog_widget_data.c'; then $(CYGPATH_W) 'graph_dialog_widget_data.c'; else $(CYGPATH_W) '$(srcdir)/graph_dialog_widget_data.c'; fi`

objects/graph_dialog-QCADPrintDialog.o: objects/QCADPrintDialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADPrintDialog.o -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADPrintDialog.Tpo" -c -o objects/graph_dialog-QCADPrintDialog.o `test -f 'objects/QCADPrintDialog.c' || echo '$(srcdir)/'`objects/QCADPrintDialog.c; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADPrintDialog.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADPrintDialog.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADPrintDialog.Tpo"; exit 1; fi
#	source='objects/QCADPrintDialog.c' object='objects/graph_dialog-QCADPrintDialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADPrintDialog.o `test -f 'objects/QCADPrintDialog.c' || echo '$(srcdir)/'`objects/QCADPrintDialog.c

objects/graph_dialog-QCADPrintDialog.obj: objects/QCADPrintDialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADPrintDialog.obj -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADPrintDialog.Tpo" -c -o objects/graph_dialog-QCADPrintDialog.obj `if test -f 'objects/QCADPrintDialog.c'; then $(CYGPATH_W) 'objects/QCADPrintDialog.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADPrintDialog.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADPrintDialog.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADPrintDialog.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADPrintDialog.Tpo"; exit 1; fi
#	source='objects/QCADPrintDialog.c' object='objects/graph_dialog-QCADPrintDialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADPrintDialog.obj `if test -f 'objects/QCADPrintDialog.c'; then $(CYGPATH_W) 'objects/QCADPrintDialog.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADPrintDialog.c'; fi`

graph_dialog-print_graph_properties_dialog.o: print_graph_properties_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-print_graph_properties_dialog.o -MD -MP -MF "$(DEPDIR)/graph_dialog-print_graph_properties_dialog.Tpo" -c -o graph_dialog-print_graph_properties_dialog.o `test -f 'print_graph_properties_dialog.c' || echo '$(srcdir)/'`print_graph_properties_dialog.c; \
	then mv -f "$(DEPDIR)/graph_dialog-print_graph_properties_dialog.Tpo" "$(DEPDIR)/graph_dialog-print_graph_properties_dialog.Po"; else rm -f "$(DEPDIR)/graph_dialog-print_graph_properties_dialog.Tpo"; exit 1; fi
#	source='print_graph_properties_dialog.c' object='graph_dialog-print_graph_properties_dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-print_graph_properties_dialog.o `test -f 'print_graph_properties_dialog.c' || echo '$(srcdir)/'`print_graph_properties_dialog.c

graph_dialog-print_graph_properties_dialog.obj: print_graph_properties_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-print_graph_properties_dialog.obj -MD -MP -MF "$(DEPDIR)/graph_dialog-print_graph_properties_dialog.Tpo" -c -o graph_dialog-print_graph_properties_dialog.obj `if test -f 'print_graph_properties_dialog.c'; then $(CYGPATH_W) 'print_graph_properties_dialog.c'; else $(CYGPATH_W) '$(srcdir)/print_graph_properties_dialog.c'; fi`; \
	then mv -f "$(DEPDIR)/graph_dialog-print_graph_properties_dialog.Tpo" "$(DEPDIR)/graph_dialog-print_graph_properties_dialog.Po"; else rm -f "$(DEPDIR)/graph_dialog-print_graph_properties_dialog.Tpo"; exit 1; fi
#	source='print_graph_properties_dialog.c' object='graph_dialog-print_graph_properties_dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-print_graph_properties_dialog.obj `if test -f 'print_graph_properties_dialog.c'; then $(CYGPATH_W) 'print_graph_properties_dialog.c'; else $(CYGPATH_W) '$(srcdir)/print_graph_properties_dialog.c'; fi`

graph_dialog-print_graph.o: print_graph.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-print_graph.o -MD -MP -MF "$(DEPDIR)/graph_dialog-print_graph.Tpo" -c -o graph_dialog-print_graph.o `test -f 'print_graph.c' || echo '$(srcdir)/'`print_graph.c; \
	then mv -f "$(DEPDIR)/graph_dialog-print_graph.Tpo" "$(DEPDIR)/graph_dialog-print_graph.Po"; else rm -f "$(DEPDIR)/graph_dialog-print_graph.Tpo"; exit 1; fi
#	source='print_graph.c' object='graph_dialog-print_graph.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-print_graph.o `test -f 'print_graph.c' || echo '$(srcdir)/'`print_graph.c

graph_dialog-print_graph.obj: print_graph.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-print_graph.obj -MD -MP -MF "$(DEPDIR)/graph_dialog-print_graph.Tpo" -c -o graph_dialog-print_graph.obj `if test -f 'print_graph.c'; then $(CYGPATH_W) 'print_graph.c'; else $(CYGPATH_W) '$(srcdir)/print_graph.c'; fi`; \
	then mv -f "$(DEPDIR)/graph_dialog-print_graph.Tpo" "$(DEPDIR)/graph_dialog-print_graph.Po"; else rm -f "$(DEPDIR)/graph_dialog-print_graph.Tpo"; exit 1; fi
#	source='print_graph.c' object='graph_dialog-print_graph.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-print_graph.obj `if test -f 'print_graph.c'; then $(CYGPATH_W) 'print_graph.c'; else $(CYGPATH_W) '$(srcdir)/print_graph.c'; fi`

graph_dialog-print_util.o: print_util.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-print_util.o -MD -MP -MF "$(DEPDIR)/graph_dialog-print_util.Tpo" -c -o graph_dialog-print_util.o `test -f 'print_util.c' || echo '$(srcdir)/'`print_util.c; \
	then mv -f "$(DEPDIR)/graph_dialog-print_util.Tpo" "$(DEPDIR)/graph_dialog-print_util.Po"; else rm -f "$(DEPDIR)/graph_dialog-print_util.Tpo"; exit 1; fi
#	source='print_util.c' object='graph_dialog-print_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-print_util.o `test -f 'print_util.c' || echo '$(srcdir)/'`print_util.c

graph_dialog-print_util.obj: print_util.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-print_util.obj -MD -MP -MF "$(DEPDIR)/graph_dialog-print_util.Tpo" -c -o graph_dialog-print_util.obj `if test -f 'print_util.c'; then $(CYGPATH_W) 'print_util.c'; else $(CYGPATH_W) '$(srcdir)/print_util.c'; fi`; \
	then mv -f "$(DEPDIR)/graph_dialog-print_util.Tpo" "$(DEPDIR)/graph_dialog-print_util.Po"; else rm -f "$(DEPDIR)/graph_dialog-print_util.Tpo"; exit 1; fi
#	source='print_util.c' object='graph_dialog-print_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-print_util.obj `if test -f 'print_util.c'; then $(CYGPATH_W) 'print_util.c'; else $(CYGPATH_W) '$(srcdir)/print_util.c'; fi`

graph_dialog-print_preview.o: print_preview.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-print_preview.o -MD -MP -MF "$(DEPDIR)/graph_dialog-print_preview.Tpo" -c -o graph_dialog-print_preview.o `test -f 'print_preview.c' || echo '$(srcdir)/'`print_preview.c; \
	then mv -f "$(DEPDIR)/graph_dialog-print_preview.Tpo" "$(DEPDIR)/graph_dialog-print_preview.Po"; else rm -f "$(DEPDIR)/graph_dialog-print_preview.Tpo"; exit 1; fi
#	source='print_preview.c' object='graph_dialog-print_preview.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-print_preview.o `test -f 'print_preview.c' || echo '$(srcdir)/'`print_preview.c

graph_dialog-print_preview.obj: print_preview.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-print_preview.obj -MD -MP -MF "$(DEPDIR)/graph_dialog-print_preview.Tpo" -c -o graph_dialog-print_preview.obj `if test -f 'print_preview.c'; then $(CYGPATH_W) 'print_preview.c'; else $(CYGPATH_W) '$(srcdir)/print_preview.c'; fi`; \
	then mv -f "$(DEPDIR)/graph_dialog-print_preview.Tpo" "$(DEPDIR)/graph_dialog-print_preview.Po"; else rm -f "$(DEPDIR)/graph_dialog-print_preview.Tpo"; exit 1; fi
#	source='print_preview.c' object='graph_dialog-print_preview.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-print_preview.obj `if test -f 'print_preview.c'; then $(CYGPATH_W) 'print_preview.c'; else $(CYGPATH_W) '$(srcdir)/print_preview.c'; fi`

graph_dialog-file_selection_window.o: file_selection_window.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-file_selection_window.o -MD -MP -MF "$(DEPDIR)/graph_dialog-file_selection_window.Tpo" -c -o graph_dialog-file_selection_window.o `test -f 'file_selection_window.c' || echo '$(srcdir)/'`file_selection_window.c; \
	then mv -f "$(DEPDIR)/graph_dialog-file_selection_window.Tpo" "$(DEPDIR)/graph_dialog-file_selection_window.Po"; else rm -f "$(DEPDIR)/graph_dialog-file_selection_window.Tpo"; exit 1; fi
#	source='file_selection_window.c' object='graph_dialog-file_selection_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-file_selection_window.o `test -f 'file_selection_window.c' || echo '$(srcdir)/'`file_selection_window.c

graph_dialog-file_selection_window.obj: file_selection_window.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-file_selection_window.obj -MD -MP -MF "$(DEPDIR)/graph_dialog-file_selection_window.Tpo" -c -o graph_dialog-file_selection_window.obj `if test -f 'file_selection_window.c'; then $(CYGPATH_W) 'file_selection_window.c'; else $(CYGPATH_W) '$(srcdir)/file_selection_window.c'; fi`; \
	then mv -f "$(DEPDIR)/graph_dialog-file_selection_window.Tpo" "$(DEPDIR)/graph_dialog-file_selection_window.Po"; else rm -f "$(DEPDIR)/graph_dialog-file_selection_window.Tpo"; exit 1; fi
#	source='file_selection_window.c' object='graph_dialog-file_selection_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-file_selection_window.obj `if test -f 'file_selection_window.c'; then $(CYGPATH_W) 'file_selection_window.c'; else $(CYGPATH_W) '$(srcdir)/file_selection_window.c'; fi`

graph_dialog-bus_layout_dialog.o: bus_layout_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-bus_layout_dialog.o -MD -MP -MF "$(DEPDIR)/graph_dialog-bus_layout_dialog.Tpo" -c -o graph_dialog-bus_layout_dialog.o `test -f 'bus_layout_dialog.c' || echo '$(srcdir)/'`bus_layout_dialog.c; \
	then mv -f "$(DEPDIR)/graph_dialog-bus_layout_dialog.Tpo" "$(DEPDIR)/graph_dialog-bus_layout_dialog.Po"; else rm -f "$(DEPDIR)/graph_dialog-bus_layout_dialog.Tpo"; exit 1; fi
#	source='bus_layout_dialog.c' object='graph_dialog-bus_layout_dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-bus_layout_dialog.o `test -f 'bus_layout_dialog.c' || echo '$(srcdir)/'`bus_layout_dialog.c

graph_dialog-bus_layout_dialog.obj: bus_layout_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-bus_layout_dialog.obj -MD -MP -MF "$(DEPDIR)/graph_dialog-bus_layout_dialog.Tpo" -c -o graph_dialog-bus_layout_dialog.obj `if test -f 'bus_layout_dialog.c'; then $(CYGPATH_W) 'bus_layout_dialog.c'; else $(CYGPATH_W) '$(srcdir)/bus_layout_dialog.c'; fi`; \
	then mv -f "$(DEPDIR)/graph_dialog-bus_layout_dialog.Tpo" "$(DEPDIR)/graph_dialog-bus_layout_dialog.Po"; else rm -f "$(DEPDIR)/graph_dialog-bus_layout_dialog.Tpo"; exit 1; fi
#	source='bus_layout_dialog.c' object='graph_dialog-bus_layout_dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-bus_layout_dialog.obj `if test -f 'bus_layout_dialog.c'; then $(CYGPATH_W) 'bus_layout_dialog.c'; else $(CYGPATH_W) '$(srcdir)/bus_layout_dialog.c'; fi`

objects/graph_dialog-QCADRadioButton.o: objects/QCADRadioButton.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADRadioButton.o -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADRadioButton.Tpo" -c -o objects/graph_dialog-QCADRadioButton.o `test -f 'objects/QCADRadioButton.c' || echo '$(srcdir)/'`objects/QCADRadioButton.c; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADRadioButton.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADRadioButton.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADRadioButton.Tpo"; exit 1; fi
#	source='objects/QCADRadioButton.c' object='objects/graph_dialog-QCADRadioButton.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADRadioButton.o `test -f 'objects/QCADRadioButton.c' || echo '$(srcdir)/'`objects/QCADRadioButton.c

objects/graph_dialog-QCADRadioButton.obj: objects/QCADRadioButton.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADRadioButton.obj -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADRadioButton.Tpo" -c -o objects/graph_dialog-QCADRadioButton.obj `if test -f 'objects/QCADRadioButton.c'; then $(CYGPATH_W) 'objects/QCADRadioButton.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADRadioButton.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADRadioButton.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADRadioButton.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADRadioButton.Tpo"; exit 1; fi
#	source='objects/QCADRadioButton.c' object='objects/graph_dialog-QCADRadioButton.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADRadioButton.obj `if test -f 'objects/QCADRadioButton.c'; then $(CYGPATH_W) 'objects/QCADRadioButton.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADRadioButton.c'; fi`

objects/graph_dialog-QCADRadioToolButton.o: objects/QCADRadioToolButton.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADRadioToolButton.o -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADRadioToolButton.Tpo" -c -o objects/graph_dialog-QCADRadioToolButton.o `test -f 'objects/QCADRadioToolButton.c' || echo '$(srcdir)/'`objects/QCADRadioToolButton.c; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADRadioToolButton.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADRadioToolButton.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADRadioToolButton.Tpo"; exit 1; fi
#	source='objects/QCADRadioToolButton.c' object='objects/graph_dialog-QCADRadioToolButton.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADRadioToolButton.o `test -f 'objects/QCADRadioToolButton.c' || echo '$(srcdir)/'`objects/QCADRadioToolButton.c

objects/graph_dialog-QCADRadioToolButton.obj: objects/QCADRadioToolButton.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT objects/graph_dialog-QCADRadioToolButton.obj -MD -MP -MF "objects/$(DEPDIR)/graph_dialog-QCADRadioToolButton.Tpo" -c -o objects/graph_dialog-QCADRadioToolButton.obj `if test -f 'objects/QCADRadioToolButton.c'; then $(CYGPATH_W) 'objects/QCADRadioToolButton.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADRadioToolButton.c'; fi`; \
	then mv -f "objects/$(DEPDIR)/graph_dialog-QCADRadioToolButton.Tpo" "objects/$(DEPDIR)/graph_dialog-QCADRadioToolButton.Po"; else rm -f "objects/$(DEPDIR)/graph_dialog-QCADRadioToolButton.Tpo"; exit 1; fi
#	source='objects/QCADRadioToolButton.c' object='objects/graph_dialog-QCADRadioToolButton.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o objects/graph_dialog-QCADRadioToolButton.obj `if test -f 'objects/QCADRadioToolButton.c'; then $(CYGPATH_W) 'objects/QCADRadioToolButton.c'; else $(CYGPATH_W) '$(srcdir)/objects/QCADRadioToolButton.c'; fi`

graph_dialog-main_graph_dialog.o: main_graph_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-main_graph_dialog.o -MD -MP -MF "$(DEPDIR)/graph_dialog-main_graph_dialog.Tpo" -c -o graph_dialog-main_graph_dialog.o `test -f 'main_graph_dialog.c' || echo '$(srcdir)/'`main_graph_dialog.c; \
	then mv -f "$(DEPDIR)/graph_dialog-main_graph_dialog.Tpo" "$(DEPDIR)/graph_dialog-main_graph_dialog.Po"; else rm -f "$(DEPDIR)/graph_dialog-main_graph_dialog.Tpo"; exit 1; fi
#	source='main_graph_dialog.c' object='graph_dialog-main_graph_dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-main_graph_dialog.o `test -f 'main_graph_dialog.c' || echo '$(srcdir)/'`main_graph_dialog.c

graph_dialog-main_graph_dialog.obj: main_graph_dialog.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -MT graph_dialog-main_graph_dialog.obj -MD -MP -MF "$(DEPDIR)/graph_dialog-main_graph_dialog.Tpo" -c -o graph_dialog-main_graph_dialog.obj `if test -f 'main_graph_dialog.c'; then $(CYGPATH_W) 'main_graph_dialog.c'; else $(CYGPATH_W) '$(srcdir)/main_graph_dialog.c'; fi`; \
	then mv -f "$(DEPDIR)/graph_dialog-main_graph_dialog.Tpo" "$(DEPDIR)/graph_dialog-main_graph_dialog.Po"; else rm -f "$(DEPDIR)/graph_dialog-main_graph_dialog.Tpo"; exit 1; fi
#	source='main_graph_dialog.c' object='graph_dialog-main_graph_dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(graph_dialog_CFLAGS) $(CFLAGS) -c -o graph_dialog-main_graph_dialog.obj `if test -f 'main_graph_dialog.c'; then $(CYGPATH_W) 'main_graph_dialog.c'; else $(CYGPATH_W) '$(srcdir)/main_graph_dialog.c'; fi`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-rm -f actions/$(DEPDIR)/$(am__dirstamp)
	-rm -f actions/$(am__dirstamp)
	-rm -f objects/$(DEPDIR)/$(am__dirstamp)
	-rm -f objects/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR) actions/$(DEPDIR) objects/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS install-libLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR) actions/$(DEPDIR) objects/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am \
	uninstall-libLIBRARIES

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-exec \
	install-exec-am install-info install-info-am \
	install-libLIBRARIES install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am \
	uninstall-libLIBRARIES


# libgtkdocfiles_a_LIBADD = \
#  	-lm \
#  	-L/lib64 -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lm -lpangocairo-1.0 -lpango-1.0 -lcairo -lgobject-2.0 -lgmodule-2.0 -ldl -lglib-2.0   \
#  	$(INTLLIBS) \
#  	-pthread -L/lib64 -lgthread-2.0 -lglib-2.0   
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
